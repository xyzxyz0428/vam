# RWW configuration file. Conforms with libconfig format.
#

Example =
{
  # ITS functionality
  ITS = {
    // Enable/Disable switch for the entire module
    Enable = true;

    Facilities = {
      // Regular CAMs
      CAM = {
        Enabled = true;
      };
      // Config for Stationary R-ITS
      DENM = {
        Enabled = true;

        RefDENMs = false;

        // RWW
        RWW = {
          Enabled = true;

          OriginatingStationId     = 0x10000000;
          SequenceNumber           = 32769;

          Duration                 = 60;    # Sec
          UpdatePeriod             = 30000; # mSec
          RepInterval              = 1000;  # mSec
	  EventOffsetAbsolute      = 0;     # 0=traces, eventHistory, startingPointSpeedLimit are relative values
	  		      	            # 1=traces, eventHistory, startingPointSpeedLimit are absolute values
          RelativeOffsetCumulative = 0;     # 0=offsets are relative to previous point
                                            # 1=offsets are relative to event position (Legacy feature)
          EventPositionSource      = 0;     # 0=use current GNSS position
                                            # 1=use config position,
          EventLatitude            = 0;     # Lat in tenths of microdegrees (if EventPositionSource = 1)
          EventLongitude           = 0;     # Long in tenths of microdegrees (if EventPositionSource = 1)
          EventAltitude            = 0;     # in centimetres (if EventPositionSource = 1)
          TrafficClass             = 0x01;  # DP1, no SCF
          InformationQuality       = 2;     # quality = 2
          LanePosition             = 1;     # -1=offTheRoad
                                            # 0=hardShoulder
                                            # 1=outermostDrivingLane
                                            # ...
                                            # 14=innerMostDrivingLane
          SubCauseCode        = 4;          # 3=slowMovingRoadMaintenence
                                            # 4=shortTermStationaryRoadworks
          RelevanceTrafficDirection = 1;    # 0=All directions, 1=upstreamTraffic,
                                            # 2=downStreamTraffic, 3=oppositeTraffic
          RelevanceDistance = 4;            # 1=less than  100m, 2=less than 200m, 3=less than 500m,
                                            # 4=less than 1000m, 5=less than  5km, 6=less than 10km,
                                            # 7=over10km
          EventHeadingOption = 2            # 0 = Don't include EventHeading (e.g. shortTermStationaryRoadworks)
                                            # 1 = Use LPH (HV) Heading for EventHeading (e.g. slowMovingRoadMaintenence)
                                            # 2 = Use Provided EventHeading
          EventHeading      = 899;          # tenths-degrees (if EventHeadingOption = 2)
          ClosedLanesOption = true;
          ClosedLanes                   = [ 1, 0, 0, 0 ]; # List of up to 13 lanes specifying
                                                             # 1=closed, 0=open. [ innerMost, ..., outerMost ]
                                                             # where innerMost means next to the centre of the carriageway, central
                                                             # reservation, median or whatever...
                                                             #
                                                             # example: ClosedLanes = [ 1, 0, 0, 0 ]
                                                             # means: All lanes open except innerMost
                                                             #
                                                             # Mainland EU/US:
                                                             #             ||           |          |          |           |              ||
                                                             #   Median    || InnerMost |          |          | OuterMost |    Outer     ||
                                                             #   Strip     ||  (Fast)   |          |          |  (Slow)   | HardShoulder ||
                                                             #             ||           |          |          |           |              ||
                                                             #             ||  CLOSED   |   OPEN   |   OPEN   |   OPEN    |              ||
                                                             #
                                                             # Japan/Aus/UK:
                                                             # ||              |           |          |           |           ||
                                                             # ||    Outer     | OuterMost |          |           | InnerMost || Central
                                                             # || HardShoulder |  (Slow)   |          |           |   (Fast)  || Reservation
                                                             # ||              |           |          |           |           ||
                                                             # ||              |   OPEN    |   OPEN   |   OPEN    |  CLOSED   ||
          SpeedLimitOption  = true;
          SpeedLimit        = 25;           # units in km/h
          StartingPointSpeedLimitOption = true;
          StartingPointSpeedLimit = (       # position from the eventPosition
                                            # indicating where the speed limit starts.
            { Latitude = 0, Longitude = 0, Altitude = 0} );
          TrafficFlowRuleOption = false;
          TrafficFlowRule       = 3;        # 0=noPassing,   1=noPassingForTrucks,
                                            # 2=passToRight, 3=passToLeft
          OuterHardShoulderStatus = 0;      # 0=availableForStopping, 1=closed,
                                            # 2=availableForDriving
          EventHistory = (                  # Event points from event position
                                            # InformationQuality 0 = unavailable,
                                            #                    1 = lowest,
                                            #                    7 = highest
            { Latitude = 0, Longitude = 5640, Altitude = 0, InformationQuality = 7},
            { Latitude = 0, Longitude =  639, Altitude = 0, InformationQuality = 7},
            { Latitude = 0, Longitude = 1254, Altitude = 0, InformationQuality = 7},
            { Latitude = 0, Longitude = 1096, Altitude = 0, InformationQuality = 7},
            { Latitude = 0, Longitude = 1097, Altitude = 0, InformationQuality = 7},
            { Latitude = 0, Longitude = 1097, Altitude = 0, InformationQuality = 7} );
          Traces = (                        # Path History points from event position
                                            # Latitude and Longitude specified in 1/10th of a microdegree (degrees x 1e7)
                                            # Altitude specified in centimetres
            { Latitude = 0, Longitude = -2193, Altitude = 0},
            { Latitude = 0, Longitude = -2193, Altitude = 0},
            { Latitude = 0, Longitude = -2193, Altitude = 0},
            { Latitude = 0, Longitude = -2193, Altitude = 0},
            { Latitude = 0, Longitude = -2194, Altitude = 0} );
        };
      };

    }; // Facilities
  }; // ITS

}; // Example
