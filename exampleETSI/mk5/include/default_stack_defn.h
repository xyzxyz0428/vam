#pragma once
/**
 * @addtogroup conf_if_module_default_stack default_stack Configuration service
 * @{
 *
 * @file
 *
 * Configuration file parameters for default_stack
 */
//------------------------------------------------------------------------------
// Copyright (c) 2021 Cohda Wireless Pty Ltd
//-----------------------------------------------------------------------------
#define default_stack_CRC (0xa925ce0cb8af057full)
#include "default_stack_debug.h"

#include "conf_if.h"
#include "conf_common.h"

#include "conf_common.h" // for blobs

#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <string.h>
#ifdef __cplusplus
extern "C"
{
#endif

bool default_stack_CheckCRC(uint64_t CRC);

#define default_stack_PreRecFileName_PARAM "PreRecFileName"
#define default_stack_PreRecFileName_DEF ""

#define default_stack_ProtocolMode_PARAM "ProtocolMode"
#define default_stack_ProtocolMode_MIN -1
#define default_stack_ProtocolMode_DEF -1
#define default_stack_ProtocolMode_MAX 15
#define default_stack_ProtocolMode_ITS (0)
#define default_stack_ProtocolMode_1609 (1)
#define default_stack_ProtocolMode_SAEC (2)

#define default_stack_EnableTxRx_PARAM "EnableTxRx"
#define default_stack_EnableTxRx_MIN 0
#define default_stack_EnableTxRx_DEF 3
#define default_stack_EnableTxRx_MAX 3
#define default_stack_EnableTxRx_Both_disabled (0)
#define default_stack_EnableTxRx_Tx_only_enabled (1)
#define default_stack_EnableTxRx_Rx_only_enabled (2)
#define default_stack_EnableTxRx_Tx_and_Rx_enabled (3)

#define default_stack_MACAddr_PARAM "MACAddr"
#define default_stack_MACAddr_DEF ""

#define default_stack_TxPwrLevel_dBm_PARAM "TxPwrLevel_dBm"
#define default_stack_TxPwrLevel_dBm_MIN -10
#define default_stack_TxPwrLevel_dBm_DEF 24
#define default_stack_TxPwrLevel_dBm_MAX 33

#define default_stack_TxDataRate_PARAM "TxDataRate"
#define default_stack_TxDataRate_MIN 6
#define default_stack_TxDataRate_DEF 12
#define default_stack_TxDataRate_MAX 54
#define default_stack_TxDataRate_3Mbps (6)
#define default_stack_TxDataRate_4_5Mbps (9)
#define default_stack_TxDataRate_6Mbps (12)
#define default_stack_TxDataRate_9Mbps (18)
#define default_stack_TxDataRate_12Mbps (24)
#define default_stack_TxDataRate_18Mbps (36)
#define default_stack_TxDataRate_24Mbps (48)
#define default_stack_TxDataRate_28Mbps (54)

#define default_stack_AC_BE_CWminKVal_PARAM "AC_BE_CWminKVal"
#define default_stack_AC_BE_CWminKVal_MIN 1
#define default_stack_AC_BE_CWminKVal_DEF 4
#define default_stack_AC_BE_CWminKVal_MAX 10

#define default_stack_AC_BE_CWmaxKVal_PARAM "AC_BE_CWmaxKVal"
#define default_stack_AC_BE_CWmaxKVal_MIN 1
#define default_stack_AC_BE_CWmaxKVal_DEF 10
#define default_stack_AC_BE_CWmaxKVal_MAX 10

#define default_stack_AC_BE_AIFSN_PARAM "AC_BE_AIFSN"
#define default_stack_AC_BE_AIFSN_MIN 2
#define default_stack_AC_BE_AIFSN_DEF 6
#define default_stack_AC_BE_AIFSN_MAX 15

#define default_stack_AC_BK_CWminKVal_PARAM "AC_BK_CWminKVal"
#define default_stack_AC_BK_CWminKVal_MIN 1
#define default_stack_AC_BK_CWminKVal_DEF 4
#define default_stack_AC_BK_CWminKVal_MAX 10

#define default_stack_AC_BK_CWmaxKVal_PARAM "AC_BK_CWmaxKVal"
#define default_stack_AC_BK_CWmaxKVal_MIN 1
#define default_stack_AC_BK_CWmaxKVal_DEF 10
#define default_stack_AC_BK_CWmaxKVal_MAX 10

#define default_stack_AC_BK_AIFSN_PARAM "AC_BK_AIFSN"
#define default_stack_AC_BK_AIFSN_MIN 2
#define default_stack_AC_BK_AIFSN_DEF 9
#define default_stack_AC_BK_AIFSN_MAX 15

#define default_stack_AC_VI_CWminKVal_PARAM "AC_VI_CWminKVal"
#define default_stack_AC_VI_CWminKVal_MIN 1
#define default_stack_AC_VI_CWminKVal_DEF 4
#define default_stack_AC_VI_CWminKVal_MAX 10

#define default_stack_AC_VI_CWmaxKVal_PARAM "AC_VI_CWmaxKVal"
#define default_stack_AC_VI_CWmaxKVal_MIN 1
#define default_stack_AC_VI_CWmaxKVal_DEF 10
#define default_stack_AC_VI_CWmaxKVal_MAX 10

#define default_stack_AC_VI_AIFSN_PARAM "AC_VI_AIFSN"
#define default_stack_AC_VI_AIFSN_MIN 2
#define default_stack_AC_VI_AIFSN_DEF 4
#define default_stack_AC_VI_AIFSN_MAX 15

#define default_stack_AC_VO_CWminKVal_PARAM "AC_VO_CWminKVal"
#define default_stack_AC_VO_CWminKVal_MIN 1
#define default_stack_AC_VO_CWminKVal_DEF 2
#define default_stack_AC_VO_CWminKVal_MAX 10

#define default_stack_AC_VO_CWmaxKVal_PARAM "AC_VO_CWmaxKVal"
#define default_stack_AC_VO_CWmaxKVal_MIN 1
#define default_stack_AC_VO_CWmaxKVal_DEF 3
#define default_stack_AC_VO_CWmaxKVal_MAX 10

#define default_stack_AC_VO_AIFSN_PARAM "AC_VO_AIFSN"
#define default_stack_AC_VO_AIFSN_MIN 2
#define default_stack_AC_VO_AIFSN_DEF 2
#define default_stack_AC_VO_AIFSN_MAX 15

#define default_stack_TxAntenna_PARAM "TxAntenna"
#define default_stack_TxAntenna_MIN 0
#define default_stack_TxAntenna_DEF 3
#define default_stack_TxAntenna_MAX 3
#define default_stack_TxAntenna_Default (0)
#define default_stack_TxAntenna_ANT1 (1)
#define default_stack_TxAntenna_ANT2 (2)
#define default_stack_TxAntenna_ANT1_ANT2 (3)

#define default_stack_RxAntenna_PARAM "RxAntenna"
#define default_stack_RxAntenna_MIN 0
#define default_stack_RxAntenna_DEF 3
#define default_stack_RxAntenna_MAX 3
#define default_stack_RxAntenna_Default (0)
#define default_stack_RxAntenna_ANT1 (1)
#define default_stack_RxAntenna_ANT2 (2)
#define default_stack_RxAntenna_ANT1_ANT2 (3)

#define default_stack_CSThreshold_dBm_PARAM "CSThreshold_dBm"
#define default_stack_CSThreshold_dBm_MIN -95
#define default_stack_CSThreshold_dBm_DEF -65
#define default_stack_CSThreshold_dBm_MAX -65

#define default_stack_CBRThreshold_dBm_PARAM "CBRThreshold_dBm"
#define default_stack_CBRThreshold_dBm_MIN -95
#define default_stack_CBRThreshold_dBm_DEF -85
#define default_stack_CBRThreshold_dBm_MAX -65

#define default_stack_CCH_TxPwrLevel_dBm_PARAM "CCH_TxPwrLevel_dBm"
#define default_stack_CCH_TxPwrLevel_dBm_MIN -10
#define default_stack_CCH_TxPwrLevel_dBm_DEF 24
#define default_stack_CCH_TxPwrLevel_dBm_MAX 33

#define default_stack_CCH_AC_BE_CWminKVal_PARAM "CCH_AC_BE_CWminKVal"
#define default_stack_CCH_AC_BE_CWminKVal_MIN 1
#define default_stack_CCH_AC_BE_CWminKVal_DEF 4
#define default_stack_CCH_AC_BE_CWminKVal_MAX 10

#define default_stack_CCH_AC_BE_CWmaxKVal_PARAM "CCH_AC_BE_CWmaxKVal"
#define default_stack_CCH_AC_BE_CWmaxKVal_MIN 1
#define default_stack_CCH_AC_BE_CWmaxKVal_DEF 10
#define default_stack_CCH_AC_BE_CWmaxKVal_MAX 10

#define default_stack_CCH_AC_BE_AIFSN_PARAM "CCH_AC_BE_AIFSN"
#define default_stack_CCH_AC_BE_AIFSN_MIN 2
#define default_stack_CCH_AC_BE_AIFSN_DEF 6
#define default_stack_CCH_AC_BE_AIFSN_MAX 15

#define default_stack_CCH_AC_BK_CWminKVal_PARAM "CCH_AC_BK_CWminKVal"
#define default_stack_CCH_AC_BK_CWminKVal_MIN 1
#define default_stack_CCH_AC_BK_CWminKVal_DEF 4
#define default_stack_CCH_AC_BK_CWminKVal_MAX 10

#define default_stack_CCH_AC_BK_CWmaxKVal_PARAM "CCH_AC_BK_CWmaxKVal"
#define default_stack_CCH_AC_BK_CWmaxKVal_MIN 1
#define default_stack_CCH_AC_BK_CWmaxKVal_DEF 10
#define default_stack_CCH_AC_BK_CWmaxKVal_MAX 10

#define default_stack_CCH_AC_BK_AIFSN_PARAM "CCH_AC_BK_AIFSN"
#define default_stack_CCH_AC_BK_AIFSN_MIN 2
#define default_stack_CCH_AC_BK_AIFSN_DEF 9
#define default_stack_CCH_AC_BK_AIFSN_MAX 15

#define default_stack_CCH_AC_VI_CWminKVal_PARAM "CCH_AC_VI_CWminKVal"
#define default_stack_CCH_AC_VI_CWminKVal_MIN 1
#define default_stack_CCH_AC_VI_CWminKVal_DEF 3
#define default_stack_CCH_AC_VI_CWminKVal_MAX 10

#define default_stack_CCH_AC_VI_CWmaxKVal_PARAM "CCH_AC_VI_CWmaxKVal"
#define default_stack_CCH_AC_VI_CWmaxKVal_MIN 1
#define default_stack_CCH_AC_VI_CWmaxKVal_DEF 4
#define default_stack_CCH_AC_VI_CWmaxKVal_MAX 10

#define default_stack_CCH_AC_VI_AIFSN_PARAM "CCH_AC_VI_AIFSN"
#define default_stack_CCH_AC_VI_AIFSN_MIN 2
#define default_stack_CCH_AC_VI_AIFSN_DEF 3
#define default_stack_CCH_AC_VI_AIFSN_MAX 15

#define default_stack_CCH_AC_VO_CWminKVal_PARAM "CCH_AC_VO_CWminKVal"
#define default_stack_CCH_AC_VO_CWminKVal_MIN 1
#define default_stack_CCH_AC_VO_CWminKVal_DEF 2
#define default_stack_CCH_AC_VO_CWminKVal_MAX 10

#define default_stack_CCH_AC_VO_CWmaxKVal_PARAM "CCH_AC_VO_CWmaxKVal"
#define default_stack_CCH_AC_VO_CWmaxKVal_MIN 1
#define default_stack_CCH_AC_VO_CWmaxKVal_DEF 3
#define default_stack_CCH_AC_VO_CWmaxKVal_MAX 10

#define default_stack_CCH_AC_VO_AIFSN_PARAM "CCH_AC_VO_AIFSN"
#define default_stack_CCH_AC_VO_AIFSN_MIN 2
#define default_stack_CCH_AC_VO_AIFSN_DEF 2
#define default_stack_CCH_AC_VO_AIFSN_MAX 15

#define default_stack_CCH_TxAntenna_PARAM "CCH_TxAntenna"
#define default_stack_CCH_TxAntenna_MIN 0
#define default_stack_CCH_TxAntenna_DEF 3
#define default_stack_CCH_TxAntenna_MAX 3

#define default_stack_CCH_RxAntenna_PARAM "CCH_RxAntenna"
#define default_stack_CCH_RxAntenna_MIN 0
#define default_stack_CCH_RxAntenna_DEF 3
#define default_stack_CCH_RxAntenna_MAX 3

#define default_stack_CCH_DualTxControl_PARAM "CCH_DualTxControl"
#define default_stack_CCH_DualTxControl_MIN 0
#define default_stack_CCH_DualTxControl_DEF 3
#define default_stack_CCH_DualTxControl_MAX 3

#define default_stack_SCH_TxPwrLevel_dBm_PARAM "SCH_TxPwrLevel_dBm"
#define default_stack_SCH_TxPwrLevel_dBm_MIN -10
#define default_stack_SCH_TxPwrLevel_dBm_DEF 24
#define default_stack_SCH_TxPwrLevel_dBm_MAX 33

#define default_stack_SCH_AC_BE_CWminKVal_PARAM "SCH_AC_BE_CWminKVal"
#define default_stack_SCH_AC_BE_CWminKVal_MIN 1
#define default_stack_SCH_AC_BE_CWminKVal_DEF 4
#define default_stack_SCH_AC_BE_CWminKVal_MAX 10

#define default_stack_SCH_AC_BE_CWmaxKVal_PARAM "SCH_AC_BE_CWmaxKVal"
#define default_stack_SCH_AC_BE_CWmaxKVal_MIN 1
#define default_stack_SCH_AC_BE_CWmaxKVal_DEF 10
#define default_stack_SCH_AC_BE_CWmaxKVal_MAX 10

#define default_stack_SCH_AC_BE_AIFSN_PARAM "SCH_AC_BE_AIFSN"
#define default_stack_SCH_AC_BE_AIFSN_MIN 2
#define default_stack_SCH_AC_BE_AIFSN_DEF 6
#define default_stack_SCH_AC_BE_AIFSN_MAX 15

#define default_stack_SCH_AC_BK_CWminKVal_PARAM "SCH_AC_BK_CWminKVal"
#define default_stack_SCH_AC_BK_CWminKVal_MIN 1
#define default_stack_SCH_AC_BK_CWminKVal_DEF 4
#define default_stack_SCH_AC_BK_CWminKVal_MAX 10

#define default_stack_SCH_AC_BK_CWmaxKVal_PARAM "SCH_AC_BK_CWmaxKVal"
#define default_stack_SCH_AC_BK_CWmaxKVal_MIN 1
#define default_stack_SCH_AC_BK_CWmaxKVal_DEF 10
#define default_stack_SCH_AC_BK_CWmaxKVal_MAX 10

#define default_stack_SCH_AC_BK_AIFSN_PARAM "SCH_AC_BK_AIFSN"
#define default_stack_SCH_AC_BK_AIFSN_MIN 2
#define default_stack_SCH_AC_BK_AIFSN_DEF 9
#define default_stack_SCH_AC_BK_AIFSN_MAX 15

#define default_stack_SCH_AC_VI_CWminKVal_PARAM "SCH_AC_VI_CWminKVal"
#define default_stack_SCH_AC_VI_CWminKVal_MIN 1
#define default_stack_SCH_AC_VI_CWminKVal_DEF 3
#define default_stack_SCH_AC_VI_CWminKVal_MAX 10

#define default_stack_SCH_AC_VI_CWmaxKVal_PARAM "SCH_AC_VI_CWmaxKVal"
#define default_stack_SCH_AC_VI_CWmaxKVal_MIN 1
#define default_stack_SCH_AC_VI_CWmaxKVal_DEF 4
#define default_stack_SCH_AC_VI_CWmaxKVal_MAX 10

#define default_stack_SCH_AC_VI_AIFSN_PARAM "SCH_AC_VI_AIFSN"
#define default_stack_SCH_AC_VI_AIFSN_MIN 2
#define default_stack_SCH_AC_VI_AIFSN_DEF 3
#define default_stack_SCH_AC_VI_AIFSN_MAX 15

#define default_stack_SCH_AC_VO_CWminKVal_PARAM "SCH_AC_VO_CWminKVal"
#define default_stack_SCH_AC_VO_CWminKVal_MIN 1
#define default_stack_SCH_AC_VO_CWminKVal_DEF 2
#define default_stack_SCH_AC_VO_CWminKVal_MAX 10

#define default_stack_SCH_AC_VO_CWmaxKVal_PARAM "SCH_AC_VO_CWmaxKVal"
#define default_stack_SCH_AC_VO_CWmaxKVal_MIN 1
#define default_stack_SCH_AC_VO_CWmaxKVal_DEF 3
#define default_stack_SCH_AC_VO_CWmaxKVal_MAX 10

#define default_stack_SCH_AC_VO_AIFSN_PARAM "SCH_AC_VO_AIFSN"
#define default_stack_SCH_AC_VO_AIFSN_MIN 2
#define default_stack_SCH_AC_VO_AIFSN_DEF 2
#define default_stack_SCH_AC_VO_AIFSN_MAX 15

#define default_stack_SCH_TxAntenna_PARAM "SCH_TxAntenna"
#define default_stack_SCH_TxAntenna_MIN 0
#define default_stack_SCH_TxAntenna_DEF 3
#define default_stack_SCH_TxAntenna_MAX 3

#define default_stack_SCH_RxAntenna_PARAM "SCH_RxAntenna"
#define default_stack_SCH_RxAntenna_MIN 0
#define default_stack_SCH_RxAntenna_DEF 3
#define default_stack_SCH_RxAntenna_MAX 3

#define default_stack_SCH_DualTxControl_PARAM "SCH_DualTxControl"
#define default_stack_SCH_DualTxControl_MIN 0
#define default_stack_SCH_DualTxControl_DEF 3
#define default_stack_SCH_DualTxControl_MAX 3

#define default_stack_SecurityEnable_PARAM "SecurityEnable"
#define default_stack_SecurityEnable_DEF true

#define default_stack_SendUnsecuredDot2Header_PARAM "SendUnsecuredDot2Header"
#define default_stack_SendUnsecuredDot2Header_DEF false

#define default_stack_VerificationInterval_s_PARAM "VerificationInterval_s"
#define default_stack_VerificationInterval_s_MIN 1
#define default_stack_VerificationInterval_s_DEF 1
#define default_stack_VerificationInterval_s_MAX 60

#define default_stack_VerificationJitter_ms_PARAM "VerificationJitter_ms"
#define default_stack_VerificationJitter_ms_MIN 0
#define default_stack_VerificationJitter_ms_DEF 100
#define default_stack_VerificationJitter_ms_MAX 1000

#define default_stack_VerFailMsgParseFlag_PARAM "VerFailMsgParseFlag"
#define default_stack_VerFailMsgParseFlag_DEF false

#define default_stack_RandMAC_PARAM "RandMAC"
#define default_stack_RandMAC_DEF true

#define default_stack_RandTemporaryID_PARAM "RandTemporaryID"
#define default_stack_RandTemporaryID_DEF true

#define default_stack_RandMsgCount_PARAM "RandMsgCount"
#define default_stack_RandMsgCount_DEF true

#define default_stack_P2PCertPSID_PARAM "P2PCertPSID"
#define default_stack_P2PCertPSID_MIN 0x0ul
#define default_stack_P2PCertPSID_DEF 0x8008ul
#define default_stack_P2PCertPSID_MAX 0xeffffffful

#define default_stack_WSMP_DA_PARAM "WSMP_DA"
#define default_stack_WSMP_DA_DEF "ff:ff:ff:ff:ff:ff"

#define default_stack_WSMP_Priority_PARAM "WSMP_Priority"
#define default_stack_WSMP_Priority_MIN 0
#define default_stack_WSMP_Priority_DEF 2
#define default_stack_WSMP_Priority_MAX 7

#define default_stack_WSMP_ChannelNumber_PARAM "WSMP_ChannelNumber"
#define default_stack_WSMP_ChannelNumber_MIN 150
#define default_stack_WSMP_ChannelNumber_DEF 172
#define default_stack_WSMP_ChannelNumber_MAX 184

#define default_stack_WSMP_DataRate_PARAM "WSMP_DataRate"
#define default_stack_WSMP_DataRate_MIN 6
#define default_stack_WSMP_DataRate_DEF 12
#define default_stack_WSMP_DataRate_MAX 54

#define default_stack_WSMP_TxPower_PARAM "WSMP_TxPower"
#define default_stack_WSMP_TxPower_MIN 0
#define default_stack_WSMP_TxPower_DEF 24
#define default_stack_WSMP_TxPower_MAX 33

#define default_stack_WSMP_ExpiryTime_PARAM "WSMP_ExpiryTime"
#define default_stack_WSMP_ExpiryTime_MIN 0x0ul
#define default_stack_WSMP_ExpiryTime_DEF 0x0ul
#define default_stack_WSMP_ExpiryTime_MAX 0xfful

#define default_stack_WSMP_WAVEElementId_PARAM "WSMP_WAVEElementId"
#define default_stack_WSMP_WAVEElementId_MIN 0x80ul
#define default_stack_WSMP_WAVEElementId_DEF 0x80ul
#define default_stack_WSMP_WAVEElementId_MAX 0x81ul

#define default_stack_WSMMaxLength_PARAM "WSMMaxLength"
#define default_stack_WSMMaxLength_MIN 0
#define default_stack_WSMMaxLength_DEF 1400
#define default_stack_WSMMaxLength_MAX 2302

#define default_stack_BSMUnsecurePSID_PARAM "BSMUnsecurePSID"
#define default_stack_BSMUnsecurePSID_MIN 0x0ul
#define default_stack_BSMUnsecurePSID_DEF 0x0ul
#define default_stack_BSMUnsecurePSID_MAX 0xeffffffful

#define default_stack_BSMSecurePSID_PARAM "BSMSecurePSID"
#define default_stack_BSMSecurePSID_MIN 0x0ul
#define default_stack_BSMSecurePSID_DEF 0x20ul
#define default_stack_BSMSecurePSID_MAX 0xeffffffful

#define default_stack_BSMUserPriorityNoCriticalEvent_PARAM "BSMUserPriorityNoCriticalEvent"
#define default_stack_BSMUserPriorityNoCriticalEvent_MIN 0
#define default_stack_BSMUserPriorityNoCriticalEvent_DEF 5
#define default_stack_BSMUserPriorityNoCriticalEvent_MAX 7

#define default_stack_BSMUserPriorityCriticalEvent_PARAM "BSMUserPriorityCriticalEvent"
#define default_stack_BSMUserPriorityCriticalEvent_MIN 0
#define default_stack_BSMUserPriorityCriticalEvent_DEF 7
#define default_stack_BSMUserPriorityCriticalEvent_MAX 7

#define default_stack_WSMPSafetySuppSupport_PARAM "WSMPSafetySuppSupport"
#define default_stack_WSMPSafetySuppSupport_DEF false

#define default_stack_WSMPSafetySuppData_PARAM "WSMPSafetySuppData"
#define default_stack_WSMPSafetySuppData_MIN 0x0ul
#define default_stack_WSMPSafetySuppData_DEF 0x1ul
#define default_stack_WSMPSafetySuppData_MAX 0x7ffffffful

#define default_stack_WSMPUDPBypassHost_PARAM "WSMPUDPBypassHost"
#define default_stack_WSMPUDPBypassHost_DEF ""

#define default_stack_WSMPUDPBypassPort_PARAM "WSMPUDPBypassPort"
#define default_stack_WSMPUDPBypassPort_MIN 0
#define default_stack_WSMPUDPBypassPort_DEF 0
#define default_stack_WSMPUDPBypassPort_MAX 65535

#define default_stack_WSATxEnable_PARAM "WSATxEnable"
#define default_stack_WSATxEnable_DEF true

#define default_stack_WSARCPIHysteresisMargin_PARAM "WSARCPIHysteresisMargin"
#define default_stack_WSARCPIHysteresisMargin_MIN 10
#define default_stack_WSARCPIHysteresisMargin_DEF 20
#define default_stack_WSARCPIHysteresisMargin_MAX 200

#define default_stack_WSAIncludeRepeatRateExt_PARAM "WSAIncludeRepeatRateExt"
#define default_stack_WSAIncludeRepeatRateExt_DEF true

#define default_stack_WSAInclude2DLocationExt_PARAM "WSAInclude2DLocationExt"
#define default_stack_WSAInclude2DLocationExt_DEF false

#define default_stack_WSAInclude3DLocationExt_PARAM "WSAInclude3DLocationExt"
#define default_stack_WSAInclude3DLocationExt_DEF true

#define default_stack_WSAIncludeAdvertiserIDExt_PARAM "WSAIncludeAdvertiserIDExt"
#define default_stack_WSAIncludeAdvertiserIDExt_DEF true

#define default_stack_WSAAdvertiserID_PARAM "WSAAdvertiserID"
#define default_stack_WSAAdvertiserID_DEF "Cohda"

#define default_stack_WSAIncludeChanAccExt_PARAM "WSAIncludeChanAccExt"
#define default_stack_WSAIncludeChanAccExt_DEF true

#define default_stack_WSAIncludeEDCAExt_PARAM "WSAIncludeEDCAExt"
#define default_stack_WSAIncludeEDCAExt_DEF false

#define default_stack_WSARouterLifetime_PARAM "WSARouterLifetime"
#define default_stack_WSARouterLifetime_MIN 0
#define default_stack_WSARouterLifetime_DEF 60
#define default_stack_WSARouterLifetime_MAX 65535

#define default_stack_WSMP_LLIF_PARAM "WSMP_LLIF"
#define default_stack_WSMP_LLIF_MIN 0
#define default_stack_WSMP_LLIF_DEF 1
#define default_stack_WSMP_LLIF_MAX 6
#define default_stack_WSMP_LLIF_ETH (1)
#define default_stack_WSMP_LLIF_LLC_DSRC (2)
#define default_stack_WSMP_LLIF_ATK_DSRC (3)
#define default_stack_WSMP_LLIF_QTI_CV2X (4)
#define default_stack_WSMP_LLIF_ATK_CV2X (5)
#define default_stack_WSMP_LLIF_LLC_DSRC_DUAL (6)

#define default_stack_WME_TA_Channel_PARAM "WME_TA_Channel"
#define default_stack_WME_TA_Channel_DEF ""

#define default_stack_WME_TA_RepeatRate_PARAM "WME_TA_RepeatRate"
#define default_stack_WME_TA_RepeatRate_MIN 0
#define default_stack_WME_TA_RepeatRate_DEF 50
#define default_stack_WME_TA_RepeatRate_MAX 50

#define default_stack_ChannelMode_PARAM "ChannelMode"
#define default_stack_ChannelMode_MIN 0
#define default_stack_ChannelMode_DEF 0
#define default_stack_ChannelMode_MAX 4
#define default_stack_ChannelMode_Continuous_Channel (0)
#define default_stack_ChannelMode_Chan_Switch_Alternating_Forced (1)
#define default_stack_ChannelMode_Chan_Switch_Alternating_Conditional (2)
#define default_stack_ChannelMode_Immediate_and_Extended (3)
#define default_stack_ChannelMode_Single_radio (4)

#define default_stack_ContinuousChanNum_PARAM "ContinuousChanNum"
#define default_stack_ContinuousChanNum_MIN 1
#define default_stack_ContinuousChanNum_DEF 172
#define default_stack_ContinuousChanNum_MAX 184

#define default_stack_ForcedSerChanNum_PARAM "ForcedSerChanNum"
#define default_stack_ForcedSerChanNum_MIN 1
#define default_stack_ForcedSerChanNum_DEF 184
#define default_stack_ForcedSerChanNum_MAX 184

#define default_stack_ForcedControlChanNum_PARAM "ForcedControlChanNum"
#define default_stack_ForcedControlChanNum_MIN 1
#define default_stack_ForcedControlChanNum_DEF 178
#define default_stack_ForcedControlChanNum_MAX 184

#define default_stack_BSMEnabled_PARAM "BSMEnabled"
#define default_stack_BSMEnabled_DEF true

#define default_stack_BSMPartITxInterval_ms_PARAM "BSMPartITxInterval_ms"
#define default_stack_BSMPartITxInterval_ms_MIN 50
#define default_stack_BSMPartITxInterval_ms_DEF 100
#define default_stack_BSMPartITxInterval_ms_MAX 1000

#define default_stack_BSMPartITxRandOffset_ms_PARAM "BSMPartITxRandOffset_ms"
#define default_stack_BSMPartITxRandOffset_ms_MIN 0
#define default_stack_BSMPartITxRandOffset_ms_DEF 0
#define default_stack_BSMPartITxRandOffset_ms_MAX 5

#define default_stack_AntAdjX_m_PARAM "AntAdjX_m"
#define default_stack_AntAdjX_m_MIN -81.91
#define default_stack_AntAdjX_m_DEF 0.0
#define default_stack_AntAdjX_m_MAX 81.91

#define default_stack_AntAdjY_m_PARAM "AntAdjY_m"
#define default_stack_AntAdjY_m_MIN -2.55
#define default_stack_AntAdjY_m_DEF 0.0
#define default_stack_AntAdjY_m_MAX 2.55

#define default_stack_AntAdjZ_m_PARAM "AntAdjZ_m"
#define default_stack_AntAdjZ_m_MIN -8.191
#define default_stack_AntAdjZ_m_DEF 0.0
#define default_stack_AntAdjZ_m_MAX 8.191
#define default_stack_AntAdjZ_m_The_GPS_antenna_is_1m_above_the_road_surface (-1.0)

#define default_stack_HeadingLatchSpeed_kph_PARAM "HeadingLatchSpeed_kph"
#define default_stack_HeadingLatchSpeed_kph_MIN 0.0
#define default_stack_HeadingLatchSpeed_kph_DEF 4.0
#define default_stack_HeadingLatchSpeed_kph_MAX 10.0

#define default_stack_HeadingUnlatchSpeed_kph_PARAM "HeadingUnlatchSpeed_kph"
#define default_stack_HeadingUnlatchSpeed_kph_MIN 0.0
#define default_stack_HeadingUnlatchSpeed_kph_DEF 5.0
#define default_stack_HeadingUnlatchSpeed_kph_MAX 10.0

#define default_stack_HeadingLatchSpeedWithConfidence_PARAM "HeadingLatchSpeedWithConfidence"
#define default_stack_HeadingLatchSpeedWithConfidence_DEF false

#define default_stack_HeadingLatchHigherSpeed_kph_PARAM "HeadingLatchHigherSpeed_kph"
#define default_stack_HeadingLatchHigherSpeed_kph_MIN 0.0
#define default_stack_HeadingLatchHigherSpeed_kph_DEF 5.04
#define default_stack_HeadingLatchHigherSpeed_kph_MAX 10.0

#define default_stack_HeadingLatchHeadingConf_deg_PARAM "HeadingLatchHeadingConf_deg"
#define default_stack_HeadingLatchHeadingConf_deg_MIN 0.0
#define default_stack_HeadingLatchHeadingConf_deg_DEF 12.5
#define default_stack_HeadingLatchHeadingConf_deg_MAX 360.0

#define default_stack_HeadingPersistency_PARAM "HeadingPersistency"
#define default_stack_HeadingPersistency_DEF true

#define default_stack_HeadingUseDefault_PARAM "HeadingUseDefault"
#define default_stack_HeadingUseDefault_DEF false

#define default_stack_HeadingPersistencyTime_Mins_PARAM "HeadingPersistencyTime_Mins"
#define default_stack_HeadingPersistencyTime_Mins_MIN 0
#define default_stack_HeadingPersistencyTime_Mins_DEF 0
#define default_stack_HeadingPersistencyTime_Mins_MAX 10080
#define default_stack_HeadingPersistencyTime_Mins_Disabled (0)
#define default_stack_HeadingPersistencyTime_Mins_1Min (1)

#define default_stack_BSM_BasicVehicleClass_PARAM "BSM_BasicVehicleClass"
#define default_stack_BSM_BasicVehicleClass_MIN 0
#define default_stack_BSM_BasicVehicleClass_DEF 255
#define default_stack_BSM_BasicVehicleClass_MAX 255

#define default_stack_PcapLogSizeLimit_PARAM "PcapLogSizeLimit"
#define default_stack_PcapLogSizeLimit_MIN 0
#define default_stack_PcapLogSizeLimit_DEF 0
#define default_stack_PcapLogSizeLimit_MAX 2000
#define default_stack_PcapLogSizeLimit_No_limit (0)

#define default_stack_StatsLogEnableFlag_PARAM "StatsLogEnableFlag"
#define default_stack_StatsLogEnableFlag_DEF false

#define default_stack_ShortDescription_PARAM "ShortDescription"
#define default_stack_ShortDescription_DEF ""

#define default_stack_PcapWriteMetrics_PARAM "PcapWriteMetrics"
#define default_stack_PcapWriteMetrics_DEF false

#define default_stack_PcapWriteCounters_PARAM "PcapWriteCounters"
#define default_stack_PcapWriteCounters_DEF false

#define default_stack_TxALogEnableFlag_PARAM "TxALogEnableFlag"
#define default_stack_TxALogEnableFlag_DEF true

#define default_stack_TxALogFileName_PARAM "TxALogFileName"
#define default_stack_TxALogFileName_DEF "tx_r1a.pcap"

#define default_stack_TxALogNumFiles_PARAM "TxALogNumFiles"
#define default_stack_TxALogNumFiles_MIN 0
#define default_stack_TxALogNumFiles_DEF 0
#define default_stack_TxALogNumFiles_MAX 65535

#define default_stack_TxALogSizeLimit_PARAM "TxALogSizeLimit"
#define default_stack_TxALogSizeLimit_MIN 0
#define default_stack_TxALogSizeLimit_DEF 0
#define default_stack_TxALogSizeLimit_MAX 4000
#define default_stack_TxALogSizeLimit_No_limit (0)

#define default_stack_TxALogTimeLimit_PARAM "TxALogTimeLimit"
#define default_stack_TxALogTimeLimit_MIN 0
#define default_stack_TxALogTimeLimit_DEF 0
#define default_stack_TxALogTimeLimit_MAX 31622400
#define default_stack_TxALogTimeLimit_No_limit (0)

#define default_stack_TxALogRotateTime_PARAM "TxALogRotateTime"
#define default_stack_TxALogRotateTime_MIN 0
#define default_stack_TxALogRotateTime_DEF 0
#define default_stack_TxALogRotateTime_MAX 31622400
#define default_stack_TxALogRotateTime_No_limit (0)

#define default_stack_TxBLogEnableFlag_PARAM "TxBLogEnableFlag"
#define default_stack_TxBLogEnableFlag_DEF true

#define default_stack_TxBLogFileName_PARAM "TxBLogFileName"
#define default_stack_TxBLogFileName_DEF "tx_r1c.pcap"

#define default_stack_TxBLogNumFiles_PARAM "TxBLogNumFiles"
#define default_stack_TxBLogNumFiles_MIN 0
#define default_stack_TxBLogNumFiles_DEF 0
#define default_stack_TxBLogNumFiles_MAX 65535
#define default_stack_TxBLogNumFiles_no_limit (0)

#define default_stack_TxBLogSizeLimit_PARAM "TxBLogSizeLimit"
#define default_stack_TxBLogSizeLimit_MIN 0
#define default_stack_TxBLogSizeLimit_DEF 0
#define default_stack_TxBLogSizeLimit_MAX 4000
#define default_stack_TxBLogSizeLimit_No_limit (0)

#define default_stack_TxBLogTimeLimit_PARAM "TxBLogTimeLimit"
#define default_stack_TxBLogTimeLimit_MIN 0
#define default_stack_TxBLogTimeLimit_DEF 0
#define default_stack_TxBLogTimeLimit_MAX 31622400
#define default_stack_TxBLogTimeLimit_No_limit (0)

#define default_stack_TxBLogRotateTime_PARAM "TxBLogRotateTime"
#define default_stack_TxBLogRotateTime_MIN 0
#define default_stack_TxBLogRotateTime_DEF 0
#define default_stack_TxBLogRotateTime_MAX 31622400
#define default_stack_TxBLogRotateTime_No_limit (0)

#define default_stack_RxALogEnableFlag_PARAM "RxALogEnableFlag"
#define default_stack_RxALogEnableFlag_DEF true

#define default_stack_RxALogFileName_PARAM "RxALogFileName"
#define default_stack_RxALogFileName_DEF "rx_r1a.pcap"

#define default_stack_RxALogNumFiles_PARAM "RxALogNumFiles"
#define default_stack_RxALogNumFiles_MIN 0
#define default_stack_RxALogNumFiles_DEF 0
#define default_stack_RxALogNumFiles_MAX 65535
#define default_stack_RxALogNumFiles_no_limit (0)

#define default_stack_RxALogSizeLimit_PARAM "RxALogSizeLimit"
#define default_stack_RxALogSizeLimit_MIN 0
#define default_stack_RxALogSizeLimit_DEF 0
#define default_stack_RxALogSizeLimit_MAX 4000
#define default_stack_RxALogSizeLimit_No_limit (0)

#define default_stack_RxALogTimeLimit_PARAM "RxALogTimeLimit"
#define default_stack_RxALogTimeLimit_MIN 0
#define default_stack_RxALogTimeLimit_DEF 0
#define default_stack_RxALogTimeLimit_MAX 31622400
#define default_stack_RxALogTimeLimit_No_limit (0)

#define default_stack_RxALogRotateTime_PARAM "RxALogRotateTime"
#define default_stack_RxALogRotateTime_MIN 0
#define default_stack_RxALogRotateTime_DEF 0
#define default_stack_RxALogRotateTime_MAX 31622400
#define default_stack_RxALogRotateTime_No_limit (0)

#define default_stack_RxBLogEnableFlag_PARAM "RxBLogEnableFlag"
#define default_stack_RxBLogEnableFlag_DEF true

#define default_stack_RxBLogFileName_PARAM "RxBLogFileName"
#define default_stack_RxBLogFileName_DEF "rx_r1c.pcap"

#define default_stack_RxBLogNumFiles_PARAM "RxBLogNumFiles"
#define default_stack_RxBLogNumFiles_MIN 0
#define default_stack_RxBLogNumFiles_DEF 0
#define default_stack_RxBLogNumFiles_MAX 65535
#define default_stack_RxBLogNumFiles_no_limit (0)

#define default_stack_RxBLogSizeLimit_PARAM "RxBLogSizeLimit"
#define default_stack_RxBLogSizeLimit_MIN 0
#define default_stack_RxBLogSizeLimit_DEF 0
#define default_stack_RxBLogSizeLimit_MAX 4000
#define default_stack_RxBLogSizeLimit_No_limit (0)

#define default_stack_RxBLogTimeLimit_PARAM "RxBLogTimeLimit"
#define default_stack_RxBLogTimeLimit_MIN 0
#define default_stack_RxBLogTimeLimit_DEF 0
#define default_stack_RxBLogTimeLimit_MAX 31622400
#define default_stack_RxBLogTimeLimit_No_limit (0)

#define default_stack_RxBLogRotateTime_PARAM "RxBLogRotateTime"
#define default_stack_RxBLogRotateTime_MIN 0
#define default_stack_RxBLogRotateTime_DEF 0
#define default_stack_RxBLogRotateTime_MAX 31622400
#define default_stack_RxBLogRotateTime_No_limit (0)

#define default_stack_OTALogEnableFlag_PARAM "OTALogEnableFlag"
#define default_stack_OTALogEnableFlag_DEF false

#define default_stack_OTALogFileName_PARAM "OTALogFileName"
#define default_stack_OTALogFileName_DEF "tx_ota.pcap"

#define default_stack_OTALogNumFiles_PARAM "OTALogNumFiles"
#define default_stack_OTALogNumFiles_MIN 0
#define default_stack_OTALogNumFiles_DEF 0
#define default_stack_OTALogNumFiles_MAX 65535
#define default_stack_OTALogNumFiles_no_limit (0)

#define default_stack_OTALogSizeLimit_PARAM "OTALogSizeLimit"
#define default_stack_OTALogSizeLimit_MIN 0
#define default_stack_OTALogSizeLimit_DEF 0
#define default_stack_OTALogSizeLimit_MAX 4000
#define default_stack_OTALogSizeLimit_No_limit (0)

#define default_stack_OTALogTimeLimit_PARAM "OTALogTimeLimit"
#define default_stack_OTALogTimeLimit_MIN 0
#define default_stack_OTALogTimeLimit_DEF 0
#define default_stack_OTALogTimeLimit_MAX 31622400
#define default_stack_OTALogTimeLimit_No_limit (0)

#define default_stack_OTALogRotateTime_PARAM "OTALogRotateTime"
#define default_stack_OTALogRotateTime_MIN 0
#define default_stack_OTALogRotateTime_DEF 0
#define default_stack_OTALogRotateTime_MAX 31622400
#define default_stack_OTALogRotateTime_No_limit (0)

#define default_stack_SSLLogEnableFlag_PARAM "SSLLogEnableFlag"
#define default_stack_SSLLogEnableFlag_DEF false

#define default_stack_SSLLogFileName_PARAM "SSLLogFileName"
#define default_stack_SSLLogFileName_DEF "ssl.pcap"

#define default_stack_SSLLogNumFiles_PARAM "SSLLogNumFiles"
#define default_stack_SSLLogNumFiles_MIN 0
#define default_stack_SSLLogNumFiles_DEF 0
#define default_stack_SSLLogNumFiles_MAX 65535
#define default_stack_SSLLogNumFiles_no_limit (0)

#define default_stack_SSLLogSizeLimit_PARAM "SSLLogSizeLimit"
#define default_stack_SSLLogSizeLimit_MIN 0
#define default_stack_SSLLogSizeLimit_DEF 0
#define default_stack_SSLLogSizeLimit_MAX 4000
#define default_stack_SSLLogSizeLimit_No_limit (0)

#define default_stack_SSLLogTimeLimit_PARAM "SSLLogTimeLimit"
#define default_stack_SSLLogTimeLimit_MIN 0
#define default_stack_SSLLogTimeLimit_DEF 0
#define default_stack_SSLLogTimeLimit_MAX 31622400
#define default_stack_SSLLogTimeLimit_No_limit (0)

#define default_stack_SSLLogRotateTime_PARAM "SSLLogRotateTime"
#define default_stack_SSLLogRotateTime_MIN 0
#define default_stack_SSLLogRotateTime_DEF 0
#define default_stack_SSLLogRotateTime_MAX 31622400
#define default_stack_SSLLogRotateTime_No_limit (0)

#define default_stack_GenLogEnableFlag_PARAM "GenLogEnableFlag"
#define default_stack_GenLogEnableFlag_DEF false

#define default_stack_GenTcpDumpInterface_PARAM "GenTcpDumpInterface"
#define default_stack_GenTcpDumpInterface_DEF "eth0"

#define default_stack_GenTcpDumpFilter_PARAM "GenTcpDumpFilter"
#define default_stack_GenTcpDumpFilter_DEF "port 502"

#define default_stack_GenLogFileName_PARAM "GenLogFileName"
#define default_stack_GenLogFileName_DEF "modbus.pcap"

#define default_stack_GenLogNumFiles_PARAM "GenLogNumFiles"
#define default_stack_GenLogNumFiles_MIN 0
#define default_stack_GenLogNumFiles_DEF 0
#define default_stack_GenLogNumFiles_MAX 65535
#define default_stack_GenLogNumFiles_no_limit (0)

#define default_stack_GenLogSizeLimit_PARAM "GenLogSizeLimit"
#define default_stack_GenLogSizeLimit_MIN 0
#define default_stack_GenLogSizeLimit_DEF 0
#define default_stack_GenLogSizeLimit_MAX 4000
#define default_stack_GenLogSizeLimit_No_limit (0)

#define default_stack_GenLogTimeLimit_PARAM "GenLogTimeLimit"
#define default_stack_GenLogTimeLimit_MIN 0
#define default_stack_GenLogTimeLimit_DEF 0
#define default_stack_GenLogTimeLimit_MAX 31622400
#define default_stack_GenLogTimeLimit_No_limit (0)

#define default_stack_GenLogRotateTime_PARAM "GenLogRotateTime"
#define default_stack_GenLogRotateTime_MIN 0
#define default_stack_GenLogRotateTime_DEF 0
#define default_stack_GenLogRotateTime_MAX 31622400
#define default_stack_GenLogRotateTime_No_limit (0)

#define default_stack_Cohda_Syslog_DebugLevel_PARAM "Cohda_Syslog_DebugLevel"
#define default_stack_Cohda_Syslog_DebugLevel_MIN 1
#define default_stack_Cohda_Syslog_DebugLevel_DEF 7
#define default_stack_Cohda_Syslog_DebugLevel_MAX 8

#define default_stack_Cohda_Syslog_RotateTime_PARAM "Cohda_Syslog_RotateTime"
#define default_stack_Cohda_Syslog_RotateTime_DEF ""

#define default_stack_Cohda_Syslog_PurgeTime_PARAM "Cohda_Syslog_PurgeTime"
#define default_stack_Cohda_Syslog_PurgeTime_DEF ""

#define default_stack_Cohda_Syslog_PurgeAge_hours_PARAM "Cohda_Syslog_PurgeAge_hours"
#define default_stack_Cohda_Syslog_PurgeAge_hours_MIN 0
#define default_stack_Cohda_Syslog_PurgeAge_hours_DEF 0
#define default_stack_Cohda_Syslog_PurgeAge_hours_MAX 65535

#define default_stack_WBSS_Service_Mode_PARAM "WBSS_Service_Mode"
#define default_stack_WBSS_Service_Mode_DEF false
#define default_stack_WBSS_Service_Mode_User ((bool)0)
#define default_stack_WBSS_Service_Mode_Provider ((bool)1)

#define default_stack_WBSS_Service_0_IPService_PARAM "WBSS_Service_0_IPService"
#define default_stack_WBSS_Service_0_IPService_DEF true

#define default_stack_WBSS_Service_0_IPAddress_PARAM "WBSS_Service_0_IPAddress"
#define default_stack_WBSS_Service_0_IPAddress_DEF ""

#define default_stack_WBSS_Service_0_IPPort_PARAM "WBSS_Service_0_IPPort"
#define default_stack_WBSS_Service_0_IPPort_MIN 0
#define default_stack_WBSS_Service_0_IPPort_DEF 0
#define default_stack_WBSS_Service_0_IPPort_MAX 65535

#define default_stack_WBSS_Service_0_ChanId_PARAM "WBSS_Service_0_ChanId"
#define default_stack_WBSS_Service_0_ChanId_DEF "SCH"

#define default_stack_WBSS_Service_0_Prio_PARAM "WBSS_Service_0_Prio"
#define default_stack_WBSS_Service_0_Prio_MIN 0
#define default_stack_WBSS_Service_0_Prio_DEF 31
#define default_stack_WBSS_Service_0_Prio_MAX 31

#define default_stack_WBSS_Service_0_PSID_PARAM "WBSS_Service_0_PSID"
#define default_stack_WBSS_Service_0_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_0_PSID_DEF 0xeffffffeul
#define default_stack_WBSS_Service_0_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_0_PSC_PARAM "WBSS_Service_0_PSC"
#define default_stack_WBSS_Service_0_PSC_DEF "IPv6"

#define default_stack_WBSS_Service_0_RCPIThr_PARAM "WBSS_Service_0_RCPIThr"
#define default_stack_WBSS_Service_0_RCPIThr_MIN 0
#define default_stack_WBSS_Service_0_RCPIThr_DEF 255
#define default_stack_WBSS_Service_0_RCPIThr_MAX 255

#define default_stack_WBSS_Service_0_WSACntThr_PARAM "WBSS_Service_0_WSACntThr"
#define default_stack_WBSS_Service_0_WSACntThr_MIN 0
#define default_stack_WBSS_Service_0_WSACntThr_DEF 0
#define default_stack_WBSS_Service_0_WSACntThr_MAX 255

#define default_stack_WBSS_Service_0_WSACntThrI_PARAM "WBSS_Service_0_WSACntThrI"
#define default_stack_WBSS_Service_0_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_0_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_0_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_0_ProvMAC_PARAM "WBSS_Service_0_ProvMAC"
#define default_stack_WBSS_Service_0_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_1_IPService_PARAM "WBSS_Service_1_IPService"
#define default_stack_WBSS_Service_1_IPService_DEF true

#define default_stack_WBSS_Service_1_IPAddress_PARAM "WBSS_Service_1_IPAddress"
#define default_stack_WBSS_Service_1_IPAddress_DEF "c0da::1"

#define default_stack_WBSS_Service_1_IPPort_PARAM "WBSS_Service_1_IPPort"
#define default_stack_WBSS_Service_1_IPPort_MIN 0
#define default_stack_WBSS_Service_1_IPPort_DEF 16092
#define default_stack_WBSS_Service_1_IPPort_MAX 65535

#define default_stack_WBSS_Service_1_ChanId_PARAM "WBSS_Service_1_ChanId"
#define default_stack_WBSS_Service_1_ChanId_DEF "SCH"

#define default_stack_WBSS_Service_1_Prio_PARAM "WBSS_Service_1_Prio"
#define default_stack_WBSS_Service_1_Prio_MIN 0
#define default_stack_WBSS_Service_1_Prio_DEF 31
#define default_stack_WBSS_Service_1_Prio_MAX 31

#define default_stack_WBSS_Service_1_PSID_PARAM "WBSS_Service_1_PSID"
#define default_stack_WBSS_Service_1_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_1_PSID_DEF 0x23ul
#define default_stack_WBSS_Service_1_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_1_PSC_PARAM "WBSS_Service_1_PSC"
#define default_stack_WBSS_Service_1_PSC_DEF "SCMS"

#define default_stack_WBSS_Service_1_RCPIThr_PARAM "WBSS_Service_1_RCPIThr"
#define default_stack_WBSS_Service_1_RCPIThr_MIN 0
#define default_stack_WBSS_Service_1_RCPIThr_DEF 255
#define default_stack_WBSS_Service_1_RCPIThr_MAX 255

#define default_stack_WBSS_Service_1_WSACntThr_PARAM "WBSS_Service_1_WSACntThr"
#define default_stack_WBSS_Service_1_WSACntThr_MIN 0
#define default_stack_WBSS_Service_1_WSACntThr_DEF 0
#define default_stack_WBSS_Service_1_WSACntThr_MAX 255

#define default_stack_WBSS_Service_1_WSACntThrI_PARAM "WBSS_Service_1_WSACntThrI"
#define default_stack_WBSS_Service_1_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_1_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_1_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_1_ProvMAC_PARAM "WBSS_Service_1_ProvMAC"
#define default_stack_WBSS_Service_1_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_2_IPService_PARAM "WBSS_Service_2_IPService"
#define default_stack_WBSS_Service_2_IPService_DEF false

#define default_stack_WBSS_Service_2_IPAddress_PARAM "WBSS_Service_2_IPAddress"
#define default_stack_WBSS_Service_2_IPAddress_DEF ""

#define default_stack_WBSS_Service_2_IPPort_PARAM "WBSS_Service_2_IPPort"
#define default_stack_WBSS_Service_2_IPPort_MIN 0
#define default_stack_WBSS_Service_2_IPPort_DEF 0
#define default_stack_WBSS_Service_2_IPPort_MAX 65535

#define default_stack_WBSS_Service_2_ChanId_PARAM "WBSS_Service_2_ChanId"
#define default_stack_WBSS_Service_2_ChanId_DEF ""

#define default_stack_WBSS_Service_2_Prio_PARAM "WBSS_Service_2_Prio"
#define default_stack_WBSS_Service_2_Prio_MIN 0
#define default_stack_WBSS_Service_2_Prio_DEF 0
#define default_stack_WBSS_Service_2_Prio_MAX 31

#define default_stack_WBSS_Service_2_PSID_PARAM "WBSS_Service_2_PSID"
#define default_stack_WBSS_Service_2_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_2_PSID_DEF 0xfful
#define default_stack_WBSS_Service_2_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_2_PSC_PARAM "WBSS_Service_2_PSC"
#define default_stack_WBSS_Service_2_PSC_DEF ""

#define default_stack_WBSS_Service_2_RCPIThr_PARAM "WBSS_Service_2_RCPIThr"
#define default_stack_WBSS_Service_2_RCPIThr_MIN 0
#define default_stack_WBSS_Service_2_RCPIThr_DEF 255
#define default_stack_WBSS_Service_2_RCPIThr_MAX 255

#define default_stack_WBSS_Service_2_WSACntThr_PARAM "WBSS_Service_2_WSACntThr"
#define default_stack_WBSS_Service_2_WSACntThr_MIN 0
#define default_stack_WBSS_Service_2_WSACntThr_DEF 0
#define default_stack_WBSS_Service_2_WSACntThr_MAX 255

#define default_stack_WBSS_Service_2_WSACntThrI_PARAM "WBSS_Service_2_WSACntThrI"
#define default_stack_WBSS_Service_2_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_2_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_2_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_2_ProvMAC_PARAM "WBSS_Service_2_ProvMAC"
#define default_stack_WBSS_Service_2_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_3_IPService_PARAM "WBSS_Service_3_IPService"
#define default_stack_WBSS_Service_3_IPService_DEF false

#define default_stack_WBSS_Service_3_IPAddress_PARAM "WBSS_Service_3_IPAddress"
#define default_stack_WBSS_Service_3_IPAddress_DEF ""

#define default_stack_WBSS_Service_3_IPPort_PARAM "WBSS_Service_3_IPPort"
#define default_stack_WBSS_Service_3_IPPort_MIN 0
#define default_stack_WBSS_Service_3_IPPort_DEF 0
#define default_stack_WBSS_Service_3_IPPort_MAX 65535

#define default_stack_WBSS_Service_3_ChanId_PARAM "WBSS_Service_3_ChanId"
#define default_stack_WBSS_Service_3_ChanId_DEF ""

#define default_stack_WBSS_Service_3_Prio_PARAM "WBSS_Service_3_Prio"
#define default_stack_WBSS_Service_3_Prio_MIN 0
#define default_stack_WBSS_Service_3_Prio_DEF 0
#define default_stack_WBSS_Service_3_Prio_MAX 31

#define default_stack_WBSS_Service_3_PSID_PARAM "WBSS_Service_3_PSID"
#define default_stack_WBSS_Service_3_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_3_PSID_DEF 0xfful
#define default_stack_WBSS_Service_3_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_3_PSC_PARAM "WBSS_Service_3_PSC"
#define default_stack_WBSS_Service_3_PSC_DEF ""

#define default_stack_WBSS_Service_3_RCPIThr_PARAM "WBSS_Service_3_RCPIThr"
#define default_stack_WBSS_Service_3_RCPIThr_MIN 0
#define default_stack_WBSS_Service_3_RCPIThr_DEF 255
#define default_stack_WBSS_Service_3_RCPIThr_MAX 255

#define default_stack_WBSS_Service_3_WSACntThr_PARAM "WBSS_Service_3_WSACntThr"
#define default_stack_WBSS_Service_3_WSACntThr_MIN 0
#define default_stack_WBSS_Service_3_WSACntThr_DEF 0
#define default_stack_WBSS_Service_3_WSACntThr_MAX 255

#define default_stack_WBSS_Service_3_WSACntThrI_PARAM "WBSS_Service_3_WSACntThrI"
#define default_stack_WBSS_Service_3_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_3_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_3_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_3_ProvMAC_PARAM "WBSS_Service_3_ProvMAC"
#define default_stack_WBSS_Service_3_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_4_IPService_PARAM "WBSS_Service_4_IPService"
#define default_stack_WBSS_Service_4_IPService_DEF false

#define default_stack_WBSS_Service_4_IPAddress_PARAM "WBSS_Service_4_IPAddress"
#define default_stack_WBSS_Service_4_IPAddress_DEF ""

#define default_stack_WBSS_Service_4_IPPort_PARAM "WBSS_Service_4_IPPort"
#define default_stack_WBSS_Service_4_IPPort_MIN 0
#define default_stack_WBSS_Service_4_IPPort_DEF 0
#define default_stack_WBSS_Service_4_IPPort_MAX 65535

#define default_stack_WBSS_Service_4_ChanId_PARAM "WBSS_Service_4_ChanId"
#define default_stack_WBSS_Service_4_ChanId_DEF ""

#define default_stack_WBSS_Service_4_Prio_PARAM "WBSS_Service_4_Prio"
#define default_stack_WBSS_Service_4_Prio_MIN 0
#define default_stack_WBSS_Service_4_Prio_DEF 0
#define default_stack_WBSS_Service_4_Prio_MAX 31

#define default_stack_WBSS_Service_4_PSID_PARAM "WBSS_Service_4_PSID"
#define default_stack_WBSS_Service_4_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_4_PSID_DEF 0xfful
#define default_stack_WBSS_Service_4_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_4_PSC_PARAM "WBSS_Service_4_PSC"
#define default_stack_WBSS_Service_4_PSC_DEF ""

#define default_stack_WBSS_Service_4_RCPIThr_PARAM "WBSS_Service_4_RCPIThr"
#define default_stack_WBSS_Service_4_RCPIThr_MIN 0
#define default_stack_WBSS_Service_4_RCPIThr_DEF 255
#define default_stack_WBSS_Service_4_RCPIThr_MAX 255

#define default_stack_WBSS_Service_4_WSACntThr_PARAM "WBSS_Service_4_WSACntThr"
#define default_stack_WBSS_Service_4_WSACntThr_MIN 0
#define default_stack_WBSS_Service_4_WSACntThr_DEF 0
#define default_stack_WBSS_Service_4_WSACntThr_MAX 255

#define default_stack_WBSS_Service_4_WSACntThrI_PARAM "WBSS_Service_4_WSACntThrI"
#define default_stack_WBSS_Service_4_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_4_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_4_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_4_ProvMAC_PARAM "WBSS_Service_4_ProvMAC"
#define default_stack_WBSS_Service_4_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_5_IPService_PARAM "WBSS_Service_5_IPService"
#define default_stack_WBSS_Service_5_IPService_DEF false

#define default_stack_WBSS_Service_5_IPAddress_PARAM "WBSS_Service_5_IPAddress"
#define default_stack_WBSS_Service_5_IPAddress_DEF ""

#define default_stack_WBSS_Service_5_IPPort_PARAM "WBSS_Service_5_IPPort"
#define default_stack_WBSS_Service_5_IPPort_MIN 0
#define default_stack_WBSS_Service_5_IPPort_DEF 0
#define default_stack_WBSS_Service_5_IPPort_MAX 65535

#define default_stack_WBSS_Service_5_ChanId_PARAM "WBSS_Service_5_ChanId"
#define default_stack_WBSS_Service_5_ChanId_DEF ""

#define default_stack_WBSS_Service_5_Prio_PARAM "WBSS_Service_5_Prio"
#define default_stack_WBSS_Service_5_Prio_MIN 0
#define default_stack_WBSS_Service_5_Prio_DEF 0
#define default_stack_WBSS_Service_5_Prio_MAX 31

#define default_stack_WBSS_Service_5_PSID_PARAM "WBSS_Service_5_PSID"
#define default_stack_WBSS_Service_5_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_5_PSID_DEF 0xfful
#define default_stack_WBSS_Service_5_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_5_PSC_PARAM "WBSS_Service_5_PSC"
#define default_stack_WBSS_Service_5_PSC_DEF ""

#define default_stack_WBSS_Service_5_RCPIThr_PARAM "WBSS_Service_5_RCPIThr"
#define default_stack_WBSS_Service_5_RCPIThr_MIN 0
#define default_stack_WBSS_Service_5_RCPIThr_DEF 255
#define default_stack_WBSS_Service_5_RCPIThr_MAX 255

#define default_stack_WBSS_Service_5_WSACntThr_PARAM "WBSS_Service_5_WSACntThr"
#define default_stack_WBSS_Service_5_WSACntThr_MIN 0
#define default_stack_WBSS_Service_5_WSACntThr_DEF 0
#define default_stack_WBSS_Service_5_WSACntThr_MAX 255

#define default_stack_WBSS_Service_5_WSACntThrI_PARAM "WBSS_Service_5_WSACntThrI"
#define default_stack_WBSS_Service_5_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_5_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_5_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_5_ProvMAC_PARAM "WBSS_Service_5_ProvMAC"
#define default_stack_WBSS_Service_5_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_6_IPService_PARAM "WBSS_Service_6_IPService"
#define default_stack_WBSS_Service_6_IPService_DEF false

#define default_stack_WBSS_Service_6_IPAddress_PARAM "WBSS_Service_6_IPAddress"
#define default_stack_WBSS_Service_6_IPAddress_DEF ""

#define default_stack_WBSS_Service_6_IPPort_PARAM "WBSS_Service_6_IPPort"
#define default_stack_WBSS_Service_6_IPPort_MIN 0
#define default_stack_WBSS_Service_6_IPPort_DEF 0
#define default_stack_WBSS_Service_6_IPPort_MAX 65535

#define default_stack_WBSS_Service_6_ChanId_PARAM "WBSS_Service_6_ChanId"
#define default_stack_WBSS_Service_6_ChanId_DEF ""

#define default_stack_WBSS_Service_6_Prio_PARAM "WBSS_Service_6_Prio"
#define default_stack_WBSS_Service_6_Prio_MIN 0
#define default_stack_WBSS_Service_6_Prio_DEF 0
#define default_stack_WBSS_Service_6_Prio_MAX 31

#define default_stack_WBSS_Service_6_PSID_PARAM "WBSS_Service_6_PSID"
#define default_stack_WBSS_Service_6_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_6_PSID_DEF 0xfful
#define default_stack_WBSS_Service_6_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_6_PSC_PARAM "WBSS_Service_6_PSC"
#define default_stack_WBSS_Service_6_PSC_DEF ""

#define default_stack_WBSS_Service_6_RCPIThr_PARAM "WBSS_Service_6_RCPIThr"
#define default_stack_WBSS_Service_6_RCPIThr_MIN 0
#define default_stack_WBSS_Service_6_RCPIThr_DEF 255
#define default_stack_WBSS_Service_6_RCPIThr_MAX 255

#define default_stack_WBSS_Service_6_WSACntThr_PARAM "WBSS_Service_6_WSACntThr"
#define default_stack_WBSS_Service_6_WSACntThr_MIN 0
#define default_stack_WBSS_Service_6_WSACntThr_DEF 0
#define default_stack_WBSS_Service_6_WSACntThr_MAX 255

#define default_stack_WBSS_Service_6_WSACntThrI_PARAM "WBSS_Service_6_WSACntThrI"
#define default_stack_WBSS_Service_6_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_6_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_6_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_6_ProvMAC_PARAM "WBSS_Service_6_ProvMAC"
#define default_stack_WBSS_Service_6_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_7_IPService_PARAM "WBSS_Service_7_IPService"
#define default_stack_WBSS_Service_7_IPService_DEF false

#define default_stack_WBSS_Service_7_IPAddress_PARAM "WBSS_Service_7_IPAddress"
#define default_stack_WBSS_Service_7_IPAddress_DEF ""

#define default_stack_WBSS_Service_7_IPPort_PARAM "WBSS_Service_7_IPPort"
#define default_stack_WBSS_Service_7_IPPort_MIN 0
#define default_stack_WBSS_Service_7_IPPort_DEF 0
#define default_stack_WBSS_Service_7_IPPort_MAX 65535

#define default_stack_WBSS_Service_7_ChanId_PARAM "WBSS_Service_7_ChanId"
#define default_stack_WBSS_Service_7_ChanId_DEF ""

#define default_stack_WBSS_Service_7_Prio_PARAM "WBSS_Service_7_Prio"
#define default_stack_WBSS_Service_7_Prio_MIN 0
#define default_stack_WBSS_Service_7_Prio_DEF 0
#define default_stack_WBSS_Service_7_Prio_MAX 31

#define default_stack_WBSS_Service_7_PSID_PARAM "WBSS_Service_7_PSID"
#define default_stack_WBSS_Service_7_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_7_PSID_DEF 0xfful
#define default_stack_WBSS_Service_7_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_7_PSC_PARAM "WBSS_Service_7_PSC"
#define default_stack_WBSS_Service_7_PSC_DEF ""

#define default_stack_WBSS_Service_7_RCPIThr_PARAM "WBSS_Service_7_RCPIThr"
#define default_stack_WBSS_Service_7_RCPIThr_MIN 0
#define default_stack_WBSS_Service_7_RCPIThr_DEF 255
#define default_stack_WBSS_Service_7_RCPIThr_MAX 255

#define default_stack_WBSS_Service_7_WSACntThr_PARAM "WBSS_Service_7_WSACntThr"
#define default_stack_WBSS_Service_7_WSACntThr_MIN 0
#define default_stack_WBSS_Service_7_WSACntThr_DEF 0
#define default_stack_WBSS_Service_7_WSACntThr_MAX 255

#define default_stack_WBSS_Service_7_WSACntThrI_PARAM "WBSS_Service_7_WSACntThrI"
#define default_stack_WBSS_Service_7_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_7_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_7_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_7_ProvMAC_PARAM "WBSS_Service_7_ProvMAC"
#define default_stack_WBSS_Service_7_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_8_IPService_PARAM "WBSS_Service_8_IPService"
#define default_stack_WBSS_Service_8_IPService_DEF false

#define default_stack_WBSS_Service_8_IPAddress_PARAM "WBSS_Service_8_IPAddress"
#define default_stack_WBSS_Service_8_IPAddress_DEF ""

#define default_stack_WBSS_Service_8_IPPort_PARAM "WBSS_Service_8_IPPort"
#define default_stack_WBSS_Service_8_IPPort_MIN 0
#define default_stack_WBSS_Service_8_IPPort_DEF 0
#define default_stack_WBSS_Service_8_IPPort_MAX 65535

#define default_stack_WBSS_Service_8_ChanId_PARAM "WBSS_Service_8_ChanId"
#define default_stack_WBSS_Service_8_ChanId_DEF ""

#define default_stack_WBSS_Service_8_Prio_PARAM "WBSS_Service_8_Prio"
#define default_stack_WBSS_Service_8_Prio_MIN 0
#define default_stack_WBSS_Service_8_Prio_DEF 0
#define default_stack_WBSS_Service_8_Prio_MAX 31

#define default_stack_WBSS_Service_8_PSID_PARAM "WBSS_Service_8_PSID"
#define default_stack_WBSS_Service_8_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_8_PSID_DEF 0xfful
#define default_stack_WBSS_Service_8_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_8_PSC_PARAM "WBSS_Service_8_PSC"
#define default_stack_WBSS_Service_8_PSC_DEF ""

#define default_stack_WBSS_Service_8_RCPIThr_PARAM "WBSS_Service_8_RCPIThr"
#define default_stack_WBSS_Service_8_RCPIThr_MIN 0
#define default_stack_WBSS_Service_8_RCPIThr_DEF 255
#define default_stack_WBSS_Service_8_RCPIThr_MAX 255

#define default_stack_WBSS_Service_8_WSACntThr_PARAM "WBSS_Service_8_WSACntThr"
#define default_stack_WBSS_Service_8_WSACntThr_MIN 0
#define default_stack_WBSS_Service_8_WSACntThr_DEF 0
#define default_stack_WBSS_Service_8_WSACntThr_MAX 255

#define default_stack_WBSS_Service_8_WSACntThrI_PARAM "WBSS_Service_8_WSACntThrI"
#define default_stack_WBSS_Service_8_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_8_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_8_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_8_ProvMAC_PARAM "WBSS_Service_8_ProvMAC"
#define default_stack_WBSS_Service_8_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_9_IPService_PARAM "WBSS_Service_9_IPService"
#define default_stack_WBSS_Service_9_IPService_DEF false

#define default_stack_WBSS_Service_9_IPAddress_PARAM "WBSS_Service_9_IPAddress"
#define default_stack_WBSS_Service_9_IPAddress_DEF ""

#define default_stack_WBSS_Service_9_IPPort_PARAM "WBSS_Service_9_IPPort"
#define default_stack_WBSS_Service_9_IPPort_MIN 0
#define default_stack_WBSS_Service_9_IPPort_DEF 0
#define default_stack_WBSS_Service_9_IPPort_MAX 65535

#define default_stack_WBSS_Service_9_ChanId_PARAM "WBSS_Service_9_ChanId"
#define default_stack_WBSS_Service_9_ChanId_DEF ""

#define default_stack_WBSS_Service_9_Prio_PARAM "WBSS_Service_9_Prio"
#define default_stack_WBSS_Service_9_Prio_MIN 0
#define default_stack_WBSS_Service_9_Prio_DEF 0
#define default_stack_WBSS_Service_9_Prio_MAX 31

#define default_stack_WBSS_Service_9_PSID_PARAM "WBSS_Service_9_PSID"
#define default_stack_WBSS_Service_9_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_9_PSID_DEF 0xfful
#define default_stack_WBSS_Service_9_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_9_PSC_PARAM "WBSS_Service_9_PSC"
#define default_stack_WBSS_Service_9_PSC_DEF ""

#define default_stack_WBSS_Service_9_RCPIThr_PARAM "WBSS_Service_9_RCPIThr"
#define default_stack_WBSS_Service_9_RCPIThr_MIN 0
#define default_stack_WBSS_Service_9_RCPIThr_DEF 255
#define default_stack_WBSS_Service_9_RCPIThr_MAX 255

#define default_stack_WBSS_Service_9_WSACntThr_PARAM "WBSS_Service_9_WSACntThr"
#define default_stack_WBSS_Service_9_WSACntThr_MIN 0
#define default_stack_WBSS_Service_9_WSACntThr_DEF 0
#define default_stack_WBSS_Service_9_WSACntThr_MAX 255

#define default_stack_WBSS_Service_9_WSACntThrI_PARAM "WBSS_Service_9_WSACntThrI"
#define default_stack_WBSS_Service_9_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_9_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_9_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_9_ProvMAC_PARAM "WBSS_Service_9_ProvMAC"
#define default_stack_WBSS_Service_9_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_10_IPService_PARAM "WBSS_Service_10_IPService"
#define default_stack_WBSS_Service_10_IPService_DEF false

#define default_stack_WBSS_Service_10_IPAddress_PARAM "WBSS_Service_10_IPAddress"
#define default_stack_WBSS_Service_10_IPAddress_DEF ""

#define default_stack_WBSS_Service_10_IPPort_PARAM "WBSS_Service_10_IPPort"
#define default_stack_WBSS_Service_10_IPPort_MIN 0
#define default_stack_WBSS_Service_10_IPPort_DEF 0
#define default_stack_WBSS_Service_10_IPPort_MAX 65535

#define default_stack_WBSS_Service_10_ChanId_PARAM "WBSS_Service_10_ChanId"
#define default_stack_WBSS_Service_10_ChanId_DEF ""

#define default_stack_WBSS_Service_10_Prio_PARAM "WBSS_Service_10_Prio"
#define default_stack_WBSS_Service_10_Prio_MIN 0
#define default_stack_WBSS_Service_10_Prio_DEF 0
#define default_stack_WBSS_Service_10_Prio_MAX 31

#define default_stack_WBSS_Service_10_PSID_PARAM "WBSS_Service_10_PSID"
#define default_stack_WBSS_Service_10_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_10_PSID_DEF 0xfful
#define default_stack_WBSS_Service_10_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_10_PSC_PARAM "WBSS_Service_10_PSC"
#define default_stack_WBSS_Service_10_PSC_DEF ""

#define default_stack_WBSS_Service_10_RCPIThr_PARAM "WBSS_Service_10_RCPIThr"
#define default_stack_WBSS_Service_10_RCPIThr_MIN 0
#define default_stack_WBSS_Service_10_RCPIThr_DEF 255
#define default_stack_WBSS_Service_10_RCPIThr_MAX 255

#define default_stack_WBSS_Service_10_WSACntThr_PARAM "WBSS_Service_10_WSACntThr"
#define default_stack_WBSS_Service_10_WSACntThr_MIN 0
#define default_stack_WBSS_Service_10_WSACntThr_DEF 0
#define default_stack_WBSS_Service_10_WSACntThr_MAX 255

#define default_stack_WBSS_Service_10_WSACntThrI_PARAM "WBSS_Service_10_WSACntThrI"
#define default_stack_WBSS_Service_10_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_10_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_10_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_10_ProvMAC_PARAM "WBSS_Service_10_ProvMAC"
#define default_stack_WBSS_Service_10_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_11_IPService_PARAM "WBSS_Service_11_IPService"
#define default_stack_WBSS_Service_11_IPService_DEF false

#define default_stack_WBSS_Service_11_IPAddress_PARAM "WBSS_Service_11_IPAddress"
#define default_stack_WBSS_Service_11_IPAddress_DEF ""

#define default_stack_WBSS_Service_11_IPPort_PARAM "WBSS_Service_11_IPPort"
#define default_stack_WBSS_Service_11_IPPort_MIN 0
#define default_stack_WBSS_Service_11_IPPort_DEF 0
#define default_stack_WBSS_Service_11_IPPort_MAX 65535

#define default_stack_WBSS_Service_11_ChanId_PARAM "WBSS_Service_11_ChanId"
#define default_stack_WBSS_Service_11_ChanId_DEF ""

#define default_stack_WBSS_Service_11_Prio_PARAM "WBSS_Service_11_Prio"
#define default_stack_WBSS_Service_11_Prio_MIN 0
#define default_stack_WBSS_Service_11_Prio_DEF 0
#define default_stack_WBSS_Service_11_Prio_MAX 31

#define default_stack_WBSS_Service_11_PSID_PARAM "WBSS_Service_11_PSID"
#define default_stack_WBSS_Service_11_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_11_PSID_DEF 0xfful
#define default_stack_WBSS_Service_11_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_11_PSC_PARAM "WBSS_Service_11_PSC"
#define default_stack_WBSS_Service_11_PSC_DEF ""

#define default_stack_WBSS_Service_11_RCPIThr_PARAM "WBSS_Service_11_RCPIThr"
#define default_stack_WBSS_Service_11_RCPIThr_MIN 0
#define default_stack_WBSS_Service_11_RCPIThr_DEF 255
#define default_stack_WBSS_Service_11_RCPIThr_MAX 255

#define default_stack_WBSS_Service_11_WSACntThr_PARAM "WBSS_Service_11_WSACntThr"
#define default_stack_WBSS_Service_11_WSACntThr_MIN 0
#define default_stack_WBSS_Service_11_WSACntThr_DEF 0
#define default_stack_WBSS_Service_11_WSACntThr_MAX 255

#define default_stack_WBSS_Service_11_WSACntThrI_PARAM "WBSS_Service_11_WSACntThrI"
#define default_stack_WBSS_Service_11_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_11_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_11_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_11_ProvMAC_PARAM "WBSS_Service_11_ProvMAC"
#define default_stack_WBSS_Service_11_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_12_IPService_PARAM "WBSS_Service_12_IPService"
#define default_stack_WBSS_Service_12_IPService_DEF false

#define default_stack_WBSS_Service_12_IPAddress_PARAM "WBSS_Service_12_IPAddress"
#define default_stack_WBSS_Service_12_IPAddress_DEF ""

#define default_stack_WBSS_Service_12_IPPort_PARAM "WBSS_Service_12_IPPort"
#define default_stack_WBSS_Service_12_IPPort_MIN 0
#define default_stack_WBSS_Service_12_IPPort_DEF 0
#define default_stack_WBSS_Service_12_IPPort_MAX 65535

#define default_stack_WBSS_Service_12_ChanId_PARAM "WBSS_Service_12_ChanId"
#define default_stack_WBSS_Service_12_ChanId_DEF ""

#define default_stack_WBSS_Service_12_Prio_PARAM "WBSS_Service_12_Prio"
#define default_stack_WBSS_Service_12_Prio_MIN 0
#define default_stack_WBSS_Service_12_Prio_DEF 0
#define default_stack_WBSS_Service_12_Prio_MAX 31

#define default_stack_WBSS_Service_12_PSID_PARAM "WBSS_Service_12_PSID"
#define default_stack_WBSS_Service_12_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_12_PSID_DEF 0xfful
#define default_stack_WBSS_Service_12_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_12_PSC_PARAM "WBSS_Service_12_PSC"
#define default_stack_WBSS_Service_12_PSC_DEF ""

#define default_stack_WBSS_Service_12_RCPIThr_PARAM "WBSS_Service_12_RCPIThr"
#define default_stack_WBSS_Service_12_RCPIThr_MIN 0
#define default_stack_WBSS_Service_12_RCPIThr_DEF 255
#define default_stack_WBSS_Service_12_RCPIThr_MAX 255

#define default_stack_WBSS_Service_12_WSACntThr_PARAM "WBSS_Service_12_WSACntThr"
#define default_stack_WBSS_Service_12_WSACntThr_MIN 0
#define default_stack_WBSS_Service_12_WSACntThr_DEF 0
#define default_stack_WBSS_Service_12_WSACntThr_MAX 255

#define default_stack_WBSS_Service_12_WSACntThrI_PARAM "WBSS_Service_12_WSACntThrI"
#define default_stack_WBSS_Service_12_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_12_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_12_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_12_ProvMAC_PARAM "WBSS_Service_12_ProvMAC"
#define default_stack_WBSS_Service_12_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_13_IPService_PARAM "WBSS_Service_13_IPService"
#define default_stack_WBSS_Service_13_IPService_DEF false

#define default_stack_WBSS_Service_13_IPAddress_PARAM "WBSS_Service_13_IPAddress"
#define default_stack_WBSS_Service_13_IPAddress_DEF ""

#define default_stack_WBSS_Service_13_IPPort_PARAM "WBSS_Service_13_IPPort"
#define default_stack_WBSS_Service_13_IPPort_MIN 0
#define default_stack_WBSS_Service_13_IPPort_DEF 0
#define default_stack_WBSS_Service_13_IPPort_MAX 65535

#define default_stack_WBSS_Service_13_ChanId_PARAM "WBSS_Service_13_ChanId"
#define default_stack_WBSS_Service_13_ChanId_DEF ""

#define default_stack_WBSS_Service_13_Prio_PARAM "WBSS_Service_13_Prio"
#define default_stack_WBSS_Service_13_Prio_MIN 0
#define default_stack_WBSS_Service_13_Prio_DEF 0
#define default_stack_WBSS_Service_13_Prio_MAX 31

#define default_stack_WBSS_Service_13_PSID_PARAM "WBSS_Service_13_PSID"
#define default_stack_WBSS_Service_13_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_13_PSID_DEF 0xfful
#define default_stack_WBSS_Service_13_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_13_PSC_PARAM "WBSS_Service_13_PSC"
#define default_stack_WBSS_Service_13_PSC_DEF ""

#define default_stack_WBSS_Service_13_RCPIThr_PARAM "WBSS_Service_13_RCPIThr"
#define default_stack_WBSS_Service_13_RCPIThr_MIN 0
#define default_stack_WBSS_Service_13_RCPIThr_DEF 255
#define default_stack_WBSS_Service_13_RCPIThr_MAX 255

#define default_stack_WBSS_Service_13_WSACntThr_PARAM "WBSS_Service_13_WSACntThr"
#define default_stack_WBSS_Service_13_WSACntThr_MIN 0
#define default_stack_WBSS_Service_13_WSACntThr_DEF 0
#define default_stack_WBSS_Service_13_WSACntThr_MAX 255

#define default_stack_WBSS_Service_13_WSACntThrI_PARAM "WBSS_Service_13_WSACntThrI"
#define default_stack_WBSS_Service_13_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_13_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_13_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_13_ProvMAC_PARAM "WBSS_Service_13_ProvMAC"
#define default_stack_WBSS_Service_13_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_14_IPService_PARAM "WBSS_Service_14_IPService"
#define default_stack_WBSS_Service_14_IPService_DEF false

#define default_stack_WBSS_Service_14_IPAddress_PARAM "WBSS_Service_14_IPAddress"
#define default_stack_WBSS_Service_14_IPAddress_DEF ""

#define default_stack_WBSS_Service_14_IPPort_PARAM "WBSS_Service_14_IPPort"
#define default_stack_WBSS_Service_14_IPPort_MIN 0
#define default_stack_WBSS_Service_14_IPPort_DEF 0
#define default_stack_WBSS_Service_14_IPPort_MAX 65535

#define default_stack_WBSS_Service_14_ChanId_PARAM "WBSS_Service_14_ChanId"
#define default_stack_WBSS_Service_14_ChanId_DEF ""

#define default_stack_WBSS_Service_14_Prio_PARAM "WBSS_Service_14_Prio"
#define default_stack_WBSS_Service_14_Prio_MIN 0
#define default_stack_WBSS_Service_14_Prio_DEF 0
#define default_stack_WBSS_Service_14_Prio_MAX 31

#define default_stack_WBSS_Service_14_PSID_PARAM "WBSS_Service_14_PSID"
#define default_stack_WBSS_Service_14_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_14_PSID_DEF 0xfful
#define default_stack_WBSS_Service_14_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_14_PSC_PARAM "WBSS_Service_14_PSC"
#define default_stack_WBSS_Service_14_PSC_DEF ""

#define default_stack_WBSS_Service_14_RCPIThr_PARAM "WBSS_Service_14_RCPIThr"
#define default_stack_WBSS_Service_14_RCPIThr_MIN 0
#define default_stack_WBSS_Service_14_RCPIThr_DEF 255
#define default_stack_WBSS_Service_14_RCPIThr_MAX 255

#define default_stack_WBSS_Service_14_WSACntThr_PARAM "WBSS_Service_14_WSACntThr"
#define default_stack_WBSS_Service_14_WSACntThr_MIN 0
#define default_stack_WBSS_Service_14_WSACntThr_DEF 0
#define default_stack_WBSS_Service_14_WSACntThr_MAX 255

#define default_stack_WBSS_Service_14_WSACntThrI_PARAM "WBSS_Service_14_WSACntThrI"
#define default_stack_WBSS_Service_14_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_14_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_14_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_14_ProvMAC_PARAM "WBSS_Service_14_ProvMAC"
#define default_stack_WBSS_Service_14_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_15_IPService_PARAM "WBSS_Service_15_IPService"
#define default_stack_WBSS_Service_15_IPService_DEF false

#define default_stack_WBSS_Service_15_IPAddress_PARAM "WBSS_Service_15_IPAddress"
#define default_stack_WBSS_Service_15_IPAddress_DEF ""

#define default_stack_WBSS_Service_15_IPPort_PARAM "WBSS_Service_15_IPPort"
#define default_stack_WBSS_Service_15_IPPort_MIN 0
#define default_stack_WBSS_Service_15_IPPort_DEF 0
#define default_stack_WBSS_Service_15_IPPort_MAX 65535

#define default_stack_WBSS_Service_15_ChanId_PARAM "WBSS_Service_15_ChanId"
#define default_stack_WBSS_Service_15_ChanId_DEF ""

#define default_stack_WBSS_Service_15_Prio_PARAM "WBSS_Service_15_Prio"
#define default_stack_WBSS_Service_15_Prio_MIN 0
#define default_stack_WBSS_Service_15_Prio_DEF 0
#define default_stack_WBSS_Service_15_Prio_MAX 31

#define default_stack_WBSS_Service_15_PSID_PARAM "WBSS_Service_15_PSID"
#define default_stack_WBSS_Service_15_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_15_PSID_DEF 0xfful
#define default_stack_WBSS_Service_15_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_15_PSC_PARAM "WBSS_Service_15_PSC"
#define default_stack_WBSS_Service_15_PSC_DEF ""

#define default_stack_WBSS_Service_15_RCPIThr_PARAM "WBSS_Service_15_RCPIThr"
#define default_stack_WBSS_Service_15_RCPIThr_MIN 0
#define default_stack_WBSS_Service_15_RCPIThr_DEF 255
#define default_stack_WBSS_Service_15_RCPIThr_MAX 255

#define default_stack_WBSS_Service_15_WSACntThr_PARAM "WBSS_Service_15_WSACntThr"
#define default_stack_WBSS_Service_15_WSACntThr_MIN 0
#define default_stack_WBSS_Service_15_WSACntThr_DEF 0
#define default_stack_WBSS_Service_15_WSACntThr_MAX 255

#define default_stack_WBSS_Service_15_WSACntThrI_PARAM "WBSS_Service_15_WSACntThrI"
#define default_stack_WBSS_Service_15_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_15_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_15_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_15_ProvMAC_PARAM "WBSS_Service_15_ProvMAC"
#define default_stack_WBSS_Service_15_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_16_IPService_PARAM "WBSS_Service_16_IPService"
#define default_stack_WBSS_Service_16_IPService_DEF false

#define default_stack_WBSS_Service_16_IPAddress_PARAM "WBSS_Service_16_IPAddress"
#define default_stack_WBSS_Service_16_IPAddress_DEF ""

#define default_stack_WBSS_Service_16_IPPort_PARAM "WBSS_Service_16_IPPort"
#define default_stack_WBSS_Service_16_IPPort_MIN 0
#define default_stack_WBSS_Service_16_IPPort_DEF 0
#define default_stack_WBSS_Service_16_IPPort_MAX 65535

#define default_stack_WBSS_Service_16_ChanId_PARAM "WBSS_Service_16_ChanId"
#define default_stack_WBSS_Service_16_ChanId_DEF ""

#define default_stack_WBSS_Service_16_Prio_PARAM "WBSS_Service_16_Prio"
#define default_stack_WBSS_Service_16_Prio_MIN 0
#define default_stack_WBSS_Service_16_Prio_DEF 0
#define default_stack_WBSS_Service_16_Prio_MAX 31

#define default_stack_WBSS_Service_16_PSID_PARAM "WBSS_Service_16_PSID"
#define default_stack_WBSS_Service_16_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_16_PSID_DEF 0xfful
#define default_stack_WBSS_Service_16_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_16_PSC_PARAM "WBSS_Service_16_PSC"
#define default_stack_WBSS_Service_16_PSC_DEF ""

#define default_stack_WBSS_Service_16_RCPIThr_PARAM "WBSS_Service_16_RCPIThr"
#define default_stack_WBSS_Service_16_RCPIThr_MIN 0
#define default_stack_WBSS_Service_16_RCPIThr_DEF 255
#define default_stack_WBSS_Service_16_RCPIThr_MAX 255

#define default_stack_WBSS_Service_16_WSACntThr_PARAM "WBSS_Service_16_WSACntThr"
#define default_stack_WBSS_Service_16_WSACntThr_MIN 0
#define default_stack_WBSS_Service_16_WSACntThr_DEF 0
#define default_stack_WBSS_Service_16_WSACntThr_MAX 255

#define default_stack_WBSS_Service_16_WSACntThrI_PARAM "WBSS_Service_16_WSACntThrI"
#define default_stack_WBSS_Service_16_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_16_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_16_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_16_ProvMAC_PARAM "WBSS_Service_16_ProvMAC"
#define default_stack_WBSS_Service_16_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_17_IPService_PARAM "WBSS_Service_17_IPService"
#define default_stack_WBSS_Service_17_IPService_DEF false

#define default_stack_WBSS_Service_17_IPAddress_PARAM "WBSS_Service_17_IPAddress"
#define default_stack_WBSS_Service_17_IPAddress_DEF ""

#define default_stack_WBSS_Service_17_IPPort_PARAM "WBSS_Service_17_IPPort"
#define default_stack_WBSS_Service_17_IPPort_MIN 0
#define default_stack_WBSS_Service_17_IPPort_DEF 0
#define default_stack_WBSS_Service_17_IPPort_MAX 65535

#define default_stack_WBSS_Service_17_ChanId_PARAM "WBSS_Service_17_ChanId"
#define default_stack_WBSS_Service_17_ChanId_DEF ""

#define default_stack_WBSS_Service_17_Prio_PARAM "WBSS_Service_17_Prio"
#define default_stack_WBSS_Service_17_Prio_MIN 0
#define default_stack_WBSS_Service_17_Prio_DEF 0
#define default_stack_WBSS_Service_17_Prio_MAX 31

#define default_stack_WBSS_Service_17_PSID_PARAM "WBSS_Service_17_PSID"
#define default_stack_WBSS_Service_17_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_17_PSID_DEF 0xfful
#define default_stack_WBSS_Service_17_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_17_PSC_PARAM "WBSS_Service_17_PSC"
#define default_stack_WBSS_Service_17_PSC_DEF ""

#define default_stack_WBSS_Service_17_RCPIThr_PARAM "WBSS_Service_17_RCPIThr"
#define default_stack_WBSS_Service_17_RCPIThr_MIN 0
#define default_stack_WBSS_Service_17_RCPIThr_DEF 255
#define default_stack_WBSS_Service_17_RCPIThr_MAX 255

#define default_stack_WBSS_Service_17_WSACntThr_PARAM "WBSS_Service_17_WSACntThr"
#define default_stack_WBSS_Service_17_WSACntThr_MIN 0
#define default_stack_WBSS_Service_17_WSACntThr_DEF 0
#define default_stack_WBSS_Service_17_WSACntThr_MAX 255

#define default_stack_WBSS_Service_17_WSACntThrI_PARAM "WBSS_Service_17_WSACntThrI"
#define default_stack_WBSS_Service_17_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_17_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_17_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_17_ProvMAC_PARAM "WBSS_Service_17_ProvMAC"
#define default_stack_WBSS_Service_17_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_18_IPService_PARAM "WBSS_Service_18_IPService"
#define default_stack_WBSS_Service_18_IPService_DEF false

#define default_stack_WBSS_Service_18_IPAddress_PARAM "WBSS_Service_18_IPAddress"
#define default_stack_WBSS_Service_18_IPAddress_DEF ""

#define default_stack_WBSS_Service_18_IPPort_PARAM "WBSS_Service_18_IPPort"
#define default_stack_WBSS_Service_18_IPPort_MIN 0
#define default_stack_WBSS_Service_18_IPPort_DEF 0
#define default_stack_WBSS_Service_18_IPPort_MAX 65535

#define default_stack_WBSS_Service_18_ChanId_PARAM "WBSS_Service_18_ChanId"
#define default_stack_WBSS_Service_18_ChanId_DEF ""

#define default_stack_WBSS_Service_18_Prio_PARAM "WBSS_Service_18_Prio"
#define default_stack_WBSS_Service_18_Prio_MIN 0
#define default_stack_WBSS_Service_18_Prio_DEF 0
#define default_stack_WBSS_Service_18_Prio_MAX 31

#define default_stack_WBSS_Service_18_PSID_PARAM "WBSS_Service_18_PSID"
#define default_stack_WBSS_Service_18_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_18_PSID_DEF 0xfful
#define default_stack_WBSS_Service_18_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_18_PSC_PARAM "WBSS_Service_18_PSC"
#define default_stack_WBSS_Service_18_PSC_DEF ""

#define default_stack_WBSS_Service_18_RCPIThr_PARAM "WBSS_Service_18_RCPIThr"
#define default_stack_WBSS_Service_18_RCPIThr_MIN 0
#define default_stack_WBSS_Service_18_RCPIThr_DEF 255
#define default_stack_WBSS_Service_18_RCPIThr_MAX 255

#define default_stack_WBSS_Service_18_WSACntThr_PARAM "WBSS_Service_18_WSACntThr"
#define default_stack_WBSS_Service_18_WSACntThr_MIN 0
#define default_stack_WBSS_Service_18_WSACntThr_DEF 0
#define default_stack_WBSS_Service_18_WSACntThr_MAX 255

#define default_stack_WBSS_Service_18_WSACntThrI_PARAM "WBSS_Service_18_WSACntThrI"
#define default_stack_WBSS_Service_18_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_18_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_18_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_18_ProvMAC_PARAM "WBSS_Service_18_ProvMAC"
#define default_stack_WBSS_Service_18_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_19_IPService_PARAM "WBSS_Service_19_IPService"
#define default_stack_WBSS_Service_19_IPService_DEF false

#define default_stack_WBSS_Service_19_IPAddress_PARAM "WBSS_Service_19_IPAddress"
#define default_stack_WBSS_Service_19_IPAddress_DEF ""

#define default_stack_WBSS_Service_19_IPPort_PARAM "WBSS_Service_19_IPPort"
#define default_stack_WBSS_Service_19_IPPort_MIN 0
#define default_stack_WBSS_Service_19_IPPort_DEF 0
#define default_stack_WBSS_Service_19_IPPort_MAX 65535

#define default_stack_WBSS_Service_19_ChanId_PARAM "WBSS_Service_19_ChanId"
#define default_stack_WBSS_Service_19_ChanId_DEF ""

#define default_stack_WBSS_Service_19_Prio_PARAM "WBSS_Service_19_Prio"
#define default_stack_WBSS_Service_19_Prio_MIN 0
#define default_stack_WBSS_Service_19_Prio_DEF 0
#define default_stack_WBSS_Service_19_Prio_MAX 31

#define default_stack_WBSS_Service_19_PSID_PARAM "WBSS_Service_19_PSID"
#define default_stack_WBSS_Service_19_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_19_PSID_DEF 0xfful
#define default_stack_WBSS_Service_19_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_19_PSC_PARAM "WBSS_Service_19_PSC"
#define default_stack_WBSS_Service_19_PSC_DEF ""

#define default_stack_WBSS_Service_19_RCPIThr_PARAM "WBSS_Service_19_RCPIThr"
#define default_stack_WBSS_Service_19_RCPIThr_MIN 0
#define default_stack_WBSS_Service_19_RCPIThr_DEF 255
#define default_stack_WBSS_Service_19_RCPIThr_MAX 255

#define default_stack_WBSS_Service_19_WSACntThr_PARAM "WBSS_Service_19_WSACntThr"
#define default_stack_WBSS_Service_19_WSACntThr_MIN 0
#define default_stack_WBSS_Service_19_WSACntThr_DEF 0
#define default_stack_WBSS_Service_19_WSACntThr_MAX 255

#define default_stack_WBSS_Service_19_WSACntThrI_PARAM "WBSS_Service_19_WSACntThrI"
#define default_stack_WBSS_Service_19_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_19_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_19_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_19_ProvMAC_PARAM "WBSS_Service_19_ProvMAC"
#define default_stack_WBSS_Service_19_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_20_IPService_PARAM "WBSS_Service_20_IPService"
#define default_stack_WBSS_Service_20_IPService_DEF false

#define default_stack_WBSS_Service_20_IPAddress_PARAM "WBSS_Service_20_IPAddress"
#define default_stack_WBSS_Service_20_IPAddress_DEF ""

#define default_stack_WBSS_Service_20_IPPort_PARAM "WBSS_Service_20_IPPort"
#define default_stack_WBSS_Service_20_IPPort_MIN 0
#define default_stack_WBSS_Service_20_IPPort_DEF 0
#define default_stack_WBSS_Service_20_IPPort_MAX 65535

#define default_stack_WBSS_Service_20_ChanId_PARAM "WBSS_Service_20_ChanId"
#define default_stack_WBSS_Service_20_ChanId_DEF ""

#define default_stack_WBSS_Service_20_Prio_PARAM "WBSS_Service_20_Prio"
#define default_stack_WBSS_Service_20_Prio_MIN 0
#define default_stack_WBSS_Service_20_Prio_DEF 0
#define default_stack_WBSS_Service_20_Prio_MAX 31

#define default_stack_WBSS_Service_20_PSID_PARAM "WBSS_Service_20_PSID"
#define default_stack_WBSS_Service_20_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_20_PSID_DEF 0xfful
#define default_stack_WBSS_Service_20_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_20_PSC_PARAM "WBSS_Service_20_PSC"
#define default_stack_WBSS_Service_20_PSC_DEF ""

#define default_stack_WBSS_Service_20_RCPIThr_PARAM "WBSS_Service_20_RCPIThr"
#define default_stack_WBSS_Service_20_RCPIThr_MIN 0
#define default_stack_WBSS_Service_20_RCPIThr_DEF 255
#define default_stack_WBSS_Service_20_RCPIThr_MAX 255

#define default_stack_WBSS_Service_20_WSACntThr_PARAM "WBSS_Service_20_WSACntThr"
#define default_stack_WBSS_Service_20_WSACntThr_MIN 0
#define default_stack_WBSS_Service_20_WSACntThr_DEF 0
#define default_stack_WBSS_Service_20_WSACntThr_MAX 255

#define default_stack_WBSS_Service_20_WSACntThrI_PARAM "WBSS_Service_20_WSACntThrI"
#define default_stack_WBSS_Service_20_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_20_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_20_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_20_ProvMAC_PARAM "WBSS_Service_20_ProvMAC"
#define default_stack_WBSS_Service_20_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_21_IPService_PARAM "WBSS_Service_21_IPService"
#define default_stack_WBSS_Service_21_IPService_DEF false

#define default_stack_WBSS_Service_21_IPAddress_PARAM "WBSS_Service_21_IPAddress"
#define default_stack_WBSS_Service_21_IPAddress_DEF ""

#define default_stack_WBSS_Service_21_IPPort_PARAM "WBSS_Service_21_IPPort"
#define default_stack_WBSS_Service_21_IPPort_MIN 0
#define default_stack_WBSS_Service_21_IPPort_DEF 0
#define default_stack_WBSS_Service_21_IPPort_MAX 65535

#define default_stack_WBSS_Service_21_ChanId_PARAM "WBSS_Service_21_ChanId"
#define default_stack_WBSS_Service_21_ChanId_DEF ""

#define default_stack_WBSS_Service_21_Prio_PARAM "WBSS_Service_21_Prio"
#define default_stack_WBSS_Service_21_Prio_MIN 0
#define default_stack_WBSS_Service_21_Prio_DEF 0
#define default_stack_WBSS_Service_21_Prio_MAX 31

#define default_stack_WBSS_Service_21_PSID_PARAM "WBSS_Service_21_PSID"
#define default_stack_WBSS_Service_21_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_21_PSID_DEF 0xfful
#define default_stack_WBSS_Service_21_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_21_PSC_PARAM "WBSS_Service_21_PSC"
#define default_stack_WBSS_Service_21_PSC_DEF ""

#define default_stack_WBSS_Service_21_RCPIThr_PARAM "WBSS_Service_21_RCPIThr"
#define default_stack_WBSS_Service_21_RCPIThr_MIN 0
#define default_stack_WBSS_Service_21_RCPIThr_DEF 255
#define default_stack_WBSS_Service_21_RCPIThr_MAX 255

#define default_stack_WBSS_Service_21_WSACntThr_PARAM "WBSS_Service_21_WSACntThr"
#define default_stack_WBSS_Service_21_WSACntThr_MIN 0
#define default_stack_WBSS_Service_21_WSACntThr_DEF 0
#define default_stack_WBSS_Service_21_WSACntThr_MAX 255

#define default_stack_WBSS_Service_21_WSACntThrI_PARAM "WBSS_Service_21_WSACntThrI"
#define default_stack_WBSS_Service_21_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_21_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_21_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_21_ProvMAC_PARAM "WBSS_Service_21_ProvMAC"
#define default_stack_WBSS_Service_21_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_22_IPService_PARAM "WBSS_Service_22_IPService"
#define default_stack_WBSS_Service_22_IPService_DEF false

#define default_stack_WBSS_Service_22_IPAddress_PARAM "WBSS_Service_22_IPAddress"
#define default_stack_WBSS_Service_22_IPAddress_DEF ""

#define default_stack_WBSS_Service_22_IPPort_PARAM "WBSS_Service_22_IPPort"
#define default_stack_WBSS_Service_22_IPPort_MIN 0
#define default_stack_WBSS_Service_22_IPPort_DEF 0
#define default_stack_WBSS_Service_22_IPPort_MAX 65535

#define default_stack_WBSS_Service_22_ChanId_PARAM "WBSS_Service_22_ChanId"
#define default_stack_WBSS_Service_22_ChanId_DEF ""

#define default_stack_WBSS_Service_22_Prio_PARAM "WBSS_Service_22_Prio"
#define default_stack_WBSS_Service_22_Prio_MIN 0
#define default_stack_WBSS_Service_22_Prio_DEF 0
#define default_stack_WBSS_Service_22_Prio_MAX 31

#define default_stack_WBSS_Service_22_PSID_PARAM "WBSS_Service_22_PSID"
#define default_stack_WBSS_Service_22_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_22_PSID_DEF 0xfful
#define default_stack_WBSS_Service_22_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_22_PSC_PARAM "WBSS_Service_22_PSC"
#define default_stack_WBSS_Service_22_PSC_DEF ""

#define default_stack_WBSS_Service_22_RCPIThr_PARAM "WBSS_Service_22_RCPIThr"
#define default_stack_WBSS_Service_22_RCPIThr_MIN 0
#define default_stack_WBSS_Service_22_RCPIThr_DEF 255
#define default_stack_WBSS_Service_22_RCPIThr_MAX 255

#define default_stack_WBSS_Service_22_WSACntThr_PARAM "WBSS_Service_22_WSACntThr"
#define default_stack_WBSS_Service_22_WSACntThr_MIN 0
#define default_stack_WBSS_Service_22_WSACntThr_DEF 0
#define default_stack_WBSS_Service_22_WSACntThr_MAX 255

#define default_stack_WBSS_Service_22_WSACntThrI_PARAM "WBSS_Service_22_WSACntThrI"
#define default_stack_WBSS_Service_22_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_22_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_22_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_22_ProvMAC_PARAM "WBSS_Service_22_ProvMAC"
#define default_stack_WBSS_Service_22_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_23_IPService_PARAM "WBSS_Service_23_IPService"
#define default_stack_WBSS_Service_23_IPService_DEF false

#define default_stack_WBSS_Service_23_IPAddress_PARAM "WBSS_Service_23_IPAddress"
#define default_stack_WBSS_Service_23_IPAddress_DEF ""

#define default_stack_WBSS_Service_23_IPPort_PARAM "WBSS_Service_23_IPPort"
#define default_stack_WBSS_Service_23_IPPort_MIN 0
#define default_stack_WBSS_Service_23_IPPort_DEF 0
#define default_stack_WBSS_Service_23_IPPort_MAX 65535

#define default_stack_WBSS_Service_23_ChanId_PARAM "WBSS_Service_23_ChanId"
#define default_stack_WBSS_Service_23_ChanId_DEF ""

#define default_stack_WBSS_Service_23_Prio_PARAM "WBSS_Service_23_Prio"
#define default_stack_WBSS_Service_23_Prio_MIN 0
#define default_stack_WBSS_Service_23_Prio_DEF 0
#define default_stack_WBSS_Service_23_Prio_MAX 31

#define default_stack_WBSS_Service_23_PSID_PARAM "WBSS_Service_23_PSID"
#define default_stack_WBSS_Service_23_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_23_PSID_DEF 0xfful
#define default_stack_WBSS_Service_23_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_23_PSC_PARAM "WBSS_Service_23_PSC"
#define default_stack_WBSS_Service_23_PSC_DEF ""

#define default_stack_WBSS_Service_23_RCPIThr_PARAM "WBSS_Service_23_RCPIThr"
#define default_stack_WBSS_Service_23_RCPIThr_MIN 0
#define default_stack_WBSS_Service_23_RCPIThr_DEF 255
#define default_stack_WBSS_Service_23_RCPIThr_MAX 255

#define default_stack_WBSS_Service_23_WSACntThr_PARAM "WBSS_Service_23_WSACntThr"
#define default_stack_WBSS_Service_23_WSACntThr_MIN 0
#define default_stack_WBSS_Service_23_WSACntThr_DEF 0
#define default_stack_WBSS_Service_23_WSACntThr_MAX 255

#define default_stack_WBSS_Service_23_WSACntThrI_PARAM "WBSS_Service_23_WSACntThrI"
#define default_stack_WBSS_Service_23_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_23_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_23_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_23_ProvMAC_PARAM "WBSS_Service_23_ProvMAC"
#define default_stack_WBSS_Service_23_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_24_IPService_PARAM "WBSS_Service_24_IPService"
#define default_stack_WBSS_Service_24_IPService_DEF false

#define default_stack_WBSS_Service_24_IPAddress_PARAM "WBSS_Service_24_IPAddress"
#define default_stack_WBSS_Service_24_IPAddress_DEF ""

#define default_stack_WBSS_Service_24_IPPort_PARAM "WBSS_Service_24_IPPort"
#define default_stack_WBSS_Service_24_IPPort_MIN 0
#define default_stack_WBSS_Service_24_IPPort_DEF 0
#define default_stack_WBSS_Service_24_IPPort_MAX 65535

#define default_stack_WBSS_Service_24_ChanId_PARAM "WBSS_Service_24_ChanId"
#define default_stack_WBSS_Service_24_ChanId_DEF ""

#define default_stack_WBSS_Service_24_Prio_PARAM "WBSS_Service_24_Prio"
#define default_stack_WBSS_Service_24_Prio_MIN 0
#define default_stack_WBSS_Service_24_Prio_DEF 0
#define default_stack_WBSS_Service_24_Prio_MAX 31

#define default_stack_WBSS_Service_24_PSID_PARAM "WBSS_Service_24_PSID"
#define default_stack_WBSS_Service_24_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_24_PSID_DEF 0xfful
#define default_stack_WBSS_Service_24_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_24_PSC_PARAM "WBSS_Service_24_PSC"
#define default_stack_WBSS_Service_24_PSC_DEF ""

#define default_stack_WBSS_Service_24_RCPIThr_PARAM "WBSS_Service_24_RCPIThr"
#define default_stack_WBSS_Service_24_RCPIThr_MIN 0
#define default_stack_WBSS_Service_24_RCPIThr_DEF 255
#define default_stack_WBSS_Service_24_RCPIThr_MAX 255

#define default_stack_WBSS_Service_24_WSACntThr_PARAM "WBSS_Service_24_WSACntThr"
#define default_stack_WBSS_Service_24_WSACntThr_MIN 0
#define default_stack_WBSS_Service_24_WSACntThr_DEF 0
#define default_stack_WBSS_Service_24_WSACntThr_MAX 255

#define default_stack_WBSS_Service_24_WSACntThrI_PARAM "WBSS_Service_24_WSACntThrI"
#define default_stack_WBSS_Service_24_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_24_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_24_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_24_ProvMAC_PARAM "WBSS_Service_24_ProvMAC"
#define default_stack_WBSS_Service_24_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_25_IPService_PARAM "WBSS_Service_25_IPService"
#define default_stack_WBSS_Service_25_IPService_DEF false

#define default_stack_WBSS_Service_25_IPAddress_PARAM "WBSS_Service_25_IPAddress"
#define default_stack_WBSS_Service_25_IPAddress_DEF ""

#define default_stack_WBSS_Service_25_IPPort_PARAM "WBSS_Service_25_IPPort"
#define default_stack_WBSS_Service_25_IPPort_MIN 0
#define default_stack_WBSS_Service_25_IPPort_DEF 0
#define default_stack_WBSS_Service_25_IPPort_MAX 65535

#define default_stack_WBSS_Service_25_ChanId_PARAM "WBSS_Service_25_ChanId"
#define default_stack_WBSS_Service_25_ChanId_DEF ""

#define default_stack_WBSS_Service_25_Prio_PARAM "WBSS_Service_25_Prio"
#define default_stack_WBSS_Service_25_Prio_MIN 0
#define default_stack_WBSS_Service_25_Prio_DEF 0
#define default_stack_WBSS_Service_25_Prio_MAX 31

#define default_stack_WBSS_Service_25_PSID_PARAM "WBSS_Service_25_PSID"
#define default_stack_WBSS_Service_25_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_25_PSID_DEF 0xfful
#define default_stack_WBSS_Service_25_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_25_PSC_PARAM "WBSS_Service_25_PSC"
#define default_stack_WBSS_Service_25_PSC_DEF ""

#define default_stack_WBSS_Service_25_RCPIThr_PARAM "WBSS_Service_25_RCPIThr"
#define default_stack_WBSS_Service_25_RCPIThr_MIN 0
#define default_stack_WBSS_Service_25_RCPIThr_DEF 255
#define default_stack_WBSS_Service_25_RCPIThr_MAX 255

#define default_stack_WBSS_Service_25_WSACntThr_PARAM "WBSS_Service_25_WSACntThr"
#define default_stack_WBSS_Service_25_WSACntThr_MIN 0
#define default_stack_WBSS_Service_25_WSACntThr_DEF 0
#define default_stack_WBSS_Service_25_WSACntThr_MAX 255

#define default_stack_WBSS_Service_25_WSACntThrI_PARAM "WBSS_Service_25_WSACntThrI"
#define default_stack_WBSS_Service_25_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_25_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_25_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_25_ProvMAC_PARAM "WBSS_Service_25_ProvMAC"
#define default_stack_WBSS_Service_25_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_26_IPService_PARAM "WBSS_Service_26_IPService"
#define default_stack_WBSS_Service_26_IPService_DEF false

#define default_stack_WBSS_Service_26_IPAddress_PARAM "WBSS_Service_26_IPAddress"
#define default_stack_WBSS_Service_26_IPAddress_DEF ""

#define default_stack_WBSS_Service_26_IPPort_PARAM "WBSS_Service_26_IPPort"
#define default_stack_WBSS_Service_26_IPPort_MIN 0
#define default_stack_WBSS_Service_26_IPPort_DEF 0
#define default_stack_WBSS_Service_26_IPPort_MAX 65535

#define default_stack_WBSS_Service_26_ChanId_PARAM "WBSS_Service_26_ChanId"
#define default_stack_WBSS_Service_26_ChanId_DEF ""

#define default_stack_WBSS_Service_26_Prio_PARAM "WBSS_Service_26_Prio"
#define default_stack_WBSS_Service_26_Prio_MIN 0
#define default_stack_WBSS_Service_26_Prio_DEF 0
#define default_stack_WBSS_Service_26_Prio_MAX 31

#define default_stack_WBSS_Service_26_PSID_PARAM "WBSS_Service_26_PSID"
#define default_stack_WBSS_Service_26_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_26_PSID_DEF 0xfful
#define default_stack_WBSS_Service_26_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_26_PSC_PARAM "WBSS_Service_26_PSC"
#define default_stack_WBSS_Service_26_PSC_DEF ""

#define default_stack_WBSS_Service_26_RCPIThr_PARAM "WBSS_Service_26_RCPIThr"
#define default_stack_WBSS_Service_26_RCPIThr_MIN 0
#define default_stack_WBSS_Service_26_RCPIThr_DEF 255
#define default_stack_WBSS_Service_26_RCPIThr_MAX 255

#define default_stack_WBSS_Service_26_WSACntThr_PARAM "WBSS_Service_26_WSACntThr"
#define default_stack_WBSS_Service_26_WSACntThr_MIN 0
#define default_stack_WBSS_Service_26_WSACntThr_DEF 0
#define default_stack_WBSS_Service_26_WSACntThr_MAX 255

#define default_stack_WBSS_Service_26_WSACntThrI_PARAM "WBSS_Service_26_WSACntThrI"
#define default_stack_WBSS_Service_26_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_26_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_26_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_26_ProvMAC_PARAM "WBSS_Service_26_ProvMAC"
#define default_stack_WBSS_Service_26_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_27_IPService_PARAM "WBSS_Service_27_IPService"
#define default_stack_WBSS_Service_27_IPService_DEF false

#define default_stack_WBSS_Service_27_IPAddress_PARAM "WBSS_Service_27_IPAddress"
#define default_stack_WBSS_Service_27_IPAddress_DEF ""

#define default_stack_WBSS_Service_27_IPPort_PARAM "WBSS_Service_27_IPPort"
#define default_stack_WBSS_Service_27_IPPort_MIN 0
#define default_stack_WBSS_Service_27_IPPort_DEF 0
#define default_stack_WBSS_Service_27_IPPort_MAX 65535

#define default_stack_WBSS_Service_27_ChanId_PARAM "WBSS_Service_27_ChanId"
#define default_stack_WBSS_Service_27_ChanId_DEF ""

#define default_stack_WBSS_Service_27_Prio_PARAM "WBSS_Service_27_Prio"
#define default_stack_WBSS_Service_27_Prio_MIN 0
#define default_stack_WBSS_Service_27_Prio_DEF 0
#define default_stack_WBSS_Service_27_Prio_MAX 31

#define default_stack_WBSS_Service_27_PSID_PARAM "WBSS_Service_27_PSID"
#define default_stack_WBSS_Service_27_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_27_PSID_DEF 0xfful
#define default_stack_WBSS_Service_27_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_27_PSC_PARAM "WBSS_Service_27_PSC"
#define default_stack_WBSS_Service_27_PSC_DEF ""

#define default_stack_WBSS_Service_27_RCPIThr_PARAM "WBSS_Service_27_RCPIThr"
#define default_stack_WBSS_Service_27_RCPIThr_MIN 0
#define default_stack_WBSS_Service_27_RCPIThr_DEF 255
#define default_stack_WBSS_Service_27_RCPIThr_MAX 255

#define default_stack_WBSS_Service_27_WSACntThr_PARAM "WBSS_Service_27_WSACntThr"
#define default_stack_WBSS_Service_27_WSACntThr_MIN 0
#define default_stack_WBSS_Service_27_WSACntThr_DEF 0
#define default_stack_WBSS_Service_27_WSACntThr_MAX 255

#define default_stack_WBSS_Service_27_WSACntThrI_PARAM "WBSS_Service_27_WSACntThrI"
#define default_stack_WBSS_Service_27_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_27_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_27_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_27_ProvMAC_PARAM "WBSS_Service_27_ProvMAC"
#define default_stack_WBSS_Service_27_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_28_IPService_PARAM "WBSS_Service_28_IPService"
#define default_stack_WBSS_Service_28_IPService_DEF false

#define default_stack_WBSS_Service_28_IPAddress_PARAM "WBSS_Service_28_IPAddress"
#define default_stack_WBSS_Service_28_IPAddress_DEF ""

#define default_stack_WBSS_Service_28_IPPort_PARAM "WBSS_Service_28_IPPort"
#define default_stack_WBSS_Service_28_IPPort_MIN 0
#define default_stack_WBSS_Service_28_IPPort_DEF 0
#define default_stack_WBSS_Service_28_IPPort_MAX 65535

#define default_stack_WBSS_Service_28_ChanId_PARAM "WBSS_Service_28_ChanId"
#define default_stack_WBSS_Service_28_ChanId_DEF ""

#define default_stack_WBSS_Service_28_Prio_PARAM "WBSS_Service_28_Prio"
#define default_stack_WBSS_Service_28_Prio_MIN 0
#define default_stack_WBSS_Service_28_Prio_DEF 0
#define default_stack_WBSS_Service_28_Prio_MAX 31

#define default_stack_WBSS_Service_28_PSID_PARAM "WBSS_Service_28_PSID"
#define default_stack_WBSS_Service_28_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_28_PSID_DEF 0xfful
#define default_stack_WBSS_Service_28_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_28_PSC_PARAM "WBSS_Service_28_PSC"
#define default_stack_WBSS_Service_28_PSC_DEF ""

#define default_stack_WBSS_Service_28_RCPIThr_PARAM "WBSS_Service_28_RCPIThr"
#define default_stack_WBSS_Service_28_RCPIThr_MIN 0
#define default_stack_WBSS_Service_28_RCPIThr_DEF 255
#define default_stack_WBSS_Service_28_RCPIThr_MAX 255

#define default_stack_WBSS_Service_28_WSACntThr_PARAM "WBSS_Service_28_WSACntThr"
#define default_stack_WBSS_Service_28_WSACntThr_MIN 0
#define default_stack_WBSS_Service_28_WSACntThr_DEF 0
#define default_stack_WBSS_Service_28_WSACntThr_MAX 255

#define default_stack_WBSS_Service_28_WSACntThrI_PARAM "WBSS_Service_28_WSACntThrI"
#define default_stack_WBSS_Service_28_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_28_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_28_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_28_ProvMAC_PARAM "WBSS_Service_28_ProvMAC"
#define default_stack_WBSS_Service_28_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_29_IPService_PARAM "WBSS_Service_29_IPService"
#define default_stack_WBSS_Service_29_IPService_DEF false

#define default_stack_WBSS_Service_29_IPAddress_PARAM "WBSS_Service_29_IPAddress"
#define default_stack_WBSS_Service_29_IPAddress_DEF ""

#define default_stack_WBSS_Service_29_IPPort_PARAM "WBSS_Service_29_IPPort"
#define default_stack_WBSS_Service_29_IPPort_MIN 0
#define default_stack_WBSS_Service_29_IPPort_DEF 0
#define default_stack_WBSS_Service_29_IPPort_MAX 65535

#define default_stack_WBSS_Service_29_ChanId_PARAM "WBSS_Service_29_ChanId"
#define default_stack_WBSS_Service_29_ChanId_DEF ""

#define default_stack_WBSS_Service_29_Prio_PARAM "WBSS_Service_29_Prio"
#define default_stack_WBSS_Service_29_Prio_MIN 0
#define default_stack_WBSS_Service_29_Prio_DEF 0
#define default_stack_WBSS_Service_29_Prio_MAX 31

#define default_stack_WBSS_Service_29_PSID_PARAM "WBSS_Service_29_PSID"
#define default_stack_WBSS_Service_29_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_29_PSID_DEF 0xfful
#define default_stack_WBSS_Service_29_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_29_PSC_PARAM "WBSS_Service_29_PSC"
#define default_stack_WBSS_Service_29_PSC_DEF ""

#define default_stack_WBSS_Service_29_RCPIThr_PARAM "WBSS_Service_29_RCPIThr"
#define default_stack_WBSS_Service_29_RCPIThr_MIN 0
#define default_stack_WBSS_Service_29_RCPIThr_DEF 255
#define default_stack_WBSS_Service_29_RCPIThr_MAX 255

#define default_stack_WBSS_Service_29_WSACntThr_PARAM "WBSS_Service_29_WSACntThr"
#define default_stack_WBSS_Service_29_WSACntThr_MIN 0
#define default_stack_WBSS_Service_29_WSACntThr_DEF 0
#define default_stack_WBSS_Service_29_WSACntThr_MAX 255

#define default_stack_WBSS_Service_29_WSACntThrI_PARAM "WBSS_Service_29_WSACntThrI"
#define default_stack_WBSS_Service_29_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_29_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_29_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_29_ProvMAC_PARAM "WBSS_Service_29_ProvMAC"
#define default_stack_WBSS_Service_29_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_30_IPService_PARAM "WBSS_Service_30_IPService"
#define default_stack_WBSS_Service_30_IPService_DEF false

#define default_stack_WBSS_Service_30_IPAddress_PARAM "WBSS_Service_30_IPAddress"
#define default_stack_WBSS_Service_30_IPAddress_DEF ""

#define default_stack_WBSS_Service_30_IPPort_PARAM "WBSS_Service_30_IPPort"
#define default_stack_WBSS_Service_30_IPPort_MIN 0
#define default_stack_WBSS_Service_30_IPPort_DEF 0
#define default_stack_WBSS_Service_30_IPPort_MAX 65535

#define default_stack_WBSS_Service_30_ChanId_PARAM "WBSS_Service_30_ChanId"
#define default_stack_WBSS_Service_30_ChanId_DEF ""

#define default_stack_WBSS_Service_30_Prio_PARAM "WBSS_Service_30_Prio"
#define default_stack_WBSS_Service_30_Prio_MIN 0
#define default_stack_WBSS_Service_30_Prio_DEF 0
#define default_stack_WBSS_Service_30_Prio_MAX 31

#define default_stack_WBSS_Service_30_PSID_PARAM "WBSS_Service_30_PSID"
#define default_stack_WBSS_Service_30_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_30_PSID_DEF 0xfful
#define default_stack_WBSS_Service_30_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_30_PSC_PARAM "WBSS_Service_30_PSC"
#define default_stack_WBSS_Service_30_PSC_DEF ""

#define default_stack_WBSS_Service_30_RCPIThr_PARAM "WBSS_Service_30_RCPIThr"
#define default_stack_WBSS_Service_30_RCPIThr_MIN 0
#define default_stack_WBSS_Service_30_RCPIThr_DEF 255
#define default_stack_WBSS_Service_30_RCPIThr_MAX 255

#define default_stack_WBSS_Service_30_WSACntThr_PARAM "WBSS_Service_30_WSACntThr"
#define default_stack_WBSS_Service_30_WSACntThr_MIN 0
#define default_stack_WBSS_Service_30_WSACntThr_DEF 0
#define default_stack_WBSS_Service_30_WSACntThr_MAX 255

#define default_stack_WBSS_Service_30_WSACntThrI_PARAM "WBSS_Service_30_WSACntThrI"
#define default_stack_WBSS_Service_30_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_30_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_30_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_30_ProvMAC_PARAM "WBSS_Service_30_ProvMAC"
#define default_stack_WBSS_Service_30_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_Service_31_IPService_PARAM "WBSS_Service_31_IPService"
#define default_stack_WBSS_Service_31_IPService_DEF false

#define default_stack_WBSS_Service_31_IPAddress_PARAM "WBSS_Service_31_IPAddress"
#define default_stack_WBSS_Service_31_IPAddress_DEF ""

#define default_stack_WBSS_Service_31_IPPort_PARAM "WBSS_Service_31_IPPort"
#define default_stack_WBSS_Service_31_IPPort_MIN 0
#define default_stack_WBSS_Service_31_IPPort_DEF 0
#define default_stack_WBSS_Service_31_IPPort_MAX 65535

#define default_stack_WBSS_Service_31_ChanId_PARAM "WBSS_Service_31_ChanId"
#define default_stack_WBSS_Service_31_ChanId_DEF ""

#define default_stack_WBSS_Service_31_Prio_PARAM "WBSS_Service_31_Prio"
#define default_stack_WBSS_Service_31_Prio_MIN 0
#define default_stack_WBSS_Service_31_Prio_DEF 0
#define default_stack_WBSS_Service_31_Prio_MAX 31

#define default_stack_WBSS_Service_31_PSID_PARAM "WBSS_Service_31_PSID"
#define default_stack_WBSS_Service_31_PSID_MIN 0x0ul
#define default_stack_WBSS_Service_31_PSID_DEF 0xfful
#define default_stack_WBSS_Service_31_PSID_MAX 0xeffffffful

#define default_stack_WBSS_Service_31_PSC_PARAM "WBSS_Service_31_PSC"
#define default_stack_WBSS_Service_31_PSC_DEF ""

#define default_stack_WBSS_Service_31_RCPIThr_PARAM "WBSS_Service_31_RCPIThr"
#define default_stack_WBSS_Service_31_RCPIThr_MIN 0
#define default_stack_WBSS_Service_31_RCPIThr_DEF 255
#define default_stack_WBSS_Service_31_RCPIThr_MAX 255

#define default_stack_WBSS_Service_31_WSACntThr_PARAM "WBSS_Service_31_WSACntThr"
#define default_stack_WBSS_Service_31_WSACntThr_MIN 0
#define default_stack_WBSS_Service_31_WSACntThr_DEF 0
#define default_stack_WBSS_Service_31_WSACntThr_MAX 255

#define default_stack_WBSS_Service_31_WSACntThrI_PARAM "WBSS_Service_31_WSACntThrI"
#define default_stack_WBSS_Service_31_WSACntThrI_MIN 0
#define default_stack_WBSS_Service_31_WSACntThrI_DEF 0
#define default_stack_WBSS_Service_31_WSACntThrI_MAX 255

#define default_stack_WBSS_Service_31_ProvMAC_PARAM "WBSS_Service_31_ProvMAC"
#define default_stack_WBSS_Service_31_ProvMAC_DEF "00:00:00:00:00:00"

#define default_stack_WBSS_WSA_Verify_Override_PARAM "WBSS_WSA_Verify_Override"
#define default_stack_WBSS_WSA_Verify_Override_MIN -1
#define default_stack_WBSS_WSA_Verify_Override_DEF 0
#define default_stack_WBSS_WSA_Verify_Override_MAX 1

#define default_stack_WBSS_Event_Hook_Script_PARAM "WBSS_Event_Hook_Script"
#define default_stack_WBSS_Event_Hook_Script_DEF ""

#define default_stack_WBSS_Event_Hook_Script_PSID_Filter_PARAM "WBSS_Event_Hook_Script_PSID_Filter"
#define default_stack_WBSS_Event_Hook_Script_PSID_Filter_MIN 0x0ul
#define default_stack_WBSS_Event_Hook_Script_PSID_Filter_DEF 0xfful
#define default_stack_WBSS_Event_Hook_Script_PSID_Filter_MAX 0xeffffffful

#define default_stack_WBSS_WSA_OverridePrefix_PARAM "WBSS_WSA_OverridePrefix"
#define default_stack_WBSS_WSA_OverridePrefix_DEF ""

#define default_stack_WBSS_WSA_OverridePrefixLength_PARAM "WBSS_WSA_OverridePrefixLength"
#define default_stack_WBSS_WSA_OverridePrefixLength_MIN 0
#define default_stack_WBSS_WSA_OverridePrefixLength_DEF 52
#define default_stack_WBSS_WSA_OverridePrefixLength_MAX 128

#define default_stack_WBSS_WSA_GatewayMode_PARAM "WBSS_WSA_GatewayMode"
#define default_stack_WBSS_WSA_GatewayMode_DEF false

#define default_stack_WBSS_WSA_OverrideGateway_PARAM "WBSS_WSA_OverrideGateway"
#define default_stack_WBSS_WSA_OverrideGateway_DEF ""

#define default_stack_WBSS_WSA_DNS_PARAM "WBSS_WSA_DNS"
#define default_stack_WBSS_WSA_DNS_DEF "2001:470:20::2"

#define default_stack_WBSS_WSA_Secondary_DNS_PARAM "WBSS_WSA_Secondary_DNS"
#define default_stack_WBSS_WSA_Secondary_DNS_DEF "::"

#define default_stack_WBSS_WSA_Gateway_MAC_PARAM "WBSS_WSA_Gateway_MAC"
#define default_stack_WBSS_WSA_Gateway_MAC_DEF ""

#define default_stack_WBSS_WSA_Validity_s_PARAM "WBSS_WSA_Validity_s"
#define default_stack_WBSS_WSA_Validity_s_MIN 1
#define default_stack_WBSS_WSA_Validity_s_DEF 60
#define default_stack_WBSS_WSA_Validity_s_MAX 3600

#define default_stack_WBSS_ChannelInactivityTimeout_ms_PARAM "WBSS_ChannelInactivityTimeout_ms"
#define default_stack_WBSS_ChannelInactivityTimeout_ms_MIN 1
#define default_stack_WBSS_ChannelInactivityTimeout_ms_DEF 5000
#define default_stack_WBSS_ChannelInactivityTimeout_ms_MAX 60000

#define default_stack_WBSS_WSA_RepeatRate_PARAM "WBSS_WSA_RepeatRate"
#define default_stack_WBSS_WSA_RepeatRate_MIN 0
#define default_stack_WBSS_WSA_RepeatRate_DEF 50
#define default_stack_WBSS_WSA_RepeatRate_MAX 255

#define default_stack_WBSS_WSA_USE_STATIC_LOCATION_PARAM "WBSS_WSA_USE_STATIC_LOCATION"
#define default_stack_WBSS_WSA_USE_STATIC_LOCATION_DEF false

#define default_stack_WBSS_WSA_STATIC_LOCATION_LATITUDE_PARAM "WBSS_WSA_STATIC_LOCATION_LATITUDE"
#define default_stack_WBSS_WSA_STATIC_LOCATION_LATITUDE_MIN -90.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_LATITUDE_DEF -34.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_LATITUDE_MAX 90.0

#define default_stack_WBSS_WSA_STATIC_LOCATION_LONGITUDE_PARAM "WBSS_WSA_STATIC_LOCATION_LONGITUDE"
#define default_stack_WBSS_WSA_STATIC_LOCATION_LONGITUDE_MIN -180.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_LONGITUDE_DEF 138.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_LONGITUDE_MAX 180.0

#define default_stack_WBSS_WSA_STATIC_LOCATION_ELEVATION_PARAM "WBSS_WSA_STATIC_LOCATION_ELEVATION"
#define default_stack_WBSS_WSA_STATIC_LOCATION_ELEVATION_MIN -400.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_ELEVATION_DEF 1.0
#define default_stack_WBSS_WSA_STATIC_LOCATION_ELEVATION_MAX 6000.0

#define default_stack_TxDataSource_PARAM "TxDataSource"
#define default_stack_TxDataSource_MIN 1
#define default_stack_TxDataSource_DEF 4
#define default_stack_TxDataSource_MAX 5
#define default_stack_TxDataSource_Live_Data (1)
#define default_stack_TxDataSource_Replay (2)
#define default_stack_TxDataSource_UDP (3)
#define default_stack_TxDataSource_GPS_Only (4)
#define default_stack_TxDataSource_Hybrid (5)

#define default_stack_Cohda_ReplayFileEOF_PARAM "Cohda_ReplayFileEOF"
#define default_stack_Cohda_ReplayFileEOF_MIN 0
#define default_stack_Cohda_ReplayFileEOF_DEF 0
#define default_stack_Cohda_ReplayFileEOF_MAX 5
#define default_stack_Cohda_ReplayFileEOF_Close (0)
#define default_stack_Cohda_ReplayFileEOF_Loop (1)
#define default_stack_Cohda_ReplayFileEOF_Shutdown (2)
#define default_stack_Cohda_ReplayFileEOF_Kill (3)
#define default_stack_Cohda_ReplayFileEOF_ShutdownLast (4)
#define default_stack_Cohda_ReplayFileEOF_KillLast (5)

#define default_stack_Cohda_ReplayFileLoopDelay_ms_PARAM "Cohda_ReplayFileLoopDelay_ms"
#define default_stack_Cohda_ReplayFileLoopDelay_ms_MIN 50
#define default_stack_Cohda_ReplayFileLoopDelay_ms_DEF 100
#define default_stack_Cohda_ReplayFileLoopDelay_ms_MAX 1000

#define default_stack_TxNoPosAvailable_PARAM "TxNoPosAvailable"
#define default_stack_TxNoPosAvailable_MIN 0
#define default_stack_TxNoPosAvailable_DEF 0
#define default_stack_TxNoPosAvailable_MAX 2

#define default_stack_TxPosAccuracyLimit_PARAM "TxPosAccuracyLimit"
#define default_stack_TxPosAccuracyLimit_MIN 0
#define default_stack_TxPosAccuracyLimit_DEF 0
#define default_stack_TxPosAccuracyLimit_MAX 1000

#define default_stack_WSMFwdRx_Enabled_PARAM "WSMFwdRx_Enabled"
#define default_stack_WSMFwdRx_Enabled_DEF false

#define default_stack_WSMFwdRx_Interface_PARAM "WSMFwdRx_Interface"
#define default_stack_WSMFwdRx_Interface_DEF "eth0"

#define default_stack_WSMFwdRx_0_DestIP_PARAM "WSMFwdRx_0_DestIP"
#define default_stack_WSMFwdRx_0_DestIP_DEF ""

#define default_stack_WSMFwdRx_0_DestPort_PARAM "WSMFwdRx_0_DestPort"
#define default_stack_WSMFwdRx_0_DestPort_MIN 0
#define default_stack_WSMFwdRx_0_DestPort_DEF 0
#define default_stack_WSMFwdRx_0_DestPort_MAX 65535

#define default_stack_WSMFwdRx_0_TransportProto_PARAM "WSMFwdRx_0_TransportProto"
#define default_stack_WSMFwdRx_0_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_0_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_0_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_0_PSID_PARAM "WSMFwdRx_0_PSID"
#define default_stack_WSMFwdRx_0_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_0_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_0_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_0_RSSI_PARAM "WSMFwdRx_0_RSSI"
#define default_stack_WSMFwdRx_0_RSSI_MIN -100
#define default_stack_WSMFwdRx_0_RSSI_DEF -100
#define default_stack_WSMFwdRx_0_RSSI_MAX -60

#define default_stack_WSMFwdRx_0_MsgSample_PARAM "WSMFwdRx_0_MsgSample"
#define default_stack_WSMFwdRx_0_MsgSample_MIN 1
#define default_stack_WSMFwdRx_0_MsgSample_DEF 1
#define default_stack_WSMFwdRx_0_MsgSample_MAX 9

#define default_stack_WSMFwdRx_0_StartTime_PARAM "WSMFwdRx_0_StartTime"
#define default_stack_WSMFwdRx_0_StartTime_DEF ""

#define default_stack_WSMFwdRx_0_EndTime_PARAM "WSMFwdRx_0_EndTime"
#define default_stack_WSMFwdRx_0_EndTime_DEF ""

#define default_stack_WSMFwdRx_0_Enabled_PARAM "WSMFwdRx_0_Enabled"
#define default_stack_WSMFwdRx_0_Enabled_DEF false

#define default_stack_WSMFwdRx_1_DestIP_PARAM "WSMFwdRx_1_DestIP"
#define default_stack_WSMFwdRx_1_DestIP_DEF ""

#define default_stack_WSMFwdRx_1_DestPort_PARAM "WSMFwdRx_1_DestPort"
#define default_stack_WSMFwdRx_1_DestPort_MIN 0
#define default_stack_WSMFwdRx_1_DestPort_DEF 0
#define default_stack_WSMFwdRx_1_DestPort_MAX 65535

#define default_stack_WSMFwdRx_1_TransportProto_PARAM "WSMFwdRx_1_TransportProto"
#define default_stack_WSMFwdRx_1_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_1_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_1_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_1_PSID_PARAM "WSMFwdRx_1_PSID"
#define default_stack_WSMFwdRx_1_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_1_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_1_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_1_RSSI_PARAM "WSMFwdRx_1_RSSI"
#define default_stack_WSMFwdRx_1_RSSI_MIN -100
#define default_stack_WSMFwdRx_1_RSSI_DEF -100
#define default_stack_WSMFwdRx_1_RSSI_MAX -60

#define default_stack_WSMFwdRx_1_MsgSample_PARAM "WSMFwdRx_1_MsgSample"
#define default_stack_WSMFwdRx_1_MsgSample_MIN 1
#define default_stack_WSMFwdRx_1_MsgSample_DEF 1
#define default_stack_WSMFwdRx_1_MsgSample_MAX 9

#define default_stack_WSMFwdRx_1_StartTime_PARAM "WSMFwdRx_1_StartTime"
#define default_stack_WSMFwdRx_1_StartTime_DEF ""

#define default_stack_WSMFwdRx_1_EndTime_PARAM "WSMFwdRx_1_EndTime"
#define default_stack_WSMFwdRx_1_EndTime_DEF ""

#define default_stack_WSMFwdRx_1_Enabled_PARAM "WSMFwdRx_1_Enabled"
#define default_stack_WSMFwdRx_1_Enabled_DEF false

#define default_stack_WSMFwdRx_2_DestIP_PARAM "WSMFwdRx_2_DestIP"
#define default_stack_WSMFwdRx_2_DestIP_DEF ""

#define default_stack_WSMFwdRx_2_DestPort_PARAM "WSMFwdRx_2_DestPort"
#define default_stack_WSMFwdRx_2_DestPort_MIN 0
#define default_stack_WSMFwdRx_2_DestPort_DEF 0
#define default_stack_WSMFwdRx_2_DestPort_MAX 65535

#define default_stack_WSMFwdRx_2_TransportProto_PARAM "WSMFwdRx_2_TransportProto"
#define default_stack_WSMFwdRx_2_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_2_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_2_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_2_PSID_PARAM "WSMFwdRx_2_PSID"
#define default_stack_WSMFwdRx_2_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_2_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_2_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_2_RSSI_PARAM "WSMFwdRx_2_RSSI"
#define default_stack_WSMFwdRx_2_RSSI_MIN -100
#define default_stack_WSMFwdRx_2_RSSI_DEF -100
#define default_stack_WSMFwdRx_2_RSSI_MAX -60

#define default_stack_WSMFwdRx_2_MsgSample_PARAM "WSMFwdRx_2_MsgSample"
#define default_stack_WSMFwdRx_2_MsgSample_MIN 1
#define default_stack_WSMFwdRx_2_MsgSample_DEF 1
#define default_stack_WSMFwdRx_2_MsgSample_MAX 9

#define default_stack_WSMFwdRx_2_StartTime_PARAM "WSMFwdRx_2_StartTime"
#define default_stack_WSMFwdRx_2_StartTime_DEF ""

#define default_stack_WSMFwdRx_2_EndTime_PARAM "WSMFwdRx_2_EndTime"
#define default_stack_WSMFwdRx_2_EndTime_DEF ""

#define default_stack_WSMFwdRx_2_Enabled_PARAM "WSMFwdRx_2_Enabled"
#define default_stack_WSMFwdRx_2_Enabled_DEF false

#define default_stack_WSMFwdRx_3_DestIP_PARAM "WSMFwdRx_3_DestIP"
#define default_stack_WSMFwdRx_3_DestIP_DEF ""

#define default_stack_WSMFwdRx_3_TransportProto_PARAM "WSMFwdRx_3_TransportProto"
#define default_stack_WSMFwdRx_3_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_3_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_3_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_3_DestPort_PARAM "WSMFwdRx_3_DestPort"
#define default_stack_WSMFwdRx_3_DestPort_MIN 0
#define default_stack_WSMFwdRx_3_DestPort_DEF 0
#define default_stack_WSMFwdRx_3_DestPort_MAX 65535

#define default_stack_WSMFwdRx_3_PSID_PARAM "WSMFwdRx_3_PSID"
#define default_stack_WSMFwdRx_3_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_3_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_3_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_3_RSSI_PARAM "WSMFwdRx_3_RSSI"
#define default_stack_WSMFwdRx_3_RSSI_MIN -100
#define default_stack_WSMFwdRx_3_RSSI_DEF -100
#define default_stack_WSMFwdRx_3_RSSI_MAX -60

#define default_stack_WSMFwdRx_3_MsgSample_PARAM "WSMFwdRx_3_MsgSample"
#define default_stack_WSMFwdRx_3_MsgSample_MIN 1
#define default_stack_WSMFwdRx_3_MsgSample_DEF 1
#define default_stack_WSMFwdRx_3_MsgSample_MAX 9

#define default_stack_WSMFwdRx_3_StartTime_PARAM "WSMFwdRx_3_StartTime"
#define default_stack_WSMFwdRx_3_StartTime_DEF ""

#define default_stack_WSMFwdRx_3_EndTime_PARAM "WSMFwdRx_3_EndTime"
#define default_stack_WSMFwdRx_3_EndTime_DEF ""

#define default_stack_WSMFwdRx_3_Enabled_PARAM "WSMFwdRx_3_Enabled"
#define default_stack_WSMFwdRx_3_Enabled_DEF false

#define default_stack_WSMFwdRx_4_DestIP_PARAM "WSMFwdRx_4_DestIP"
#define default_stack_WSMFwdRx_4_DestIP_DEF ""

#define default_stack_WSMFwdRx_4_DestPort_PARAM "WSMFwdRx_4_DestPort"
#define default_stack_WSMFwdRx_4_DestPort_MIN 0
#define default_stack_WSMFwdRx_4_DestPort_DEF 0
#define default_stack_WSMFwdRx_4_DestPort_MAX 65535

#define default_stack_WSMFwdRx_4_TransportProto_PARAM "WSMFwdRx_4_TransportProto"
#define default_stack_WSMFwdRx_4_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_4_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_4_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_4_PSID_PARAM "WSMFwdRx_4_PSID"
#define default_stack_WSMFwdRx_4_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_4_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_4_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_4_RSSI_PARAM "WSMFwdRx_4_RSSI"
#define default_stack_WSMFwdRx_4_RSSI_MIN -100
#define default_stack_WSMFwdRx_4_RSSI_DEF -100
#define default_stack_WSMFwdRx_4_RSSI_MAX -60

#define default_stack_WSMFwdRx_4_MsgSample_PARAM "WSMFwdRx_4_MsgSample"
#define default_stack_WSMFwdRx_4_MsgSample_MIN 1
#define default_stack_WSMFwdRx_4_MsgSample_DEF 1
#define default_stack_WSMFwdRx_4_MsgSample_MAX 9

#define default_stack_WSMFwdRx_4_StartTime_PARAM "WSMFwdRx_4_StartTime"
#define default_stack_WSMFwdRx_4_StartTime_DEF ""

#define default_stack_WSMFwdRx_4_EndTime_PARAM "WSMFwdRx_4_EndTime"
#define default_stack_WSMFwdRx_4_EndTime_DEF ""

#define default_stack_WSMFwdRx_4_Enabled_PARAM "WSMFwdRx_4_Enabled"
#define default_stack_WSMFwdRx_4_Enabled_DEF false

#define default_stack_WSMFwdRx_5_DestIP_PARAM "WSMFwdRx_5_DestIP"
#define default_stack_WSMFwdRx_5_DestIP_DEF ""

#define default_stack_WSMFwdRx_5_DestPort_PARAM "WSMFwdRx_5_DestPort"
#define default_stack_WSMFwdRx_5_DestPort_MIN 0
#define default_stack_WSMFwdRx_5_DestPort_DEF 0
#define default_stack_WSMFwdRx_5_DestPort_MAX 65535

#define default_stack_WSMFwdRx_5_TransportProto_PARAM "WSMFwdRx_5_TransportProto"
#define default_stack_WSMFwdRx_5_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_5_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_5_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_5_PSID_PARAM "WSMFwdRx_5_PSID"
#define default_stack_WSMFwdRx_5_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_5_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_5_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_5_RSSI_PARAM "WSMFwdRx_5_RSSI"
#define default_stack_WSMFwdRx_5_RSSI_MIN -100
#define default_stack_WSMFwdRx_5_RSSI_DEF -100
#define default_stack_WSMFwdRx_5_RSSI_MAX -60

#define default_stack_WSMFwdRx_5_MsgSample_PARAM "WSMFwdRx_5_MsgSample"
#define default_stack_WSMFwdRx_5_MsgSample_MIN 1
#define default_stack_WSMFwdRx_5_MsgSample_DEF 1
#define default_stack_WSMFwdRx_5_MsgSample_MAX 9

#define default_stack_WSMFwdRx_5_StartTime_PARAM "WSMFwdRx_5_StartTime"
#define default_stack_WSMFwdRx_5_StartTime_DEF ""

#define default_stack_WSMFwdRx_5_EndTime_PARAM "WSMFwdRx_5_EndTime"
#define default_stack_WSMFwdRx_5_EndTime_DEF ""

#define default_stack_WSMFwdRx_5_Enabled_PARAM "WSMFwdRx_5_Enabled"
#define default_stack_WSMFwdRx_5_Enabled_DEF false

#define default_stack_WSMFwdRx_6_DestIP_PARAM "WSMFwdRx_6_DestIP"
#define default_stack_WSMFwdRx_6_DestIP_DEF ""

#define default_stack_WSMFwdRx_6_DestPort_PARAM "WSMFwdRx_6_DestPort"
#define default_stack_WSMFwdRx_6_DestPort_MIN 0
#define default_stack_WSMFwdRx_6_DestPort_DEF 0
#define default_stack_WSMFwdRx_6_DestPort_MAX 65535

#define default_stack_WSMFwdRx_6_TransportProto_PARAM "WSMFwdRx_6_TransportProto"
#define default_stack_WSMFwdRx_6_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_6_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_6_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_6_PSID_PARAM "WSMFwdRx_6_PSID"
#define default_stack_WSMFwdRx_6_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_6_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_6_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_6_RSSI_PARAM "WSMFwdRx_6_RSSI"
#define default_stack_WSMFwdRx_6_RSSI_MIN -100
#define default_stack_WSMFwdRx_6_RSSI_DEF -100
#define default_stack_WSMFwdRx_6_RSSI_MAX -60

#define default_stack_WSMFwdRx_6_MsgSample_PARAM "WSMFwdRx_6_MsgSample"
#define default_stack_WSMFwdRx_6_MsgSample_MIN 1
#define default_stack_WSMFwdRx_6_MsgSample_DEF 1
#define default_stack_WSMFwdRx_6_MsgSample_MAX 9

#define default_stack_WSMFwdRx_6_StartTime_PARAM "WSMFwdRx_6_StartTime"
#define default_stack_WSMFwdRx_6_StartTime_DEF ""

#define default_stack_WSMFwdRx_6_EndTime_PARAM "WSMFwdRx_6_EndTime"
#define default_stack_WSMFwdRx_6_EndTime_DEF ""

#define default_stack_WSMFwdRx_6_Enabled_PARAM "WSMFwdRx_6_Enabled"
#define default_stack_WSMFwdRx_6_Enabled_DEF false

#define default_stack_WSMFwdRx_7_DestIP_PARAM "WSMFwdRx_7_DestIP"
#define default_stack_WSMFwdRx_7_DestIP_DEF ""

#define default_stack_WSMFwdRx_7_DestPort_PARAM "WSMFwdRx_7_DestPort"
#define default_stack_WSMFwdRx_7_DestPort_MIN 0
#define default_stack_WSMFwdRx_7_DestPort_DEF 0
#define default_stack_WSMFwdRx_7_DestPort_MAX 65535

#define default_stack_WSMFwdRx_7_TransportProto_PARAM "WSMFwdRx_7_TransportProto"
#define default_stack_WSMFwdRx_7_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_7_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_7_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_7_PSID_PARAM "WSMFwdRx_7_PSID"
#define default_stack_WSMFwdRx_7_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_7_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_7_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_7_RSSI_PARAM "WSMFwdRx_7_RSSI"
#define default_stack_WSMFwdRx_7_RSSI_MIN -100
#define default_stack_WSMFwdRx_7_RSSI_DEF -100
#define default_stack_WSMFwdRx_7_RSSI_MAX -60

#define default_stack_WSMFwdRx_7_MsgSample_PARAM "WSMFwdRx_7_MsgSample"
#define default_stack_WSMFwdRx_7_MsgSample_MIN 1
#define default_stack_WSMFwdRx_7_MsgSample_DEF 1
#define default_stack_WSMFwdRx_7_MsgSample_MAX 9

#define default_stack_WSMFwdRx_7_StartTime_PARAM "WSMFwdRx_7_StartTime"
#define default_stack_WSMFwdRx_7_StartTime_DEF ""

#define default_stack_WSMFwdRx_7_EndTime_PARAM "WSMFwdRx_7_EndTime"
#define default_stack_WSMFwdRx_7_EndTime_DEF ""

#define default_stack_WSMFwdRx_7_Enabled_PARAM "WSMFwdRx_7_Enabled"
#define default_stack_WSMFwdRx_7_Enabled_DEF false

#define default_stack_WSMFwdRx_8_DestIP_PARAM "WSMFwdRx_8_DestIP"
#define default_stack_WSMFwdRx_8_DestIP_DEF ""

#define default_stack_WSMFwdRx_8_DestPort_PARAM "WSMFwdRx_8_DestPort"
#define default_stack_WSMFwdRx_8_DestPort_MIN 0
#define default_stack_WSMFwdRx_8_DestPort_DEF 0
#define default_stack_WSMFwdRx_8_DestPort_MAX 65535

#define default_stack_WSMFwdRx_8_TransportProto_PARAM "WSMFwdRx_8_TransportProto"
#define default_stack_WSMFwdRx_8_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_8_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_8_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_8_PSID_PARAM "WSMFwdRx_8_PSID"
#define default_stack_WSMFwdRx_8_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_8_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_8_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_8_RSSI_PARAM "WSMFwdRx_8_RSSI"
#define default_stack_WSMFwdRx_8_RSSI_MIN -100
#define default_stack_WSMFwdRx_8_RSSI_DEF -100
#define default_stack_WSMFwdRx_8_RSSI_MAX -60

#define default_stack_WSMFwdRx_8_MsgSample_PARAM "WSMFwdRx_8_MsgSample"
#define default_stack_WSMFwdRx_8_MsgSample_MIN 1
#define default_stack_WSMFwdRx_8_MsgSample_DEF 1
#define default_stack_WSMFwdRx_8_MsgSample_MAX 9

#define default_stack_WSMFwdRx_8_StartTime_PARAM "WSMFwdRx_8_StartTime"
#define default_stack_WSMFwdRx_8_StartTime_DEF ""

#define default_stack_WSMFwdRx_8_EndTime_PARAM "WSMFwdRx_8_EndTime"
#define default_stack_WSMFwdRx_8_EndTime_DEF ""

#define default_stack_WSMFwdRx_8_Enabled_PARAM "WSMFwdRx_8_Enabled"
#define default_stack_WSMFwdRx_8_Enabled_DEF false

#define default_stack_WSMFwdRx_9_DestIP_PARAM "WSMFwdRx_9_DestIP"
#define default_stack_WSMFwdRx_9_DestIP_DEF ""

#define default_stack_WSMFwdRx_9_DestPort_PARAM "WSMFwdRx_9_DestPort"
#define default_stack_WSMFwdRx_9_DestPort_MIN 0
#define default_stack_WSMFwdRx_9_DestPort_DEF 0
#define default_stack_WSMFwdRx_9_DestPort_MAX 65535

#define default_stack_WSMFwdRx_9_TransportProto_PARAM "WSMFwdRx_9_TransportProto"
#define default_stack_WSMFwdRx_9_TransportProto_MIN 0x1ul
#define default_stack_WSMFwdRx_9_TransportProto_DEF 0x10ul
#define default_stack_WSMFwdRx_9_TransportProto_MAX 0x10ul

#define default_stack_WSMFwdRx_9_PSID_PARAM "WSMFwdRx_9_PSID"
#define default_stack_WSMFwdRx_9_PSID_MIN 0x0ul
#define default_stack_WSMFwdRx_9_PSID_DEF 0x0ul
#define default_stack_WSMFwdRx_9_PSID_MAX 0xeffffffful

#define default_stack_WSMFwdRx_9_RSSI_PARAM "WSMFwdRx_9_RSSI"
#define default_stack_WSMFwdRx_9_RSSI_MIN -100
#define default_stack_WSMFwdRx_9_RSSI_DEF -100
#define default_stack_WSMFwdRx_9_RSSI_MAX -60

#define default_stack_WSMFwdRx_9_MsgSample_PARAM "WSMFwdRx_9_MsgSample"
#define default_stack_WSMFwdRx_9_MsgSample_MIN 1
#define default_stack_WSMFwdRx_9_MsgSample_DEF 1
#define default_stack_WSMFwdRx_9_MsgSample_MAX 9

#define default_stack_WSMFwdRx_9_StartTime_PARAM "WSMFwdRx_9_StartTime"
#define default_stack_WSMFwdRx_9_StartTime_DEF ""

#define default_stack_WSMFwdRx_9_EndTime_PARAM "WSMFwdRx_9_EndTime"
#define default_stack_WSMFwdRx_9_EndTime_DEF ""

#define default_stack_WSMFwdRx_9_Enabled_PARAM "WSMFwdRx_9_Enabled"
#define default_stack_WSMFwdRx_9_Enabled_DEF false

#define default_stack_Cohda_DebugLevel_PARAM "Cohda_DebugLevel"
#define default_stack_Cohda_DebugLevel_MIN 0
#define default_stack_Cohda_DebugLevel_DEF 4
#define default_stack_Cohda_DebugLevel_MAX 256
#define default_stack_Cohda_DebugLevel_EMERG (0)
#define default_stack_Cohda_DebugLevel_ALERT (1)
#define default_stack_Cohda_DebugLevel_CRIT (2)
#define default_stack_Cohda_DebugLevel_ERR (3)
#define default_stack_Cohda_DebugLevel_WARN (4)
#define default_stack_Cohda_DebugLevel_NOTICE (5)
#define default_stack_Cohda_DebugLevel_API (6)
#define default_stack_Cohda_DebugLevel_INFO (6)
#define default_stack_Cohda_DebugLevel_DEBUG (7)
#define default_stack_Cohda_DebugLevel_INTERN (7)
#define default_stack_Cohda_DebugLevel_TEST (8)
#define default_stack_Cohda_DebugLevel_VERBOSE (9)
#define default_stack_Cohda_DebugLevel_IRQ (127)
#define default_stack_Cohda_DebugLevel_ALL (255)
#define default_stack_Cohda_DebugLevel_No_change (256)

#define default_stack_Cohda_DebugTimeLevel_PARAM "Cohda_DebugTimeLevel"
#define default_stack_Cohda_DebugTimeLevel_MIN 0
#define default_stack_Cohda_DebugTimeLevel_DEF 2
#define default_stack_Cohda_DebugTimeLevel_MAX 2
#define default_stack_Cohda_DebugTimeLevel_None (0)
#define default_stack_Cohda_DebugTimeLevel_UnixTime (1)
#define default_stack_Cohda_DebugTimeLevel_UTCTime (2)

#define default_stack_Cohda_DebugExtraTimeLevel_PARAM "Cohda_DebugExtraTimeLevel"
#define default_stack_Cohda_DebugExtraTimeLevel_MIN 0
#define default_stack_Cohda_DebugExtraTimeLevel_DEF 0
#define default_stack_Cohda_DebugExtraTimeLevel_MAX 7
#define default_stack_Cohda_DebugExtraTimeLevel_None (0)
#define default_stack_Cohda_DebugExtraTimeLevel_UnixTime (1)
#define default_stack_Cohda_DebugExtraTimeLevel_StartDeltaTime (2)
#define default_stack_Cohda_DebugExtraTimeLevel_UTCTime (3)
#define default_stack_Cohda_DebugExtraTimeLevel_MonotonicTime (4)
#define default_stack_Cohda_DebugExtraTimeLevel_ITSTime (5)
#define default_stack_Cohda_DebugExtraTimeLevel_ReplayUnixTime (6)
#define default_stack_Cohda_DebugExtraTimeLevel_ReplayUTCTime (7)

#define default_stack_Cohda_DebugThreadLevel_PARAM "Cohda_DebugThreadLevel"
#define default_stack_Cohda_DebugThreadLevel_DEF false
#define default_stack_Cohda_DebugThreadLevel_None ((bool)0)
#define default_stack_Cohda_DebugThreadLevel_ThreadID ((bool)1)

#define default_stack_Cohda_DebugInfoLevel_PARAM "Cohda_DebugInfoLevel"
#define default_stack_Cohda_DebugInfoLevel_MIN 0
#define default_stack_Cohda_DebugInfoLevel_DEF 0
#define default_stack_Cohda_DebugInfoLevel_MAX 2
#define default_stack_Cohda_DebugInfoLevel_None (0)
#define default_stack_Cohda_DebugInfoLevel_Level (1)
#define default_stack_Cohda_DebugInfoLevel_ModuleLevel (2)

#define default_stack_Cohda_DebugDumpLevel_PARAM "Cohda_DebugDumpLevel"
#define default_stack_Cohda_DebugDumpLevel_MIN 0
#define default_stack_Cohda_DebugDumpLevel_DEF 2
#define default_stack_Cohda_DebugDumpLevel_MAX 2
#define default_stack_Cohda_DebugDumpLevel_None (0)
#define default_stack_Cohda_DebugDumpLevel_Normal (1)
#define default_stack_Cohda_DebugDumpLevel_Wide (2)

#define default_stack_Cohda_DebugXER_PARAM "Cohda_DebugXER"
#define default_stack_Cohda_DebugXER_MIN 0
#define default_stack_Cohda_DebugXER_DEF 0
#define default_stack_Cohda_DebugXER_MAX 3
#define default_stack_Cohda_DebugXER_None (0x00)
#define default_stack_Cohda_DebugXER_Decode_Tx (0x01)
#define default_stack_Cohda_DebugXER_Decode_Rx (0x02)
#define default_stack_Cohda_DebugXER_Decode_All (0x03)

#define default_stack_Cohda_DebugGSER_PARAM "Cohda_DebugGSER"
#define default_stack_Cohda_DebugGSER_MIN 0
#define default_stack_Cohda_DebugGSER_DEF 0
#define default_stack_Cohda_DebugGSER_MAX 3
#define default_stack_Cohda_DebugGSER_None (0x00)
#define default_stack_Cohda_DebugGSER_Decode_Tx (0x01)
#define default_stack_Cohda_DebugGSER_Decode_Rx (0x02)
#define default_stack_Cohda_DebugGSER_Decode_All (0x03)

#define default_stack_Cohda_DebugConsole_PARAM "Cohda_DebugConsole"
#define default_stack_Cohda_DebugConsole_MIN 0
#define default_stack_Cohda_DebugConsole_DEF 1
#define default_stack_Cohda_DebugConsole_MAX 2
#define default_stack_Cohda_DebugConsole_None (0)
#define default_stack_Cohda_DebugConsole_System_Status (1)
#define default_stack_Cohda_DebugConsole_Packet_Status (2)

#define default_stack_Cohda_DebugThreads_PARAM "Cohda_DebugThreads"
#define default_stack_Cohda_DebugThreads_MIN 0
#define default_stack_Cohda_DebugThreads_DEF 0
#define default_stack_Cohda_DebugThreads_MAX 2

#define default_stack_Cohda_DebugThreadKill_PARAM "Cohda_DebugThreadKill"
#define default_stack_Cohda_DebugThreadKill_DEF false

#define default_stack_PktDebugDumpLevel_PARAM "PktDebugDumpLevel"
#define default_stack_PktDebugDumpLevel_MIN 0
#define default_stack_PktDebugDumpLevel_DEF 0
#define default_stack_PktDebugDumpLevel_MAX 3
#define default_stack_PktDebugDumpLevel_None (0)
#define default_stack_PktDebugDumpLevel_Payload (1)
#define default_stack_PktDebugDumpLevel_Header (2)
#define default_stack_PktDebugDumpLevel_Descriptor (3)

#define default_stack_PktDebugDropLevel_PARAM "PktDebugDropLevel"
#define default_stack_PktDebugDropLevel_MIN 0
#define default_stack_PktDebugDropLevel_DEF 0
#define default_stack_PktDebugDropLevel_MAX 3

#define default_stack_PktDebugSendLevel_PARAM "PktDebugSendLevel"
#define default_stack_PktDebugSendLevel_MIN 0
#define default_stack_PktDebugSendLevel_DEF 0
#define default_stack_PktDebugSendLevel_MAX 3

#define default_stack_PktDebugLocTLevel_PARAM "PktDebugLocTLevel"
#define default_stack_PktDebugLocTLevel_MIN 0
#define default_stack_PktDebugLocTLevel_DEF 0
#define default_stack_PktDebugLocTLevel_MAX 3

#define default_stack_PktDebugFacCacheLevel_PARAM "PktDebugFacCacheLevel"
#define default_stack_PktDebugFacCacheLevel_MIN 0
#define default_stack_PktDebugFacCacheLevel_DEF 0
#define default_stack_PktDebugFacCacheLevel_MAX 3

#define default_stack_PktDebugLDMLevel_PARAM "PktDebugLDMLevel"
#define default_stack_PktDebugLDMLevel_MIN 0
#define default_stack_PktDebugLDMLevel_DEF 0
#define default_stack_PktDebugLDMLevel_MAX 3

#define default_stack_PktDebugAppLevel_PARAM "PktDebugAppLevel"
#define default_stack_PktDebugAppLevel_MIN 0
#define default_stack_PktDebugAppLevel_DEF 0
#define default_stack_PktDebugAppLevel_MAX 3

#define default_stack_PktDebugFailAction_PARAM "PktDebugFailAction"
#define default_stack_PktDebugFailAction_MIN 0
#define default_stack_PktDebugFailAction_DEF 7
#define default_stack_PktDebugFailAction_MAX 7
#define default_stack_PktDebugFailAction_nothing (0)
#define default_stack_PktDebugFailAction_log (1)
#define default_stack_PktDebugFailAction_backtrace (2)
#define default_stack_PktDebugFailAction_abort (4)

#define default_stack_Cohda_UDPUserDebugHost_PARAM "Cohda_UDPUserDebugHost"
#define default_stack_Cohda_UDPUserDebugHost_DEF ""

#define default_stack_Cohda_UDPUserDebugPort_PARAM "Cohda_UDPUserDebugPort"
#define default_stack_Cohda_UDPUserDebugPort_MIN 0
#define default_stack_Cohda_UDPUserDebugPort_DEF 42260
#define default_stack_Cohda_UDPUserDebugPort_MAX 65535

#define default_stack_Cohda_UDPUserDebugMv6_Interface_PARAM "Cohda_UDPUserDebugMv6_Interface"
#define default_stack_Cohda_UDPUserDebugMv6_Interface_DEF ""

#define default_stack_Cohda_UDPUserDebugMv6_Loopback_PARAM "Cohda_UDPUserDebugMv6_Loopback"
#define default_stack_Cohda_UDPUserDebugMv6_Loopback_DEF false

#define default_stack_Cohda_UDPUserDebugMv6_HopLimit_PARAM "Cohda_UDPUserDebugMv6_HopLimit"
#define default_stack_Cohda_UDPUserDebugMv6_HopLimit_MIN 0
#define default_stack_Cohda_UDPUserDebugMv6_HopLimit_DEF 5
#define default_stack_Cohda_UDPUserDebugMv6_HopLimit_MAX 255

#define default_stack_Cohda_MultipleInstance_PARAM "Cohda_MultipleInstance"
#define default_stack_Cohda_MultipleInstance_DEF false

#define default_stack_Cohda_TransmitDelay_s_PARAM "Cohda_TransmitDelay_s"
#define default_stack_Cohda_TransmitDelay_s_MIN -9999
#define default_stack_Cohda_TransmitDelay_s_DEF 0
#define default_stack_Cohda_TransmitDelay_s_MAX 9999

#define default_stack_Cohda_PCAP_LoggingDisabled_PARAM "Cohda_PCAP_LoggingDisabled"
#define default_stack_Cohda_PCAP_LoggingDisabled_DEF false

#define default_stack_Cohda_P1609RxLogEnableFlag_PARAM "Cohda_P1609RxLogEnableFlag"
#define default_stack_Cohda_P1609RxLogEnableFlag_DEF false

#define default_stack_Cohda_P1609TxLogEnableFlag_PARAM "Cohda_P1609TxLogEnableFlag"
#define default_stack_Cohda_P1609TxLogEnableFlag_DEF false

#define default_stack_Cohda_P1609PC5RxLogEnableFlag_PARAM "Cohda_P1609PC5RxLogEnableFlag"
#define default_stack_Cohda_P1609PC5RxLogEnableFlag_DEF true

#define default_stack_Cohda_P1609PC5TxLogEnableFlag_PARAM "Cohda_P1609PC5TxLogEnableFlag"
#define default_stack_Cohda_P1609PC5TxLogEnableFlag_DEF true

#define default_stack_Cohda_C2XLogEnableFlag_PARAM "Cohda_C2XLogEnableFlag"
#define default_stack_Cohda_C2XLogEnableFlag_DEF true

#define default_stack_Cohda_SAECRxLogEnableFlag_PARAM "Cohda_SAECRxLogEnableFlag"
#define default_stack_Cohda_SAECRxLogEnableFlag_DEF false

#define default_stack_Cohda_SAECTxLogEnableFlag_PARAM "Cohda_SAECTxLogEnableFlag"
#define default_stack_Cohda_SAECTxLogEnableFlag_DEF false

#define default_stack_Cohda_GPSLogEnableFlag_PARAM "Cohda_GPSLogEnableFlag"
#define default_stack_Cohda_GPSLogEnableFlag_DEF true

#define default_stack_Cohda_CANLogEnableFlag_PARAM "Cohda_CANLogEnableFlag"
#define default_stack_Cohda_CANLogEnableFlag_DEF false

#define default_stack_Cohda_VStateLogEnableFlag_PARAM "Cohda_VStateLogEnableFlag"
#define default_stack_Cohda_VStateLogEnableFlag_DEF false

#define default_stack_Cohda_VStateCsvEnableFlag_PARAM "Cohda_VStateCsvEnableFlag"
#define default_stack_Cohda_VStateCsvEnableFlag_DEF false

#define default_stack_Cohda_LogDirectoryName_PARAM "Cohda_LogDirectoryName"
#define default_stack_Cohda_LogDirectoryName_DEF "/mnt/ubi/log"

#define default_stack_Cohda_LogDirectoryMode_PARAM "Cohda_LogDirectoryMode"
#define default_stack_Cohda_LogDirectoryMode_DEF "0777"

#define default_stack_Cohda_LogSequentialLogNumbers_PARAM "Cohda_LogSequentialLogNumbers"
#define default_stack_Cohda_LogSequentialLogNumbers_DEF false

#define default_stack_Cohda_LogPollingInterval_PARAM "Cohda_LogPollingInterval"
#define default_stack_Cohda_LogPollingInterval_MIN 0
#define default_stack_Cohda_LogPollingInterval_DEF 300
#define default_stack_Cohda_LogPollingInterval_MAX 86400

#define default_stack_Cohda_LogMinimumFreeSpace_pc_PARAM "Cohda_LogMinimumFreeSpace_pc"
#define default_stack_Cohda_LogMinimumFreeSpace_pc_MIN 0
#define default_stack_Cohda_LogMinimumFreeSpace_pc_DEF 25
#define default_stack_Cohda_LogMinimumFreeSpace_pc_MAX 100

#define default_stack_Cohda_LogCleanupLevel_PARAM "Cohda_LogCleanupLevel"
#define default_stack_Cohda_LogCleanupLevel_MIN 0
#define default_stack_Cohda_LogCleanupLevel_DEF 1
#define default_stack_Cohda_LogCleanupLevel_MAX 3

#define default_stack_Cohda_LogBufferSize_PARAM "Cohda_LogBufferSize"
#define default_stack_Cohda_LogBufferSize_MIN -1
#define default_stack_Cohda_LogBufferSize_DEF -1
#define default_stack_Cohda_LogBufferSize_MAX 2048

#define default_stack_Cohda_LogSystemInfo_PARAM "Cohda_LogSystemInfo"
#define default_stack_Cohda_LogSystemInfo_DEF true

#define default_stack_Cohda_LogCaptureSTDOUT_PARAM "Cohda_LogCaptureSTDOUT"
#define default_stack_Cohda_LogCaptureSTDOUT_MIN 0
#define default_stack_Cohda_LogCaptureSTDOUT_DEF 0
#define default_stack_Cohda_LogCaptureSTDOUT_MAX 2000

#define default_stack_Cohda_LogCaptureSTDOUT_Host_PARAM "Cohda_LogCaptureSTDOUT_Host"
#define default_stack_Cohda_LogCaptureSTDOUT_Host_DEF ""

#define default_stack_Cohda_LogCaptureSTDOUT_Port_PARAM "Cohda_LogCaptureSTDOUT_Port"
#define default_stack_Cohda_LogCaptureSTDOUT_Port_MIN 0
#define default_stack_Cohda_LogCaptureSTDOUT_Port_DEF 60501
#define default_stack_Cohda_LogCaptureSTDOUT_Port_MAX 65535

#define default_stack_Cohda_LogCaptureSTDERR_PARAM "Cohda_LogCaptureSTDERR"
#define default_stack_Cohda_LogCaptureSTDERR_MIN 0
#define default_stack_Cohda_LogCaptureSTDERR_DEF 1
#define default_stack_Cohda_LogCaptureSTDERR_MAX 2000

#define default_stack_Cohda_LogCaptureSTDERR_Host_PARAM "Cohda_LogCaptureSTDERR_Host"
#define default_stack_Cohda_LogCaptureSTDERR_Host_DEF ""

#define default_stack_Cohda_LogCaptureSTDERR_Port_PARAM "Cohda_LogCaptureSTDERR_Port"
#define default_stack_Cohda_LogCaptureSTDERR_Port_MIN 0
#define default_stack_Cohda_LogCaptureSTDERR_Port_DEF 60500
#define default_stack_Cohda_LogCaptureSTDERR_Port_MAX 65535

#define default_stack_Cohda_LogCaptureConf_PARAM "Cohda_LogCaptureConf"
#define default_stack_Cohda_LogCaptureConf_MIN 0
#define default_stack_Cohda_LogCaptureConf_DEF 1
#define default_stack_Cohda_LogCaptureConf_MAX 2
#define default_stack_Cohda_LogCaptureConf_None (0)
#define default_stack_Cohda_LogCaptureConf_All (1)
#define default_stack_Cohda_LogCaptureConf_Minimal (2)

#define default_stack_Cohda_LogCaptureSyslog_PARAM "Cohda_LogCaptureSyslog"
#define default_stack_Cohda_LogCaptureSyslog_DEF false

#define default_stack_Cohda_LogAerolinkConfig_PARAM "Cohda_LogAerolinkConfig"
#define default_stack_Cohda_LogAerolinkConfig_DEF false

#define default_stack_Cohda_KillallTcpDump_PARAM "Cohda_KillallTcpDump"
#define default_stack_Cohda_KillallTcpDump_DEF true

#define default_stack_Cohda_LogCaptureSTDERR_Mv6_HopLimit_PARAM "Cohda_LogCaptureSTDERR_Mv6_HopLimit"
#define default_stack_Cohda_LogCaptureSTDERR_Mv6_HopLimit_MIN 0
#define default_stack_Cohda_LogCaptureSTDERR_Mv6_HopLimit_DEF 5
#define default_stack_Cohda_LogCaptureSTDERR_Mv6_HopLimit_MAX 255

#define default_stack_Cohda_LogCaptureSTDERR_Mv6_Interface_PARAM "Cohda_LogCaptureSTDERR_Mv6_Interface"
#define default_stack_Cohda_LogCaptureSTDERR_Mv6_Interface_DEF ""

#define default_stack_Cohda_LogCaptureSTDERR_Mv6_Loopback_PARAM "Cohda_LogCaptureSTDERR_Mv6_Loopback"
#define default_stack_Cohda_LogCaptureSTDERR_Mv6_Loopback_DEF false

#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_HopLimit_PARAM "Cohda_LogCaptureSTDOUT_Mv6_HopLimit"
#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_HopLimit_MIN 0
#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_HopLimit_DEF 5
#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_HopLimit_MAX 255

#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_Interface_PARAM "Cohda_LogCaptureSTDOUT_Mv6_Interface"
#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_Interface_DEF ""

#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_Loopback_PARAM "Cohda_LogCaptureSTDOUT_Mv6_Loopback"
#define default_stack_Cohda_LogCaptureSTDOUT_Mv6_Loopback_DEF false

#define default_stack_Cohda_ReplayFakeVerification_PARAM "Cohda_ReplayFakeVerification"
#define default_stack_Cohda_ReplayFakeVerification_MIN 0
#define default_stack_Cohda_ReplayFakeVerification_DEF 0
#define default_stack_Cohda_ReplayFakeVerification_MAX 2

#define default_stack_Cohda_CANReplayFileName_PARAM "Cohda_CANReplayFileName"
#define default_stack_Cohda_CANReplayFileName_DEF ""

#define default_stack_Cohda_GPSReplayFileName_PARAM "Cohda_GPSReplayFileName"
#define default_stack_Cohda_GPSReplayFileName_DEF ""

#define default_stack_Cohda_PRXReplayFileName_PARAM "Cohda_PRXReplayFileName"
#define default_stack_Cohda_PRXReplayFileName_DEF ""

#define default_stack_Cohda_PTXReplayFileName_PARAM "Cohda_PTXReplayFileName"
#define default_stack_Cohda_PTXReplayFileName_DEF ""

#define default_stack_Cohda_G5MReplayFileName_PARAM "Cohda_G5MReplayFileName"
#define default_stack_Cohda_G5MReplayFileName_DEF ""

#define default_stack_Cohda_G5SimulatedStations_PARAM "Cohda_G5SimulatedStations"
#define default_stack_Cohda_G5SimulatedStations_MIN 0
#define default_stack_Cohda_G5SimulatedStations_DEF 0
#define default_stack_Cohda_G5SimulatedStations_MAX 100

#define default_stack_Cohda_ReplayDelayModulo_PARAM "Cohda_ReplayDelayModulo"
#define default_stack_Cohda_ReplayDelayModulo_MIN 0
#define default_stack_Cohda_ReplayDelayModulo_DEF 60
#define default_stack_Cohda_ReplayDelayModulo_MAX 900

#define default_stack_Cohda_ReplayDelay_PARAM "Cohda_ReplayDelay"
#define default_stack_Cohda_ReplayDelay_MIN 0
#define default_stack_Cohda_ReplayDelay_DEF 0
#define default_stack_Cohda_ReplayDelay_MAX 60

#define default_stack_Cohda_ReplaySimulation_PARAM "Cohda_ReplaySimulation"
#define default_stack_Cohda_ReplaySimulation_DEF false

#define default_stack_Cohda_ReplayLongOffset_PARAM "Cohda_ReplayLongOffset"
#define default_stack_Cohda_ReplayLongOffset_MIN -360.0
#define default_stack_Cohda_ReplayLongOffset_DEF 0.0
#define default_stack_Cohda_ReplayLongOffset_MAX 360.0

#define default_stack_Cohda_PRXReplayHasNoWSMPExtra_PARAM "Cohda_PRXReplayHasNoWSMPExtra"
#define default_stack_Cohda_PRXReplayHasNoWSMPExtra_DEF false

#define default_stack_Cohda_STATSPollingInterval_ms_PARAM "Cohda_STATSPollingInterval_ms"
#define default_stack_Cohda_STATSPollingInterval_ms_MIN 0
#define default_stack_Cohda_STATSPollingInterval_ms_DEF 0
#define default_stack_Cohda_STATSPollingInterval_ms_MAX 60000

#define default_stack_Cohda_STATSSysinfoLogInterval_PARAM "Cohda_STATSSysinfoLogInterval"
#define default_stack_Cohda_STATSSysinfoLogInterval_MIN 0
#define default_stack_Cohda_STATSSysinfoLogInterval_DEF 5
#define default_stack_Cohda_STATSSysinfoLogInterval_MAX 10000

#define default_stack_Cohda_CONFPollingInterval_s_PARAM "Cohda_CONFPollingInterval_s"
#define default_stack_Cohda_CONFPollingInterval_s_MIN -1
#define default_stack_Cohda_CONFPollingInterval_s_DEF -1
#define default_stack_Cohda_CONFPollingInterval_s_MAX 788400000

#define default_stack_Cohda_CAN_InterfaceName_PARAM "Cohda_CAN_InterfaceName"
#define default_stack_Cohda_CAN_InterfaceName_DEF "can0"

#define default_stack_Cohda_CAN_BounceInterfaceOnRestart_PARAM "Cohda_CAN_BounceInterfaceOnRestart"
#define default_stack_Cohda_CAN_BounceInterfaceOnRestart_DEF false

#define default_stack_Cohda_CAN_RestartInterfaceHack_PARAM "Cohda_CAN_RestartInterfaceHack"
#define default_stack_Cohda_CAN_RestartInterfaceHack_DEF false

#define default_stack_Cohda_CAN_ProcessShortFrames_PARAM "Cohda_CAN_ProcessShortFrames"
#define default_stack_Cohda_CAN_ProcessShortFrames_DEF false

#define default_stack_Cohda_CAN_TestMode_PARAM "Cohda_CAN_TestMode"
#define default_stack_Cohda_CAN_TestMode_DEF false

#define default_stack_Cohda_GPSRx_Source_PARAM "Cohda_GPSRx_Source"
#define default_stack_Cohda_GPSRx_Source_MIN 0
#define default_stack_Cohda_GPSRx_Source_DEF 1
#define default_stack_Cohda_GPSRx_Source_MAX 6
#define default_stack_Cohda_GPSRx_Source_None (0)
#define default_stack_Cohda_GPSRx_Source_GPSD (1)
#define default_stack_Cohda_GPSRx_Source_Fake (2)
#define default_stack_Cohda_GPSRx_Source_Replay (3)
#define default_stack_Cohda_GPSRx_Source_Fixed (4)
#define default_stack_Cohda_GPSRx_Source_QTI_Kinematics (5)
#define default_stack_Cohda_GPSRx_Source_ATK_POTI (6)

#define default_stack_Cohda_GPSD_HostName_PARAM "Cohda_GPSD_HostName"
#define default_stack_Cohda_GPSD_HostName_DEF "localhost"

#define default_stack_Cohda_GPSD_Port_PARAM "Cohda_GPSD_Port"
#define default_stack_Cohda_GPSD_Port_MIN 1
#define default_stack_Cohda_GPSD_Port_DEF 2947
#define default_stack_Cohda_GPSD_Port_MAX 65535

#define default_stack_Cohda_GPSD_Watch_PARAM "Cohda_GPSD_Watch"
#define default_stack_Cohda_GPSD_Watch_MIN -1
#define default_stack_Cohda_GPSD_Watch_DEF -1
#define default_stack_Cohda_GPSD_Watch_MAX 1

#define default_stack_Cohda_GPSThreshold_mode_PARAM "Cohda_GPSThreshold_mode"
#define default_stack_Cohda_GPSThreshold_mode_MIN -1
#define default_stack_Cohda_GPSThreshold_mode_DEF 3
#define default_stack_Cohda_GPSThreshold_mode_MAX 3

#define default_stack_Cohda_GPSRx_Fake_Speed_PARAM "Cohda_GPSRx_Fake_Speed"
#define default_stack_Cohda_GPSRx_Fake_Speed_MIN -100
#define default_stack_Cohda_GPSRx_Fake_Speed_DEF 10
#define default_stack_Cohda_GPSRx_Fake_Speed_MAX 100

#define default_stack_Cohda_GPSRx_Sys_Time_PARAM "Cohda_GPSRx_Sys_Time"
#define default_stack_Cohda_GPSRx_Sys_Time_DEF false

#define default_stack_Cohda_GPSRx_FixedLat_PARAM "Cohda_GPSRx_FixedLat"
#define default_stack_Cohda_GPSRx_FixedLat_MIN -90.0
#define default_stack_Cohda_GPSRx_FixedLat_DEF -34.0
#define default_stack_Cohda_GPSRx_FixedLat_MAX 90.0

#define default_stack_Cohda_GPSRx_FixedLong_PARAM "Cohda_GPSRx_FixedLong"
#define default_stack_Cohda_GPSRx_FixedLong_MIN -180.0
#define default_stack_Cohda_GPSRx_FixedLong_DEF 138.0
#define default_stack_Cohda_GPSRx_FixedLong_MAX 180.0

#define default_stack_Cohda_GPSRx_FixedAlt_PARAM "Cohda_GPSRx_FixedAlt"
#define default_stack_Cohda_GPSRx_FixedAlt_MIN -1000.0
#define default_stack_Cohda_GPSRx_FixedAlt_DEF 5.0
#define default_stack_Cohda_GPSRx_FixedAlt_MAX 10000.0

#define default_stack_Cohda_GPSRx_QTIHostAddr_PARAM "Cohda_GPSRx_QTIHostAddr"
#define default_stack_Cohda_GPSRx_QTIHostAddr_DEF "192.168.100.1"

#define default_stack_Cohda_GPSRx_QTIReportRate_PARAM "Cohda_GPSRx_QTIReportRate"
#define default_stack_Cohda_GPSRx_QTIReportRate_MIN 1
#define default_stack_Cohda_GPSRx_QTIReportRate_DEF 10
#define default_stack_Cohda_GPSRx_QTIReportRate_MAX 10

#define default_stack_Cohda_GPSRx_ATKGnssUartPath_PARAM "Cohda_GPSRx_ATKGnssUartPath"
#define default_stack_Cohda_GPSRx_ATKGnssUartPath_DEF "/dev/ttyAMA1"

#define default_stack_Cohda_GPSRx_max_bad_times_PARAM "Cohda_GPSRx_max_bad_times"
#define default_stack_Cohda_GPSRx_max_bad_times_MIN -1
#define default_stack_Cohda_GPSRx_max_bad_times_DEF -1
#define default_stack_Cohda_GPSRx_max_bad_times_MAX 86400

#define default_stack_Cohda_GPSRx_min_diff_PARAM "Cohda_GPSRx_min_diff"
#define default_stack_Cohda_GPSRx_min_diff_MIN -2.0
#define default_stack_Cohda_GPSRx_min_diff_DEF -0.01
#define default_stack_Cohda_GPSRx_min_diff_MAX 1.0

#define default_stack_Cohda_GPSRx_max_diff_PARAM "Cohda_GPSRx_max_diff"
#define default_stack_Cohda_GPSRx_max_diff_MIN 0.0
#define default_stack_Cohda_GPSRx_max_diff_DEF 0.25
#define default_stack_Cohda_GPSRx_max_diff_MAX 2.0

#define default_stack_Cohda_GPSRx_max_bad_pos_PARAM "Cohda_GPSRx_max_bad_pos"
#define default_stack_Cohda_GPSRx_max_bad_pos_MIN 0
#define default_stack_Cohda_GPSRx_max_bad_pos_DEF 2
#define default_stack_Cohda_GPSRx_max_bad_pos_MAX 10

#define default_stack_Cohda_RunAsUser_PARAM "Cohda_RunAsUser"
#define default_stack_Cohda_RunAsUser_DEF ""

#define default_stack_Cohda_P1609TxPosInterpolation_PARAM "Cohda_P1609TxPosInterpolation"
#define default_stack_Cohda_P1609TxPosInterpolation_DEF true

#define default_stack_Cohda_LPH_Ext_Update_PARAM "Cohda_LPH_Ext_Update"
#define default_stack_Cohda_LPH_Ext_Update_DEF false

#define default_stack_Cohda_LPH_Recalculate_Heading_PARAM "Cohda_LPH_Recalculate_Heading"
#define default_stack_Cohda_LPH_Recalculate_Heading_DEF false

#define default_stack_Cohda_LPH_TAI_Offset_PARAM "Cohda_LPH_TAI_Offset"
#define default_stack_Cohda_LPH_TAI_Offset_MIN -30
#define default_stack_Cohda_LPH_TAI_Offset_DEF 5
#define default_stack_Cohda_LPH_TAI_Offset_MAX 255

#define default_stack_Cohda_PluginDir_PARAM "Cohda_PluginDir"
#define default_stack_Cohda_PluginDir_DEF ""

#define default_stack_Cohda_RandomDeviceFileName_PARAM "Cohda_RandomDeviceFileName"
#define default_stack_Cohda_RandomDeviceFileName_DEF "/dev/urandom"

#define default_stack_Cohda_BrakesActiveAccelThreshold_mps2_PARAM "Cohda_BrakesActiveAccelThreshold_mps2"
#define default_stack_Cohda_BrakesActiveAccelThreshold_mps2_MIN -999.0
#define default_stack_Cohda_BrakesActiveAccelThreshold_mps2_DEF -2.0
#define default_stack_Cohda_BrakesActiveAccelThreshold_mps2_MAX 0.0

#define default_stack_Cohda_HeavyBrakeAccelThreshold_mps2_PARAM "Cohda_HeavyBrakeAccelThreshold_mps2"
#define default_stack_Cohda_HeavyBrakeAccelThreshold_mps2_MIN -999.0
#define default_stack_Cohda_HeavyBrakeAccelThreshold_mps2_DEF -4.0
#define default_stack_Cohda_HeavyBrakeAccelThreshold_mps2_MAX 0.0

#define default_stack_Cohda_HeavyBrakeMinSpeedThreshold_mps_PARAM "Cohda_HeavyBrakeMinSpeedThreshold_mps"
#define default_stack_Cohda_HeavyBrakeMinSpeedThreshold_mps_MIN 0.0
#define default_stack_Cohda_HeavyBrakeMinSpeedThreshold_mps_DEF 4.17
#define default_stack_Cohda_HeavyBrakeMinSpeedThreshold_mps_MAX 999.0

#define default_stack_Cohda_HeavyBrakeLonAccClipHigh_mps2_PARAM "Cohda_HeavyBrakeLonAccClipHigh_mps2"
#define default_stack_Cohda_HeavyBrakeLonAccClipHigh_mps2_MIN -999.0
#define default_stack_Cohda_HeavyBrakeLonAccClipHigh_mps2_DEF -10.0
#define default_stack_Cohda_HeavyBrakeLonAccClipHigh_mps2_MAX 0.0

#define default_stack_Cohda_HeavyBrakeLatAccClipHigh_mps2_PARAM "Cohda_HeavyBrakeLatAccClipHigh_mps2"
#define default_stack_Cohda_HeavyBrakeLatAccClipHigh_mps2_MIN -3.0
#define default_stack_Cohda_HeavyBrakeLatAccClipHigh_mps2_DEF 3.0
#define default_stack_Cohda_HeavyBrakeLatAccClipHigh_mps2_MAX 3.0

#define default_stack_Cohda_ForceSchedulerPolicy_PARAM "Cohda_ForceSchedulerPolicy"
#define default_stack_Cohda_ForceSchedulerPolicy_MIN -1
#define default_stack_Cohda_ForceSchedulerPolicy_DEF -1
#define default_stack_Cohda_ForceSchedulerPolicy_MAX 2
#define default_stack_Cohda_ForceSchedulerPolicy_SCHED_OTHER (0)
#define default_stack_Cohda_ForceSchedulerPolicy_SCHED_FIFO (1)
#define default_stack_Cohda_ForceSchedulerPolicy_SCHED_RR (2)

#define default_stack_Cohda_P1609_RxBufMax_PARAM "Cohda_P1609_RxBufMax"
#define default_stack_Cohda_P1609_RxBufMax_MIN 0
#define default_stack_Cohda_P1609_RxBufMax_DEF 1408
#define default_stack_Cohda_P1609_RxBufMax_MAX 65535

#define default_stack_Cohda_P1609_TxBufMin_PARAM "Cohda_P1609_TxBufMin"
#define default_stack_Cohda_P1609_TxBufMin_MIN 0
#define default_stack_Cohda_P1609_TxBufMin_DEF 0
#define default_stack_Cohda_P1609_TxBufMin_MAX 2500

#define default_stack_Cohda_P1609_TxBufMax_PARAM "Cohda_P1609_TxBufMax"
#define default_stack_Cohda_P1609_TxBufMax_MIN 0
#define default_stack_Cohda_P1609_TxBufMax_DEF 1500
#define default_stack_Cohda_P1609_TxBufMax_MAX 65535

#define default_stack_Cohda_KUC_Mode_PARAM "Cohda_KUC_Mode"
#define default_stack_Cohda_KUC_Mode_MIN 0
#define default_stack_Cohda_KUC_Mode_DEF 0
#define default_stack_Cohda_KUC_Mode_MAX 7

#define default_stack_Cohda_PTP_Mode_PARAM "Cohda_PTP_Mode"
#define default_stack_Cohda_PTP_Mode_MIN 0
#define default_stack_Cohda_PTP_Mode_DEF 0
#define default_stack_Cohda_PTP_Mode_MAX 3

#define default_stack_Cohda_P1609RxDecodeJ2735Enabled_PARAM "Cohda_P1609RxDecodeJ2735Enabled"
#define default_stack_Cohda_P1609RxDecodeJ2735Enabled_DEF true

#define default_stack_ModelDeploymentDeviceID_PARAM "ModelDeploymentDeviceID"
#define default_stack_ModelDeploymentDeviceID_MIN 0x0ul
#define default_stack_ModelDeploymentDeviceID_DEF 0x0ul
#define default_stack_ModelDeploymentDeviceID_MAX 0xfffful

#define default_stack_TemporaryIDControl_PARAM "TemporaryIDControl"
#define default_stack_TemporaryIDControl_DEF true

#define default_stack_antOffsetX_PARAM "antOffsetX"
#define default_stack_antOffsetX_MIN -8191
#define default_stack_antOffsetX_DEF 0
#define default_stack_antOffsetX_MAX 8191

#define default_stack_antOffsetY_PARAM "antOffsetY"
#define default_stack_antOffsetY_MIN -255
#define default_stack_antOffsetY_DEF 0
#define default_stack_antOffsetY_MAX 255

#define default_stack_antOffsetZ_PARAM "antOffsetZ"
#define default_stack_antOffsetZ_MIN -819.1
#define default_stack_antOffsetZ_DEF 0.0
#define default_stack_antOffsetZ_MAX 819.1

#define default_stack_VehicleVIN_PARAM "VehicleVIN"
#define default_stack_VehicleVIN_DEF ""

#define default_stack_VehicleName_PARAM "VehicleName"
#define default_stack_VehicleName_DEF ""

#define default_stack_VehicleOwnerCode_PARAM "VehicleOwnerCode"
#define default_stack_VehicleOwnerCode_DEF ""

#define default_stack_UUID_PARAM "UUID"
#define default_stack_UUID_DEF ""

#define default_stack_SEL_PARAM "SEL"
#define default_stack_SEL_DEF ""

#define default_stack_Cohda_Crypto_AeroConfigDir_PARAM "Cohda_Crypto_AeroConfigDir"
#define default_stack_Cohda_Crypto_AeroConfigDir_DEF ""

#define default_stack_Cohda_Crypto_AeroStateDir_PARAM "Cohda_Crypto_AeroStateDir"
#define default_stack_Cohda_Crypto_AeroStateDir_DEF ""

#define default_stack_Cohda_Crypto_AeroContext_PARAM "Cohda_Crypto_AeroContext"
#define default_stack_Cohda_Crypto_AeroContext_DEF "its.wsc"

#define default_stack_Cohda_Crypto_AeroLcm_PARAM "Cohda_Crypto_AeroLcm"
#define default_stack_Cohda_Crypto_AeroLcm_DEF "demoLcm"

#define default_stack_Cohda_Crypto_AeroAltLcm_PARAM "Cohda_Crypto_AeroAltLcm"
#define default_stack_Cohda_Crypto_AeroAltLcm_DEF ""

#define default_stack_Cohda_Crypto_AeroLogging_PARAM "Cohda_Crypto_AeroLogging"
#define default_stack_Cohda_Crypto_AeroLogging_DEF ""

#define default_stack_Cohda_Crypto_Config_Check_PARAM "Cohda_Crypto_Config_Check"
#define default_stack_Cohda_Crypto_Config_Check_MIN 0
#define default_stack_Cohda_Crypto_Config_Check_DEF 0
#define default_stack_Cohda_Crypto_Config_Check_MAX 2
#define default_stack_Cohda_Crypto_Config_Check_None (0)
#define default_stack_Cohda_Crypto_Config_Check_Check (1)
#define default_stack_Cohda_Crypto_Config_Check_Fix (2)

#define default_stack_Cohda_Crypto_SMX_Check_PARAM "Cohda_Crypto_SMX_Check"
#define default_stack_Cohda_Crypto_SMX_Check_DEF false
#define default_stack_Cohda_Crypto_SMX_Check_None ((bool)0)
#define default_stack_Cohda_Crypto_SMX_Check_Check ((bool)1)

#define default_stack_Cohda_Crypto_TestCountryCode_PARAM "Cohda_Crypto_TestCountryCode"
#define default_stack_Cohda_Crypto_TestCountryCode_MIN 0
#define default_stack_Cohda_Crypto_TestCountryCode_DEF 0
#define default_stack_Cohda_Crypto_TestCountryCode_MAX 999
#define default_stack_Cohda_Crypto_TestCountryCode_use_position (0)
#define default_stack_Cohda_Crypto_TestCountryCode_australia (36)
#define default_stack_Cohda_Crypto_TestCountryCode_china (156)
#define default_stack_Cohda_Crypto_TestCountryCode_germany (276)
#define default_stack_Cohda_Crypto_TestCountryCode_usa (840)

#define default_stack_Cohda_Crypto_Sign_Type_PARAM "Cohda_Crypto_Sign_Type"
#define default_stack_Cohda_Crypto_Sign_Type_DEF false
#define default_stack_Cohda_Crypto_Sign_Type_Asynchronous ((bool)0)
#define default_stack_Cohda_Crypto_Sign_Type_Synchronous ((bool)1)

#define default_stack_Cohda_Crypto_Verify_Policy_PARAM "Cohda_Crypto_Verify_Policy"
#define default_stack_Cohda_Crypto_Verify_Policy_MIN 0
#define default_stack_Cohda_Crypto_Verify_Policy_DEF 0
#define default_stack_Cohda_Crypto_Verify_Policy_MAX 2
#define default_stack_Cohda_Crypto_Verify_Policy_All (0)
#define default_stack_Cohda_Crypto_Verify_Policy_Smart (1)
#define default_stack_Cohda_Crypto_Verify_Policy_OnDemand (2)

#define default_stack_Cohda_Crypto_Verify_Type_PARAM "Cohda_Crypto_Verify_Type"
#define default_stack_Cohda_Crypto_Verify_Type_DEF false
#define default_stack_Cohda_Crypto_Verify_Type_Asynchronous ((bool)0)
#define default_stack_Cohda_Crypto_Verify_Type_Synchronous ((bool)1)

#define default_stack_Cohda_Crypto_Verify_Stats_PARAM "Cohda_Crypto_Verify_Stats"
#define default_stack_Cohda_Crypto_Verify_Stats_MIN 0
#define default_stack_Cohda_Crypto_Verify_Stats_DEF 0
#define default_stack_Cohda_Crypto_Verify_Stats_MAX 2
#define default_stack_Cohda_Crypto_Verify_Stats_NoCollection (0)
#define default_stack_Cohda_Crypto_Verify_Stats_Basic (1)
#define default_stack_Cohda_Crypto_Verify_Stats_Detailed (2)

#define default_stack_Cohda_Crypto_InitSelfTest_PARAM "Cohda_Crypto_InitSelfTest"
#define default_stack_Cohda_Crypto_InitSelfTest_MIN 0
#define default_stack_Cohda_Crypto_InitSelfTest_DEF 0
#define default_stack_Cohda_Crypto_InitSelfTest_MAX 2
#define default_stack_Cohda_Crypto_InitSelfTest_None (0)
#define default_stack_Cohda_Crypto_InitSelfTest_SignVerify (1)
#define default_stack_Cohda_Crypto_InitSelfTest_EncryptDecryptSV (2)

#define default_stack_Cohda_Crypto_SSPSA_PARAM "Cohda_Crypto_SSPSA"
#define default_stack_Cohda_Crypto_SSPSA_DEF ""

#define default_stack_Cohda_Crypto_SSPBSM_PARAM "Cohda_Crypto_SSPBSM"
#define default_stack_Cohda_Crypto_SSPBSM_MIN 0x0ul
#define default_stack_Cohda_Crypto_SSPBSM_DEF 0x0ul
#define default_stack_Cohda_Crypto_SSPBSM_MAX 0xfful

#define default_stack_Cohda_Crypto_SSPEVA_PARAM "Cohda_Crypto_SSPEVA"
#define default_stack_Cohda_Crypto_SSPEVA_MIN 0x0ul
#define default_stack_Cohda_Crypto_SSPEVA_DEF 0x1ul
#define default_stack_Cohda_Crypto_SSPEVA_MAX 0xfful

#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_0_PARAM "Cohda_Crypto_SmartVerify_TargetDP_0"
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_0_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_0_DEF 2
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_0_MAX 32

#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_1_PARAM "Cohda_Crypto_SmartVerify_TargetDP_1"
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_1_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_1_DEF 2
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_1_MAX 32

#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_2_PARAM "Cohda_Crypto_SmartVerify_TargetDP_2"
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_2_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_2_DEF 4
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_2_MAX 32

#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_3_PARAM "Cohda_Crypto_SmartVerify_TargetDP_3"
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_3_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_3_DEF 5
#define default_stack_Cohda_Crypto_SmartVerify_TargetDP_3_MAX 32

#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_0_PARAM "Cohda_Crypto_SmartVerify_TargetRange_0"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_0_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_0_DEF 1000
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_0_MAX 100000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_1_PARAM "Cohda_Crypto_SmartVerify_TargetRange_1"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_1_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_1_DEF 1000
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_1_MAX 100000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_2_PARAM "Cohda_Crypto_SmartVerify_TargetRange_2"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_2_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_2_DEF 1000
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_2_MAX 100000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_3_PARAM "Cohda_Crypto_SmartVerify_TargetRange_3"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_3_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_3_DEF 1000
#define default_stack_Cohda_Crypto_SmartVerify_TargetRange_3_MAX 100000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_0_PARAM "Cohda_Crypto_SmartVerify_TargetRate_0"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_0_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_0_DEF 50
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_0_MAX 5000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_1_PARAM "Cohda_Crypto_SmartVerify_TargetRate_1"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_1_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_1_DEF 300
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_1_MAX 5000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_2_PARAM "Cohda_Crypto_SmartVerify_TargetRate_2"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_2_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_2_DEF 100
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_2_MAX 5000

#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_3_PARAM "Cohda_Crypto_SmartVerify_TargetRate_3"
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_3_MIN 0
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_3_DEF 100
#define default_stack_Cohda_Crypto_SmartVerify_TargetRate_3_MAX 5000

#define default_stack_Cohda_Crypto_SmartVerify_ContinueUnverified_PARAM "Cohda_Crypto_SmartVerify_ContinueUnverified"
#define default_stack_Cohda_Crypto_SmartVerify_ContinueUnverified_DEF false
#define default_stack_Cohda_Crypto_SmartVerify_ContinueUnverified_Drop ((bool)0)
#define default_stack_Cohda_Crypto_SmartVerify_ContinueUnverified_Continue ((bool)1)

#define default_stack_Cohda_Crypto_Boost_Priority_PARAM "Cohda_Crypto_Boost_Priority"
#define default_stack_Cohda_Crypto_Boost_Priority_MIN -20
#define default_stack_Cohda_Crypto_Boost_Priority_DEF 5
#define default_stack_Cohda_Crypto_Boost_Priority_MAX 20

#define default_stack_Dot2_MessageContextName_PARAM "Dot2_MessageContextName"
#define default_stack_Dot2_MessageContextName_DEF ""

#define default_stack_Dot2_IdChangeLcmName_PARAM "Dot2_IdChangeLcmName"
#define default_stack_Dot2_IdChangeLcmName_DEF "bsmLcm"

#define default_stack_Dot2_VerifyPolicy_PARAM "Dot2_VerifyPolicy"
#define default_stack_Dot2_VerifyPolicy_MIN 0
#define default_stack_Dot2_VerifyPolicy_DEF 2
#define default_stack_Dot2_VerifyPolicy_MAX 2
#define default_stack_Dot2_VerifyPolicy_All (0)
#define default_stack_Dot2_VerifyPolicy_Smart (1)
#define default_stack_Dot2_VerifyPolicy_On_Demand_Only (2)

#define default_stack_RsuMode_PARAM "RsuMode"
#define default_stack_RsuMode_MIN 2
#define default_stack_RsuMode_DEF 4
#define default_stack_RsuMode_MAX 4
#define default_stack_RsuMode_Standby (2)
#define default_stack_RsuMode_Operate (4)

#define default_stack_SCMSProxyEnable_PARAM "SCMSProxyEnable"
#define default_stack_SCMSProxyEnable_DEF false

#define default_stack_SCMSProxyAddress_PARAM "SCMSProxyAddress"
#define default_stack_SCMSProxyAddress_DEF "2000::1"

#define default_stack_SCMSProxyPort_PARAM "SCMSProxyPort"
#define default_stack_SCMSProxyPort_MIN 0
#define default_stack_SCMSProxyPort_DEF 0
#define default_stack_SCMSProxyPort_MAX 65535

#define default_stack_SCMSIncludeServerName_PARAM "SCMSIncludeServerName"
#define default_stack_SCMSIncludeServerName_DEF true

#define default_stack_SCMSSSLVerifyResult_PARAM "SCMSSSLVerifyResult"
#define default_stack_SCMSSSLVerifyResult_DEF true

#define default_stack_SCMS_SSLCAPath_PARAM "SCMS_SSLCAPath"
#define default_stack_SCMS_SSLCAPath_DEF "/etc/ssl/certs"

#define default_stack_SCMS_SSLCAFile_PARAM "SCMS_SSLCAFile"
#define default_stack_SCMS_SSLCAFile_DEF ""

#define default_stack_Cohda_UBX_MODE_PARAM "Cohda_UBX_MODE"
#define default_stack_Cohda_UBX_MODE_MIN -1
#define default_stack_Cohda_UBX_MODE_DEF -1
#define default_stack_Cohda_UBX_MODE_MAX 1

#define default_stack_Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS_PARAM "Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS"
#define default_stack_Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS_MIN -1
#define default_stack_Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS_DEF 60000
#define default_stack_Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS_MAX 3600000

#define default_stack_ItsCamEnabled_PARAM "ItsCamEnabled"
#define default_stack_ItsCamEnabled_DEF true

#define default_stack_ItsCamAutoStart_PARAM "ItsCamAutoStart"
#define default_stack_ItsCamAutoStart_DEF true

#define default_stack_ItsCamInitInterval_PARAM "ItsCamInitInterval"
#define default_stack_ItsCamInitInterval_MIN 50
#define default_stack_ItsCamInitInterval_DEF 100
#define default_stack_ItsCamInitInterval_MAX 1000

#define default_stack_ItsCamSlowInterval_PARAM "ItsCamSlowInterval"
#define default_stack_ItsCamSlowInterval_MIN 50
#define default_stack_ItsCamSlowInterval_DEF 1000
#define default_stack_ItsCamSlowInterval_MAX 1000

#define default_stack_ItsCamDccInterval_PARAM "ItsCamDccInterval"
#define default_stack_ItsCamDccInterval_MIN 50
#define default_stack_ItsCamDccInterval_DEF 100
#define default_stack_ItsCamDccInterval_MAX 1000

#define default_stack_ItsCamNGenCam_PARAM "ItsCamNGenCam"
#define default_stack_ItsCamNGenCam_MIN 1
#define default_stack_ItsCamNGenCam_DEF 3
#define default_stack_ItsCamNGenCam_MAX 9
#define default_stack_ItsCamNGenCam_aka ("pCamGenNumber")

#define default_stack_ItsCamSpeedChangeTrigger_PARAM "ItsCamSpeedChangeTrigger"
#define default_stack_ItsCamSpeedChangeTrigger_MIN 0.0
#define default_stack_ItsCamSpeedChangeTrigger_DEF 0.5
#define default_stack_ItsCamSpeedChangeTrigger_MAX 10.0

#define default_stack_ItsCamHeadingChangeTrigger_PARAM "ItsCamHeadingChangeTrigger"
#define default_stack_ItsCamHeadingChangeTrigger_MIN 0.0
#define default_stack_ItsCamHeadingChangeTrigger_DEF 4.0
#define default_stack_ItsCamHeadingChangeTrigger_MAX 45.0

#define default_stack_ItsCamDistanceChangeTrigger_PARAM "ItsCamDistanceChangeTrigger"
#define default_stack_ItsCamDistanceChangeTrigger_MIN 0.0
#define default_stack_ItsCamDistanceChangeTrigger_DEF 4.0
#define default_stack_ItsCamDistanceChangeTrigger_MAX 50.0

#define default_stack_ItsCamVehicleRole_PARAM "ItsCamVehicleRole"
#define default_stack_ItsCamVehicleRole_MIN 0
#define default_stack_ItsCamVehicleRole_DEF 0
#define default_stack_ItsCamVehicleRole_MAX 15

#define default_stack_ItsCamIncludeSpeed_PARAM "ItsCamIncludeSpeed"
#define default_stack_ItsCamIncludeSpeed_DEF true

#define default_stack_ItsCamTraceMinLength_PARAM "ItsCamTraceMinLength"
#define default_stack_ItsCamTraceMinLength_MIN 0
#define default_stack_ItsCamTraceMinLength_DEF 200
#define default_stack_ItsCamTraceMinLength_MAX 1000
#define default_stack_ItsCamTraceMinLength_aka ("pCamTraceMinLength")

#define default_stack_ItsCamTraceMaxLength_PARAM "ItsCamTraceMaxLength"
#define default_stack_ItsCamTraceMaxLength_MIN 0
#define default_stack_ItsCamTraceMaxLength_DEF 500
#define default_stack_ItsCamTraceMaxLength_MAX 1000
#define default_stack_ItsCamTraceMaxLength_aka ("pCamTraceMaxLength")

#define default_stack_ItsCamConfidenceChecks_PARAM "ItsCamConfidenceChecks"
#define default_stack_ItsCamConfidenceChecks_MIN 0
#define default_stack_ItsCamConfidenceChecks_DEF 0
#define default_stack_ItsCamConfidenceChecks_MAX 2
#define default_stack_ItsCamConfidenceChecks_None (0)
#define default_stack_ItsCamConfidenceChecks_noCAM (1)
#define default_stack_ItsCamConfidenceChecks_noCAMwithPHReset (2)

#define default_stack_ItsDenmEnabled_PARAM "ItsDenmEnabled"
#define default_stack_ItsDenmEnabled_DEF true

#define default_stack_ItsDenmExpiryCheck_PARAM "ItsDenmExpiryCheck"
#define default_stack_ItsDenmExpiryCheck_DEF true

#define default_stack_ItsDenmRelevanceAreaCheck_PARAM "ItsDenmRelevanceAreaCheck"
#define default_stack_ItsDenmRelevanceAreaCheck_DEF false

#define default_stack_ItsDenmAlwaysNotify_PARAM "ItsDenmAlwaysNotify"
#define default_stack_ItsDenmAlwaysNotify_DEF true

#define default_stack_ItsDenmTraceMinLength_PARAM "ItsDenmTraceMinLength"
#define default_stack_ItsDenmTraceMinLength_MIN 0
#define default_stack_ItsDenmTraceMinLength_DEF 600
#define default_stack_ItsDenmTraceMinLength_MAX 1000
#define default_stack_ItsDenmTraceMinLength_aka ("pDenmTraceMinLength")

#define default_stack_ItsDenmTraceMaxLength_PARAM "ItsDenmTraceMaxLength"
#define default_stack_ItsDenmTraceMaxLength_MIN 0
#define default_stack_ItsDenmTraceMaxLength_DEF 1000
#define default_stack_ItsDenmTraceMaxLength_MAX 1000
#define default_stack_ItsDenmTraceMaxLength_aka ("pDenmTraceMaxLength")

#define default_stack_DenmEventHistoryGenMaxDeltaTime_PARAM "DenmEventHistoryGenMaxDeltaTime"
#define default_stack_DenmEventHistoryGenMaxDeltaTime_MIN 0
#define default_stack_DenmEventHistoryGenMaxDeltaTime_DEF 10
#define default_stack_DenmEventHistoryGenMaxDeltaTime_MAX 3600

#define default_stack_DenmEventHistoryGenMaxDeltaDistance_PARAM "DenmEventHistoryGenMaxDeltaDistance"
#define default_stack_DenmEventHistoryGenMaxDeltaDistance_MIN 0
#define default_stack_DenmEventHistoryGenMaxDeltaDistance_DEF 10
#define default_stack_DenmEventHistoryGenMaxDeltaDistance_MAX 1000

#define default_stack_DenmEventHistoryGenMaxDeltaHeading_PARAM "DenmEventHistoryGenMaxDeltaHeading"
#define default_stack_DenmEventHistoryGenMaxDeltaHeading_MIN 0
#define default_stack_DenmEventHistoryGenMaxDeltaHeading_DEF 4
#define default_stack_DenmEventHistoryGenMaxDeltaHeading_MAX 90

#define default_stack_ItsInfraEnabled_PARAM "ItsInfraEnabled"
#define default_stack_ItsInfraEnabled_DEF true

#define default_stack_ItsImzmJurisdictionId_PARAM "ItsImzmJurisdictionId"
#define default_stack_ItsImzmJurisdictionId_MIN 0x0ul
#define default_stack_ItsImzmJurisdictionId_DEF 0xc70001ul
#define default_stack_ItsImzmJurisdictionId_MAX 0xfffffful

#define default_stack_ItsPlatoonSupport_PARAM "ItsPlatoonSupport"
#define default_stack_ItsPlatoonSupport_DEF false

#define default_stack_ItsSAMContentSetting_PARAM "ItsSAMContentSetting"
#define default_stack_ItsSAMContentSetting_MIN 0
#define default_stack_ItsSAMContentSetting_DEF 1
#define default_stack_ItsSAMContentSetting_MAX 2
#define default_stack_ItsSAMContentSetting_empty_SA (0)
#define default_stack_ItsSAMContentSetting_empty_SA_times_out (1)
#define default_stack_ItsSAMContentSetting_no_empty_SA (2)

#define default_stack_ItsTRXPeriodicExtrapolatePosition_PARAM "ItsTRXPeriodicExtrapolatePosition"
#define default_stack_ItsTRXPeriodicExtrapolatePosition_DEF false

#define default_stack_ItsTRXHandleMultipleEvents_PARAM "ItsTRXHandleMultipleEvents"
#define default_stack_ItsTRXHandleMultipleEvents_MIN 0
#define default_stack_ItsTRXHandleMultipleEvents_DEF 0
#define default_stack_ItsTRXHandleMultipleEvents_MAX 20

#define default_stack_ItsTRXIDChangeFlushesDENM_PARAM "ItsTRXIDChangeFlushesDENM"
#define default_stack_ItsTRXIDChangeFlushesDENM_DEF true

#define default_stack_ItsCenDsrcIntZonePowerdBm_PARAM "ItsCenDsrcIntZonePowerdBm"
#define default_stack_ItsCenDsrcIntZonePowerdBm_MIN -20
#define default_stack_ItsCenDsrcIntZonePowerdBm_DEF 10
#define default_stack_ItsCenDsrcIntZonePowerdBm_MAX 43
#define default_stack_ItsCenDsrcIntZonePowerdBm_aka ("pDccPToll")

#define default_stack_ItsFacilitiesTRXEnabled_PARAM "ItsFacilitiesTRXEnabled"
#define default_stack_ItsFacilitiesTRXEnabled_DEF true

#define default_stack_ItsFacilitiesShellEnabled_PARAM "ItsFacilitiesShellEnabled"
#define default_stack_ItsFacilitiesShellEnabled_DEF false

#define default_stack_ItsFacilitiesUpperTesterEnabled_PARAM "ItsFacilitiesUpperTesterEnabled"
#define default_stack_ItsFacilitiesUpperTesterEnabled_DEF false

#define default_stack_ItsFacilitiesTxInfoExtUpdate_PARAM "ItsFacilitiesTxInfoExtUpdate"
#define default_stack_ItsFacilitiesTxInfoExtUpdate_DEF false

#define default_stack_ItsFacilitiesTollDatabaseQuery_PARAM "ItsFacilitiesTollDatabaseQuery"
#define default_stack_ItsFacilitiesTollDatabaseQuery_DEF false

#define default_stack_ItsFacilitiesTollDatabaseFile_PARAM "ItsFacilitiesTollDatabaseFile"
#define default_stack_ItsFacilitiesTollDatabaseFile_DEF ""

#define default_stack_ItsFacilitiesTollStartLimited_PARAM "ItsFacilitiesTollStartLimited"
#define default_stack_ItsFacilitiesTollStartLimited_DEF false

#define default_stack_ItsFacilitiesTollValidDistance_m_PARAM "ItsFacilitiesTollValidDistance_m"
#define default_stack_ItsFacilitiesTollValidDistance_m_MIN 10
#define default_stack_ItsFacilitiesTollValidDistance_m_DEF 250
#define default_stack_ItsFacilitiesTollValidDistance_m_MAX 1000

#define default_stack_ItsFacilitiesStationID_PARAM "ItsFacilitiesStationID"
#define default_stack_ItsFacilitiesStationID_MIN 0x0ul
#define default_stack_ItsFacilitiesStationID_DEF 0xfffffffeul
#define default_stack_ItsFacilitiesStationID_MAX 0xfffffffful

#define default_stack_ItsFacilitiesDefaultCommProfile_PARAM "ItsFacilitiesDefaultCommProfile"
#define default_stack_ItsFacilitiesDefaultCommProfile_MIN 0x0ul
#define default_stack_ItsFacilitiesDefaultCommProfile_DEF 0xfful
#define default_stack_ItsFacilitiesDefaultCommProfile_MAX 0xfful
#define default_stack_ItsFacilitiesDefaultCommProfile_ignore (0xFF)

#define default_stack_ItsFacilitiesSecResultHandling_PARAM "ItsFacilitiesSecResultHandling"
#define default_stack_ItsFacilitiesSecResultHandling_DEF false
#define default_stack_ItsFacilitiesSecResultHandling_STRICT ((bool)0)
#define default_stack_ItsFacilitiesSecResultHandling_NON_STRICT ((bool)1)

#define default_stack_ItsFacilitiesSecSSPVerMatch_PARAM "ItsFacilitiesSecSSPVerMatch"
#define default_stack_ItsFacilitiesSecSSPVerMatch_DEF false

#define default_stack_ItsFacilitiesSysTimeError_ms_PARAM "ItsFacilitiesSysTimeError_ms"
#define default_stack_ItsFacilitiesSysTimeError_ms_MIN 0
#define default_stack_ItsFacilitiesSysTimeError_ms_DEF 1000
#define default_stack_ItsFacilitiesSysTimeError_ms_MAX 5000

#define default_stack_ItsFacilitiesRandomiseSequenceOnATchange_PARAM "ItsFacilitiesRandomiseSequenceOnATchange"
#define default_stack_ItsFacilitiesRandomiseSequenceOnATchange_DEF false

#define default_stack_ItsFacilitiesAllowedRelevantDist_km_PARAM "ItsFacilitiesAllowedRelevantDist_km"
#define default_stack_ItsFacilitiesAllowedRelevantDist_km_MIN 0
#define default_stack_ItsFacilitiesAllowedRelevantDist_km_DEF 0
#define default_stack_ItsFacilitiesAllowedRelevantDist_km_MAX 1000
#define default_stack_ItsFacilitiesAllowedRelevantDist_km_None (0)

#define default_stack_ItsG5Enabled_PARAM "ItsG5Enabled"
#define default_stack_ItsG5Enabled_MIN 0
#define default_stack_ItsG5Enabled_DEF 2
#define default_stack_ItsG5Enabled_MAX 3
#define default_stack_ItsG5Enabled_None (0)
#define default_stack_ItsG5Enabled_RAW (1)
#define default_stack_ItsG5Enabled_LLC (2)
#define default_stack_ItsG5Enabled_ATK (3)

#define default_stack_ItsG5Interface_PARAM "ItsG5Interface"
#define default_stack_ItsG5Interface_DEF "eth0"

#define default_stack_ItsG5EthCchName_PARAM "ItsG5EthCchName"
#define default_stack_ItsG5EthCchName_DEF "g5cch"

#define default_stack_ItsG5CchMACAddr_PARAM "ItsG5CchMACAddr"
#define default_stack_ItsG5CchMACAddr_DEF "04:e5:48:00:00:01"

#define default_stack_ItsG5EthSchName_PARAM "ItsG5EthSchName"
#define default_stack_ItsG5EthSchName_DEF "g5sch"

#define default_stack_ItsG5SchMACAddr_PARAM "ItsG5SchMACAddr"
#define default_stack_ItsG5SchMACAddr_DEF "04:e5:48:00:00:02"

#define default_stack_ItsG5ATKCchIndex_PARAM "ItsG5ATKCchIndex"
#define default_stack_ItsG5ATKCchIndex_DEF false

#define default_stack_ItsG5Ethertype_PARAM "ItsG5Ethertype"
#define default_stack_ItsG5Ethertype_MIN 0x0ul
#define default_stack_ItsG5Ethertype_DEF 0x8947ul
#define default_stack_ItsG5Ethertype_MAX 0xfffful

#define default_stack_ItsG5CchChanNum_PARAM "ItsG5CchChanNum"
#define default_stack_ItsG5CchChanNum_MIN 166
#define default_stack_ItsG5CchChanNum_DEF 180
#define default_stack_ItsG5CchChanNum_MAX 186

#define default_stack_ItsG5CchTxPwrLevel_PARAM "ItsG5CchTxPwrLevel"
#define default_stack_ItsG5CchTxPwrLevel_MIN -10
#define default_stack_ItsG5CchTxPwrLevel_DEF 23
#define default_stack_ItsG5CchTxPwrLevel_MAX 33

#define default_stack_ItsG5CchTxDataRate_PARAM "ItsG5CchTxDataRate"
#define default_stack_ItsG5CchTxDataRate_MIN 6
#define default_stack_ItsG5CchTxDataRate_DEF 12
#define default_stack_ItsG5CchTxDataRate_MAX 54
#define default_stack_ItsG5CchTxDataRate_aka ("pAlDataRateCch")

#define default_stack_ItsG5SchChanNum_PARAM "ItsG5SchChanNum"
#define default_stack_ItsG5SchChanNum_MIN 172
#define default_stack_ItsG5SchChanNum_DEF 176
#define default_stack_ItsG5SchChanNum_MAX 186

#define default_stack_ItsG5SchTxPwrLevel_PARAM "ItsG5SchTxPwrLevel"
#define default_stack_ItsG5SchTxPwrLevel_MIN -10
#define default_stack_ItsG5SchTxPwrLevel_DEF 23
#define default_stack_ItsG5SchTxPwrLevel_MAX 33

#define default_stack_ItsG5SchTxDataRate_PARAM "ItsG5SchTxDataRate"
#define default_stack_ItsG5SchTxDataRate_MIN 6
#define default_stack_ItsG5SchTxDataRate_DEF 12
#define default_stack_ItsG5SchTxDataRate_MAX 54

#define default_stack_ItsG5NoAck_PARAM "ItsG5NoAck"
#define default_stack_ItsG5NoAck_DEF false

#define default_stack_ItsG5TransceiverDevices_PARAM "ItsG5TransceiverDevices"
#define default_stack_ItsG5TransceiverDevices_MIN 1
#define default_stack_ItsG5TransceiverDevices_DEF 1
#define default_stack_ItsG5TransceiverDevices_MAX 2
#define default_stack_ItsG5TransceiverDevices_One (1)
#define default_stack_ItsG5TransceiverDevices_Two (2)

#define default_stack_ItsG5TransceiverConfig_PARAM "ItsG5TransceiverConfig"
#define default_stack_ItsG5TransceiverConfig_MIN 1
#define default_stack_ItsG5TransceiverConfig_DEF 1
#define default_stack_ItsG5TransceiverConfig_MAX 3
#define default_stack_ItsG5TransceiverConfig_Single (1)
#define default_stack_ItsG5TransceiverConfig_Dual (2)
#define default_stack_ItsG5TransceiverConfig_NonSafety (3)

#define default_stack_ItsG5DataFrameNonQosSupport_PARAM "ItsG5DataFrameNonQosSupport"
#define default_stack_ItsG5DataFrameNonQosSupport_DEF true

#define default_stack_ItsG5DataFrameLPDEPDSupport_PARAM "ItsG5DataFrameLPDEPDSupport"
#define default_stack_ItsG5DataFrameLPDEPDSupport_MIN 0x11ul
#define default_stack_ItsG5DataFrameLPDEPDSupport_DEF 0x13ul
#define default_stack_ItsG5DataFrameLPDEPDSupport_MAX 0x23ul

#define default_stack_ItsPC5Enabled_PARAM "ItsPC5Enabled"
#define default_stack_ItsPC5Enabled_MIN 0
#define default_stack_ItsPC5Enabled_DEF 0
#define default_stack_ItsPC5Enabled_MAX 5
#define default_stack_ItsPC5Enabled_None (0)
#define default_stack_ItsPC5Enabled_QTI (4)
#define default_stack_ItsPC5Enabled_ATK (5)

#define default_stack_ItsPC5SPS0_Interval_ms_PARAM "ItsPC5SPS0_Interval_ms"
#define default_stack_ItsPC5SPS0_Interval_ms_MIN 0
#define default_stack_ItsPC5SPS0_Interval_ms_DEF 100
#define default_stack_ItsPC5SPS0_Interval_ms_MAX 1000

#define default_stack_ItsPC5SPS0_Size_PARAM "ItsPC5SPS0_Size"
#define default_stack_ItsPC5SPS0_Size_MIN 0
#define default_stack_ItsPC5SPS0_Size_DEF 365
#define default_stack_ItsPC5SPS0_Size_MAX 65535

#define default_stack_ItsPC5SPS0_Priority_PARAM "ItsPC5SPS0_Priority"
#define default_stack_ItsPC5SPS0_Priority_MIN 0
#define default_stack_ItsPC5SPS0_Priority_DEF 4
#define default_stack_ItsPC5SPS0_Priority_MAX 7

#define default_stack_ItsPC5SPS0_ITSAID_PARAM "ItsPC5SPS0_ITSAID"
#define default_stack_ItsPC5SPS0_ITSAID_MIN 0x0ul
#define default_stack_ItsPC5SPS0_ITSAID_DEF 0x24ul
#define default_stack_ItsPC5SPS0_ITSAID_MAX 0xfffffffful

#define default_stack_ItsPC5SPS1_Interval_ms_PARAM "ItsPC5SPS1_Interval_ms"
#define default_stack_ItsPC5SPS1_Interval_ms_MIN 0
#define default_stack_ItsPC5SPS1_Interval_ms_DEF 100
#define default_stack_ItsPC5SPS1_Interval_ms_MAX 1000

#define default_stack_ItsPC5SPS1_Size_PARAM "ItsPC5SPS1_Size"
#define default_stack_ItsPC5SPS1_Size_MIN 0
#define default_stack_ItsPC5SPS1_Size_DEF 500
#define default_stack_ItsPC5SPS1_Size_MAX 65535

#define default_stack_ItsPC5SPS1_Priority_PARAM "ItsPC5SPS1_Priority"
#define default_stack_ItsPC5SPS1_Priority_MIN 0
#define default_stack_ItsPC5SPS1_Priority_DEF 5
#define default_stack_ItsPC5SPS1_Priority_MAX 7

#define default_stack_ItsPC5SPS1_ITSAID_PARAM "ItsPC5SPS1_ITSAID"
#define default_stack_ItsPC5SPS1_ITSAID_MIN 0x0ul
#define default_stack_ItsPC5SPS1_ITSAID_DEF 0x0ul
#define default_stack_ItsPC5SPS1_ITSAID_MAX 0xfffffffful

#define default_stack_ItsGnEnabled_PARAM "ItsGnEnabled"
#define default_stack_ItsGnEnabled_DEF true

#define default_stack_ItsGnLocalAddr_PARAM "ItsGnLocalAddr"
#define default_stack_ItsGnLocalAddr_DEF "00:00:00:00:00:00:00:01"

#define default_stack_ItsGnLocalAddrConfMethod_PARAM "ItsGnLocalAddrConfMethod"
#define default_stack_ItsGnLocalAddrConfMethod_MIN 0
#define default_stack_ItsGnLocalAddrConfMethod_DEF 1
#define default_stack_ItsGnLocalAddrConfMethod_MAX 2
#define default_stack_ItsGnLocalAddrConfMethod_Auto (0)
#define default_stack_ItsGnLocalAddrConfMethod_Managed (1)
#define default_stack_ItsGnLocalAddrConfMethod_Anonymous (2)

#define default_stack_ItsGnProtocolVersion_PARAM "ItsGnProtocolVersion"
#define default_stack_ItsGnProtocolVersion_MIN 0
#define default_stack_ItsGnProtocolVersion_DEF 1
#define default_stack_ItsGnProtocolVersion_MAX 255

#define default_stack_ItsGnIsMobile_PARAM "ItsGnIsMobile"
#define default_stack_ItsGnIsMobile_DEF true
#define default_stack_ItsGnIsMobile_Stationary ((bool)0)
#define default_stack_ItsGnIsMobile_Mobile ((bool)1)

#define default_stack_ItsGnIfType_PARAM "ItsGnIfType"
#define default_stack_ItsGnIfType_MIN 0
#define default_stack_ItsGnIfType_DEF 1
#define default_stack_ItsGnIfType_MAX 2
#define default_stack_ItsGnIfType_Unspecified (0)
#define default_stack_ItsGnIfType_ITS_G5 (1)
#define default_stack_ItsGnIfType_LTE_V2X (2)

#define default_stack_ItsGnMinUpdateFrequencyLPV_PARAM "ItsGnMinUpdateFrequencyLPV"
#define default_stack_ItsGnMinUpdateFrequencyLPV_MIN 100
#define default_stack_ItsGnMinUpdateFrequencyLPV_DEF 1000
#define default_stack_ItsGnMinUpdateFrequencyLPV_MAX 2000

#define default_stack_ItsGnPaiInterval_PARAM "ItsGnPaiInterval"
#define default_stack_ItsGnPaiInterval_MIN -1
#define default_stack_ItsGnPaiInterval_DEF 80
#define default_stack_ItsGnPaiInterval_MAX 1000

#define default_stack_ItsGnMaxSduSize_PARAM "ItsGnMaxSduSize"
#define default_stack_ItsGnMaxSduSize_MIN 0
#define default_stack_ItsGnMaxSduSize_DEF 1398
#define default_stack_ItsGnMaxSduSize_MAX 2600

#define default_stack_ItsGnMaxGeoNetworkingHeaderSize_PARAM "ItsGnMaxGeoNetworkingHeaderSize"
#define default_stack_ItsGnMaxGeoNetworkingHeaderSize_MIN 0
#define default_stack_ItsGnMaxGeoNetworkingHeaderSize_DEF 88
#define default_stack_ItsGnMaxGeoNetworkingHeaderSize_MAX 1024

#define default_stack_ItsGnLifetimeLocTE_PARAM "ItsGnLifetimeLocTE"
#define default_stack_ItsGnLifetimeLocTE_MIN 0
#define default_stack_ItsGnLifetimeLocTE_DEF 20
#define default_stack_ItsGnLifetimeLocTE_MAX 3600

#define default_stack_ItsGnNeighbourFlagExpiry_PARAM "ItsGnNeighbourFlagExpiry"
#define default_stack_ItsGnNeighbourFlagExpiry_MIN 1000
#define default_stack_ItsGnNeighbourFlagExpiry_DEF 3750
#define default_stack_ItsGnNeighbourFlagExpiry_MAX 20000

#define default_stack_ItsGnStationType_PARAM "ItsGnStationType"
#define default_stack_ItsGnStationType_MIN 0
#define default_stack_ItsGnStationType_DEF 5
#define default_stack_ItsGnStationType_MAX 15
#define default_stack_ItsGnStationType_Unknown (0)
#define default_stack_ItsGnStationType_Pedestrian (1)
#define default_stack_ItsGnStationType_Cyclist (2)
#define default_stack_ItsGnStationType_Moped (3)
#define default_stack_ItsGnStationType_Motorcycle (4)
#define default_stack_ItsGnStationType_PassengerCar (5)
#define default_stack_ItsGnStationType_Bus (6)
#define default_stack_ItsGnStationType_LightTruck (7)
#define default_stack_ItsGnStationType_HeavyTruck (8)
#define default_stack_ItsGnStationType_Trailer (9)
#define default_stack_ItsGnStationType_SpecialVehicles (10)
#define default_stack_ItsGnStationType_Tram (11)
#define default_stack_ItsGnStationType_RoadSideUnit (15)

#define default_stack_ItsGnReserved_PARAM "ItsGnReserved"
#define default_stack_ItsGnReserved_MIN 0
#define default_stack_ItsGnReserved_DEF 0
#define default_stack_ItsGnReserved_MAX 1023

#define default_stack_ItsGnCompactTimeConfidence_PARAM "ItsGnCompactTimeConfidence"
#define default_stack_ItsGnCompactTimeConfidence_MIN 0
#define default_stack_ItsGnCompactTimeConfidence_DEF 0
#define default_stack_ItsGnCompactTimeConfidence_MAX 7

#define default_stack_ItsGnMaxLocTEntries_PARAM "ItsGnMaxLocTEntries"
#define default_stack_ItsGnMaxLocTEntries_MIN 0
#define default_stack_ItsGnMaxLocTEntries_DEF 200
#define default_stack_ItsGnMaxLocTEntries_MAX 1000

#define default_stack_ItsGnAlwaysUpdateLPV_PARAM "ItsGnAlwaysUpdateLPV"
#define default_stack_ItsGnAlwaysUpdateLPV_DEF true

#define default_stack_ItsGnDestinationAreaCheck_PARAM "ItsGnDestinationAreaCheck"
#define default_stack_ItsGnDestinationAreaCheck_DEF true

#define default_stack_ItsGnFlushAllBufferedGUC_PARAM "ItsGnFlushAllBufferedGUC"
#define default_stack_ItsGnFlushAllBufferedGUC_DEF false

#define default_stack_ItsGnTxAccLayerMode_PARAM "ItsGnTxAccLayerMode"
#define default_stack_ItsGnTxAccLayerMode_MIN 0
#define default_stack_ItsGnTxAccLayerMode_DEF 0
#define default_stack_ItsGnTxAccLayerMode_MAX 4
#define default_stack_ItsGnTxAccLayerMode_Default (0)
#define default_stack_ItsGnTxAccLayerMode_G5_only (1)
#define default_stack_ItsGnTxAccLayerMode_PC5_only (2)
#define default_stack_ItsGnTxAccLayerMode_G5_PC5_layer_clone (3)
#define default_stack_ItsGnTxAccLayerMode_GN_layer_clone (4)

#define default_stack_ItsGnSecurity_PARAM "ItsGnSecurity"
#define default_stack_ItsGnSecurity_DEF true

#define default_stack_ItsGnSnDecapResultHandling_PARAM "ItsGnSnDecapResultHandling"
#define default_stack_ItsGnSnDecapResultHandling_DEF false
#define default_stack_ItsGnSnDecapResultHandling_STRICT ((bool)0)
#define default_stack_ItsGnSnDecapResultHandling_NON_STRICT ((bool)1)

#define default_stack_ItsDuplicateGNAddrCheckLSB32_PARAM "ItsDuplicateGNAddrCheckLSB32"
#define default_stack_ItsDuplicateGNAddrCheckLSB32_DEF false

#define default_stack_ItsGnMixedSecurityHandling_PARAM "ItsGnMixedSecurityHandling"
#define default_stack_ItsGnMixedSecurityHandling_DEF false

#define default_stack_ItsGnLocationServiceMaxRetrans_PARAM "ItsGnLocationServiceMaxRetrans"
#define default_stack_ItsGnLocationServiceMaxRetrans_MIN 0
#define default_stack_ItsGnLocationServiceMaxRetrans_DEF 10
#define default_stack_ItsGnLocationServiceMaxRetrans_MAX 255

#define default_stack_ItsGnLocationServiceRetransmitTimer_PARAM "ItsGnLocationServiceRetransmitTimer"
#define default_stack_ItsGnLocationServiceRetransmitTimer_MIN 0
#define default_stack_ItsGnLocationServiceRetransmitTimer_DEF 1000
#define default_stack_ItsGnLocationServiceRetransmitTimer_MAX 65535

#define default_stack_ItsGnLocationServicePacketBufferSize_PARAM "ItsGnLocationServicePacketBufferSize"
#define default_stack_ItsGnLocationServicePacketBufferSize_MIN 0
#define default_stack_ItsGnLocationServicePacketBufferSize_DEF 1024
#define default_stack_ItsGnLocationServicePacketBufferSize_MAX 65535

#define default_stack_ItsGnBeaconServiceRetransmitTimer_PARAM "ItsGnBeaconServiceRetransmitTimer"
#define default_stack_ItsGnBeaconServiceRetransmitTimer_MIN 0
#define default_stack_ItsGnBeaconServiceRetransmitTimer_DEF 3000
#define default_stack_ItsGnBeaconServiceRetransmitTimer_MAX 65535
#define default_stack_ItsGnBeaconServiceRetransmitTimer_DisableBeaconing (0)

#define default_stack_ItsGnBeaconServiceMaxJitter_PARAM "ItsGnBeaconServiceMaxJitter"
#define default_stack_ItsGnBeaconServiceMaxJitter_MIN 0
#define default_stack_ItsGnBeaconServiceMaxJitter_DEF 750
#define default_stack_ItsGnBeaconServiceMaxJitter_MAX 65535

#define default_stack_ItsGnBeaconServiceLPVInitWait_PARAM "ItsGnBeaconServiceLPVInitWait"
#define default_stack_ItsGnBeaconServiceLPVInitWait_MIN 0
#define default_stack_ItsGnBeaconServiceLPVInitWait_DEF 10
#define default_stack_ItsGnBeaconServiceLPVInitWait_MAX 255

#define default_stack_ItsGnDefaultHopLimit_PARAM "ItsGnDefaultHopLimit"
#define default_stack_ItsGnDefaultHopLimit_MIN 0
#define default_stack_ItsGnDefaultHopLimit_DEF 10
#define default_stack_ItsGnDefaultHopLimit_MAX 255

#define default_stack_ItsGnDPLLength_PARAM "ItsGnDPLLength"
#define default_stack_ItsGnDPLLength_MIN 0
#define default_stack_ItsGnDPLLength_DEF 8
#define default_stack_ItsGnDPLLength_MAX 255

#define default_stack_ItsGnMaxPacketLifetime_PARAM "ItsGnMaxPacketLifetime"
#define default_stack_ItsGnMaxPacketLifetime_MIN 0
#define default_stack_ItsGnMaxPacketLifetime_DEF 600
#define default_stack_ItsGnMaxPacketLifetime_MAX 6300

#define default_stack_ItsGnDefaultPacketLifetime_PARAM "ItsGnDefaultPacketLifetime"
#define default_stack_ItsGnDefaultPacketLifetime_MIN 0
#define default_stack_ItsGnDefaultPacketLifetime_DEF 60
#define default_stack_ItsGnDefaultPacketLifetime_MAX 6300

#define default_stack_ItsGnMaxPacketDataRate_PARAM "ItsGnMaxPacketDataRate"
#define default_stack_ItsGnMaxPacketDataRate_MIN 0
#define default_stack_ItsGnMaxPacketDataRate_DEF 100
#define default_stack_ItsGnMaxPacketDataRate_MAX 10000

#define default_stack_ItsGnMaxPacketDataRateEmaBeta_PARAM "ItsGnMaxPacketDataRateEmaBeta"
#define default_stack_ItsGnMaxPacketDataRateEmaBeta_MIN 0
#define default_stack_ItsGnMaxPacketDataRateEmaBeta_DEF 90
#define default_stack_ItsGnMaxPacketDataRateEmaBeta_MAX 100

#define default_stack_ItsGnMaxGeoAreaSize_PARAM "ItsGnMaxGeoAreaSize"
#define default_stack_ItsGnMaxGeoAreaSize_MIN 0
#define default_stack_ItsGnMaxGeoAreaSize_DEF 10
#define default_stack_ItsGnMaxGeoAreaSize_MAX 1000

#define default_stack_ItsGnMaxDestAreaRange_PARAM "ItsGnMaxDestAreaRange"
#define default_stack_ItsGnMaxDestAreaRange_MIN 0
#define default_stack_ItsGnMaxDestAreaRange_DEF 0
#define default_stack_ItsGnMaxDestAreaRange_MAX 1000

#define default_stack_ItsGnMinCBFProgressionDist_PARAM "ItsGnMinCBFProgressionDist"
#define default_stack_ItsGnMinCBFProgressionDist_MIN 0
#define default_stack_ItsGnMinCBFProgressionDist_DEF 0
#define default_stack_ItsGnMinCBFProgressionDist_MAX 1000

#define default_stack_ItsGnMinCBFAreaCheckDist_PARAM "ItsGnMinCBFAreaCheckDist"
#define default_stack_ItsGnMinCBFAreaCheckDist_MIN 0
#define default_stack_ItsGnMinCBFAreaCheckDist_DEF 0
#define default_stack_ItsGnMinCBFAreaCheckDist_MAX 1000

#define default_stack_ItsGnMinRepetitionInterval_PARAM "ItsGnMinRepetitionInterval"
#define default_stack_ItsGnMinRepetitionInterval_MIN 0
#define default_stack_ItsGnMinRepetitionInterval_DEF 100
#define default_stack_ItsGnMinRepetitionInterval_MAX 1000

#define default_stack_ItsGnNonAreaForwardingAlgorithm_PARAM "ItsGnNonAreaForwardingAlgorithm"
#define default_stack_ItsGnNonAreaForwardingAlgorithm_MIN 0
#define default_stack_ItsGnNonAreaForwardingAlgorithm_DEF 1
#define default_stack_ItsGnNonAreaForwardingAlgorithm_MAX 2
#define default_stack_ItsGnNonAreaForwardingAlgorithm_Unspecified (0)
#define default_stack_ItsGnNonAreaForwardingAlgorithm_Greedy (1)
#define default_stack_ItsGnNonAreaForwardingAlgorithm_CBF (2)

#define default_stack_ItsGnAreaForwardingAlgorithm_PARAM "ItsGnAreaForwardingAlgorithm"
#define default_stack_ItsGnAreaForwardingAlgorithm_MIN 0
#define default_stack_ItsGnAreaForwardingAlgorithm_DEF 2
#define default_stack_ItsGnAreaForwardingAlgorithm_MAX 3
#define default_stack_ItsGnAreaForwardingAlgorithm_Unspecified (0)
#define default_stack_ItsGnAreaForwardingAlgorithm_Simple (1)
#define default_stack_ItsGnAreaForwardingAlgorithm_CBF (2)
#define default_stack_ItsGnAreaForwardingAlgorithm_Advanced (3)

#define default_stack_ItsGnCbfMinTime_PARAM "ItsGnCbfMinTime"
#define default_stack_ItsGnCbfMinTime_MIN 0
#define default_stack_ItsGnCbfMinTime_DEF 1
#define default_stack_ItsGnCbfMinTime_MAX 65535

#define default_stack_ItsGnCbfMaxTime_PARAM "ItsGnCbfMaxTime"
#define default_stack_ItsGnCbfMaxTime_MIN 0
#define default_stack_ItsGnCbfMaxTime_DEF 100
#define default_stack_ItsGnCbfMaxTime_MAX 65535

#define default_stack_ItsGnDefaultMaxCommunicationRange_PARAM "ItsGnDefaultMaxCommunicationRange"
#define default_stack_ItsGnDefaultMaxCommunicationRange_MIN 0
#define default_stack_ItsGnDefaultMaxCommunicationRange_DEF 1000
#define default_stack_ItsGnDefaultMaxCommunicationRange_MAX 65535

#define default_stack_ItsGnBroadcastCBFDefSectorAngle_PARAM "ItsGnBroadcastCBFDefSectorAngle"
#define default_stack_ItsGnBroadcastCBFDefSectorAngle_MIN 0
#define default_stack_ItsGnBroadcastCBFDefSectorAngle_DEF 30
#define default_stack_ItsGnBroadcastCBFDefSectorAngle_MAX 180

#define default_stack_ItsGnUcForwardingPacketBufferSize_PARAM "ItsGnUcForwardingPacketBufferSize"
#define default_stack_ItsGnUcForwardingPacketBufferSize_MIN 0
#define default_stack_ItsGnUcForwardingPacketBufferSize_DEF 256
#define default_stack_ItsGnUcForwardingPacketBufferSize_MAX 65535

#define default_stack_ItsGnBcForwardingPacketBufferSize_PARAM "ItsGnBcForwardingPacketBufferSize"
#define default_stack_ItsGnBcForwardingPacketBufferSize_MIN 0
#define default_stack_ItsGnBcForwardingPacketBufferSize_DEF 1024
#define default_stack_ItsGnBcForwardingPacketBufferSize_MAX 65535

#define default_stack_ItsGnCbfPacketBufferSize_PARAM "ItsGnCbfPacketBufferSize"
#define default_stack_ItsGnCbfPacketBufferSize_MIN 0
#define default_stack_ItsGnCbfPacketBufferSize_DEF 256
#define default_stack_ItsGnCbfPacketBufferSize_MAX 65535

#define default_stack_ItsGnBroadcastAdvMaxCounter_PARAM "ItsGnBroadcastAdvMaxCounter"
#define default_stack_ItsGnBroadcastAdvMaxCounter_MIN 1
#define default_stack_ItsGnBroadcastAdvMaxCounter_DEF 3
#define default_stack_ItsGnBroadcastAdvMaxCounter_MAX 32

#define default_stack_ItsGnDefaultTrafficClass_PARAM "ItsGnDefaultTrafficClass"
#define default_stack_ItsGnDefaultTrafficClass_MIN 0x0ul
#define default_stack_ItsGnDefaultTrafficClass_DEF 0x2ul
#define default_stack_ItsGnDefaultTrafficClass_MAX 0xfful

#define default_stack_ItsGnDefaultTrafficClassCAM_PARAM "ItsGnDefaultTrafficClassCAM"
#define default_stack_ItsGnDefaultTrafficClassCAM_MIN 0x0ul
#define default_stack_ItsGnDefaultTrafficClassCAM_DEF 0x2ul
#define default_stack_ItsGnDefaultTrafficClassCAM_MAX 0xfful
#define default_stack_ItsGnDefaultTrafficClassCAM_aka ("pCamTrafficClass")

#define default_stack_ItsGnDefaultTrafficClassFWD_PARAM "ItsGnDefaultTrafficClassFWD"
#define default_stack_ItsGnDefaultTrafficClassFWD_MIN 0x0ul
#define default_stack_ItsGnDefaultTrafficClassFWD_DEF 0x3ul
#define default_stack_ItsGnDefaultTrafficClassFWD_MAX 0xfful

#define default_stack_ItsGnRegionCode_PARAM "ItsGnRegionCode"
#define default_stack_ItsGnRegionCode_MIN 0
#define default_stack_ItsGnRegionCode_DEF 1
#define default_stack_ItsGnRegionCode_MAX 999

#define default_stack_ItsC2CGnGbcScf_PARAM "ItsC2CGnGbcScf"
#define default_stack_ItsC2CGnGbcScf_DEF false

#define default_stack_ItsC2CGnRandomiseGNSN_PARAM "ItsC2CGnRandomiseGNSN"
#define default_stack_ItsC2CGnRandomiseGNSN_DEF false

#define default_stack_ItsGn6Enabled_PARAM "ItsGn6Enabled"
#define default_stack_ItsGn6Enabled_DEF false

#define default_stack_ItsGn6aslVIResolAddr_PARAM "ItsGn6aslVIResolAddr"
#define default_stack_ItsGn6aslVIResolAddr_DEF false

#define default_stack_ItsGn6aslENversion_PARAM "ItsGn6aslENversion"
#define default_stack_ItsGn6aslENversion_DEF "EN1.2.1"

#define default_stack_ItsGn6aslGvlAreaCenterLatitude_PARAM "ItsGn6aslGvlAreaCenterLatitude"
#define default_stack_ItsGn6aslGvlAreaCenterLatitude_MIN -900000000
#define default_stack_ItsGn6aslGvlAreaCenterLatitude_DEF 0
#define default_stack_ItsGn6aslGvlAreaCenterLatitude_MAX 900000000

#define default_stack_ItsGn6aslGvlAreaCenterLongitude_PARAM "ItsGn6aslGvlAreaCenterLongitude"
#define default_stack_ItsGn6aslGvlAreaCenterLongitude_MIN -1800000000
#define default_stack_ItsGn6aslGvlAreaCenterLongitude_DEF 0
#define default_stack_ItsGn6aslGvlAreaCenterLongitude_MAX 1800000000

#define default_stack_ItsGn6aslGvlAreaShape_PARAM "ItsGn6aslGvlAreaShape"
#define default_stack_ItsGn6aslGvlAreaShape_MIN 0
#define default_stack_ItsGn6aslGvlAreaShape_DEF 0
#define default_stack_ItsGn6aslGvlAreaShape_MAX 2

#define default_stack_ItsGn6aslGvlAreaDistA_PARAM "ItsGn6aslGvlAreaDistA"
#define default_stack_ItsGn6aslGvlAreaDistA_MIN 1
#define default_stack_ItsGn6aslGvlAreaDistA_DEF 1000
#define default_stack_ItsGn6aslGvlAreaDistA_MAX 65535

#define default_stack_ItsGn6aslGvlAreaDistB_PARAM "ItsGn6aslGvlAreaDistB"
#define default_stack_ItsGn6aslGvlAreaDistB_MIN 0
#define default_stack_ItsGn6aslGvlAreaDistB_DEF 0
#define default_stack_ItsGn6aslGvlAreaDistB_MAX 65535

#define default_stack_ItsGn6aslGvlAreaAngle_PARAM "ItsGn6aslGvlAreaAngle"
#define default_stack_ItsGn6aslGvlAreaAngle_MIN 0
#define default_stack_ItsGn6aslGvlAreaAngle_DEF 0
#define default_stack_ItsGn6aslGvlAreaAngle_MAX 359

#define default_stack_ItsGn6IPv4Enabled_PARAM "ItsGn6IPv4Enabled"
#define default_stack_ItsGn6IPv4Enabled_DEF false

#define default_stack_ItsNativeIPv6Enabled_PARAM "ItsNativeIPv6Enabled"
#define default_stack_ItsNativeIPv6Enabled_DEF false

#define default_stack_ItsNativeIPv6ForceStart_PARAM "ItsNativeIPv6ForceStart"
#define default_stack_ItsNativeIPv6ForceStart_DEF false

#define default_stack_ItsNativeIPv6RadioAddress_PARAM "ItsNativeIPv6RadioAddress"
#define default_stack_ItsNativeIPv6RadioAddress_DEF ""

#define default_stack_ItsNativeIPv6RadioAddressPrefix_PARAM "ItsNativeIPv6RadioAddressPrefix"
#define default_stack_ItsNativeIPv6RadioAddressPrefix_DEF ""

#define default_stack_ItsNativeIPv6RadioAddressPrefixLength_PARAM "ItsNativeIPv6RadioAddressPrefixLength"
#define default_stack_ItsNativeIPv6RadioAddressPrefixLength_MIN 0
#define default_stack_ItsNativeIPv6RadioAddressPrefixLength_DEF 0
#define default_stack_ItsNativeIPv6RadioAddressPrefixLength_MAX 64

#define default_stack_ItsNativeIPv6RadioPrimaryDNS_PARAM "ItsNativeIPv6RadioPrimaryDNS"
#define default_stack_ItsNativeIPv6RadioPrimaryDNS_DEF "2001:470:20::2"

#define default_stack_ItsBtpCAMDestPort_PARAM "ItsBtpCAMDestPort"
#define default_stack_ItsBtpCAMDestPort_MIN 0
#define default_stack_ItsBtpCAMDestPort_DEF 2001
#define default_stack_ItsBtpCAMDestPort_MAX 65535
#define default_stack_ItsBtpCAMDestPort_aka ("bBtpCamPort")

#define default_stack_ItsBtpDENMDestPort_PARAM "ItsBtpDENMDestPort"
#define default_stack_ItsBtpDENMDestPort_MIN 0
#define default_stack_ItsBtpDENMDestPort_DEF 2002
#define default_stack_ItsBtpDENMDestPort_MAX 65535
#define default_stack_ItsBtpDENMDestPort_aka ("bBtpDenmPort")

#define default_stack_ItsBtpShellDestPort_PARAM "ItsBtpShellDestPort"
#define default_stack_ItsBtpShellDestPort_MIN 0
#define default_stack_ItsBtpShellDestPort_DEF 65535
#define default_stack_ItsBtpShellDestPort_MAX 65535

#define default_stack_ItsDCCEnabled_PARAM "ItsDCCEnabled"
#define default_stack_ItsDCCEnabled_MIN 0
#define default_stack_ItsDCCEnabled_DEF 2
#define default_stack_ItsDCCEnabled_MAX 4
#define default_stack_ItsDCCEnabled_None (0)
#define default_stack_ItsDCCEnabled_Basic (1)
#define default_stack_ItsDCCEnabled_C2C (2)
#define default_stack_ItsDCCEnabled_ETSI_Adaptive (3)
#define default_stack_ItsDCCEnabled_ETSI_Reactive (4)

#define default_stack_ItsDCC_CCH_TxPowerThr_minTxPower_dBm_PARAM "ItsDCC_CCH_TxPowerThr_minTxPower_dBm"
#define default_stack_ItsDCC_CCH_TxPowerThr_minTxPower_dBm_MIN -20
#define default_stack_ItsDCC_CCH_TxPowerThr_minTxPower_dBm_DEF -10
#define default_stack_ItsDCC_CCH_TxPowerThr_minTxPower_dBm_MAX 43

#define default_stack_ItsDCC_CCH_TxPowerThr_maxTxPower_dBm_PARAM "ItsDCC_CCH_TxPowerThr_maxTxPower_dBm"
#define default_stack_ItsDCC_CCH_TxPowerThr_maxTxPower_dBm_MIN -20
#define default_stack_ItsDCC_CCH_TxPowerThr_maxTxPower_dBm_DEF 33
#define default_stack_ItsDCC_CCH_TxPowerThr_maxTxPower_dBm_MAX 43

#define default_stack_ItsDCC_SCH_TxPowerThr_minTxPower_dBm_PARAM "ItsDCC_SCH_TxPowerThr_minTxPower_dBm"
#define default_stack_ItsDCC_SCH_TxPowerThr_minTxPower_dBm_MIN -20
#define default_stack_ItsDCC_SCH_TxPowerThr_minTxPower_dBm_DEF -10
#define default_stack_ItsDCC_SCH_TxPowerThr_minTxPower_dBm_MAX 43

#define default_stack_ItsDCC_SCH_TxPowerThr_maxTxPower_dBm_PARAM "ItsDCC_SCH_TxPowerThr_maxTxPower_dBm"
#define default_stack_ItsDCC_SCH_TxPowerThr_maxTxPower_dBm_MIN -20
#define default_stack_ItsDCC_SCH_TxPowerThr_maxTxPower_dBm_DEF 33
#define default_stack_ItsDCC_SCH_TxPowerThr_maxTxPower_dBm_MAX 43

#define default_stack_ItsDCC_CCH_PktTimingThr_minPacketInterval_ms_PARAM "ItsDCC_CCH_PktTimingThr_minPacketInterval_ms"
#define default_stack_ItsDCC_CCH_PktTimingThr_minPacketInterval_ms_MIN 0
#define default_stack_ItsDCC_CCH_PktTimingThr_minPacketInterval_ms_DEF 40
#define default_stack_ItsDCC_CCH_PktTimingThr_minPacketInterval_ms_MAX 40950

#define default_stack_ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms_PARAM "ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms"
#define default_stack_ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms_MIN 0
#define default_stack_ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms_DEF 960
#define default_stack_ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms_MAX 40950

#define default_stack_ItsDCC_SCH_PktTimingThr_minPacketInterval_ms_PARAM "ItsDCC_SCH_PktTimingThr_minPacketInterval_ms"
#define default_stack_ItsDCC_SCH_PktTimingThr_minPacketInterval_ms_MIN 0
#define default_stack_ItsDCC_SCH_PktTimingThr_minPacketInterval_ms_DEF 40
#define default_stack_ItsDCC_SCH_PktTimingThr_minPacketInterval_ms_MAX 40950

#define default_stack_ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms_PARAM "ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms"
#define default_stack_ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms_MIN 0
#define default_stack_ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms_DEF 960
#define default_stack_ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms_MAX 40950

#define default_stack_ItsDCC_CCH_PktDataRateThr_minDataRate_MCS_PARAM "ItsDCC_CCH_PktDataRateThr_minDataRate_MCS"
#define default_stack_ItsDCC_CCH_PktDataRateThr_minDataRate_MCS_MIN 0
#define default_stack_ItsDCC_CCH_PktDataRateThr_minDataRate_MCS_DEF 0
#define default_stack_ItsDCC_CCH_PktDataRateThr_minDataRate_MCS_MAX 7

#define default_stack_ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS_PARAM "ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS"
#define default_stack_ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS_MIN 0
#define default_stack_ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS_DEF 4
#define default_stack_ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS_MAX 7

#define default_stack_ItsDCC_SCH_PktDataRateThr_minDataRate_MCS_PARAM "ItsDCC_SCH_PktDataRateThr_minDataRate_MCS"
#define default_stack_ItsDCC_SCH_PktDataRateThr_minDataRate_MCS_MIN 0
#define default_stack_ItsDCC_SCH_PktDataRateThr_minDataRate_MCS_DEF 2
#define default_stack_ItsDCC_SCH_PktDataRateThr_minDataRate_MCS_MAX 7

#define default_stack_ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS_PARAM "ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS"
#define default_stack_ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS_MIN 0
#define default_stack_ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS_DEF 5
#define default_stack_ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS_MAX 7

#define default_stack_ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC_PARAM "ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC"
#define default_stack_ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC_DEF 300
#define default_stack_ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC_PARAM "ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC"
#define default_stack_ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC_DEF 650
#define default_stack_ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC_PARAM "ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC"
#define default_stack_ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC_DEF 300
#define default_stack_ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC_PARAM "ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC"
#define default_stack_ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC_DEF 650
#define default_stack_ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_CCH_General_timeUp_ms_PARAM "ItsDCC_CCH_General_timeUp_ms"
#define default_stack_ItsDCC_CCH_General_timeUp_ms_MIN 0
#define default_stack_ItsDCC_CCH_General_timeUp_ms_DEF 1000
#define default_stack_ItsDCC_CCH_General_timeUp_ms_MAX 40950

#define default_stack_ItsDCC_CCH_General_timeDown_ms_PARAM "ItsDCC_CCH_General_timeDown_ms"
#define default_stack_ItsDCC_CCH_General_timeDown_ms_MIN 0
#define default_stack_ItsDCC_CCH_General_timeDown_ms_DEF 5000
#define default_stack_ItsDCC_CCH_General_timeDown_ms_MAX 40950

#define default_stack_ItsDCC_CCH_General_numActiveState_PARAM "ItsDCC_CCH_General_numActiveState"
#define default_stack_ItsDCC_CCH_General_numActiveState_MIN 0
#define default_stack_ItsDCC_CCH_General_numActiveState_DEF 3
#define default_stack_ItsDCC_CCH_General_numActiveState_MAX 3

#define default_stack_ItsDCC_SCH_General_timeUp_ms_PARAM "ItsDCC_SCH_General_timeUp_ms"
#define default_stack_ItsDCC_SCH_General_timeUp_ms_MIN 0
#define default_stack_ItsDCC_SCH_General_timeUp_ms_DEF 1000
#define default_stack_ItsDCC_SCH_General_timeUp_ms_MAX 40950

#define default_stack_ItsDCC_SCH_General_timeDown_ms_PARAM "ItsDCC_SCH_General_timeDown_ms"
#define default_stack_ItsDCC_SCH_General_timeDown_ms_MIN 0
#define default_stack_ItsDCC_SCH_General_timeDown_ms_DEF 5000
#define default_stack_ItsDCC_SCH_General_timeDown_ms_MAX 40950

#define default_stack_ItsDCC_SCH_General_numActiveState_PARAM "ItsDCC_SCH_General_numActiveState"
#define default_stack_ItsDCC_SCH_General_numActiveState_MIN 0
#define default_stack_ItsDCC_SCH_General_numActiveState_DEF 3
#define default_stack_ItsDCC_SCH_General_numActiveState_MAX 3

#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VO_PARAM "ItsDCC_CCH_Relaxed_DCC_AC_VO"
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VI_PARAM "ItsDCC_CCH_Relaxed_DCC_AC_VI"
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VI_DEF 2
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BE_PARAM "ItsDCC_CCH_Relaxed_DCC_AC_BE"
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BE_DEF 2
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BK_PARAM "ItsDCC_CCH_Relaxed_DCC_AC_BK"
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BK_DEF 2
#define default_stack_ItsDCC_CCH_Relaxed_DCC_AC_BK_MAX 63

#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_PARAM "ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_DEF 400
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VO_PARAM "ItsDCC_CCH_ActiveState_DCC_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VI_PARAM "ItsDCC_CCH_ActiveState_DCC_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VI_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BE_PARAM "ItsDCC_CCH_ActiveState_DCC_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BE_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BK_PARAM "ItsDCC_CCH_ActiveState_DCC_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BK_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState_DCC_AC_BK_MAX 63

#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VO_PARAM "ItsDCC_CCH_ActiveState1_TxPower_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VI_PARAM "ItsDCC_CCH_ActiveState1_TxPower_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VI_DEF 90
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BE_PARAM "ItsDCC_CCH_ActiveState1_TxPower_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BE_DEF 80
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BK_PARAM "ItsDCC_CCH_ActiveState1_TxPower_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BK_DEF 70
#define default_stack_ItsDCC_CCH_ActiveState1_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VO_PARAM "ItsDCC_CCH_ActiveState1_PktInterval_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VO_DEF 9
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VI_PARAM "ItsDCC_CCH_ActiveState1_PktInterval_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VI_DEF 9
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BE_PARAM "ItsDCC_CCH_ActiveState1_PktInterval_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BE_DEF 9
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BK_PARAM "ItsDCC_CCH_ActiveState1_PktInterval_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BK_DEF 9
#define default_stack_ItsDCC_CCH_ActiveState1_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VO_PARAM "ItsDCC_CCH_ActiveState1_DataRate_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VO_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VI_PARAM "ItsDCC_CCH_ActiveState1_DataRate_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VI_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BE_PARAM "ItsDCC_CCH_ActiveState1_DataRate_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BE_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BK_PARAM "ItsDCC_CCH_ActiveState1_DataRate_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BK_DEF 2
#define default_stack_ItsDCC_CCH_ActiveState1_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_PARAM "ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_DEF 500
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VO_PARAM "ItsDCC_CCH_ActiveState2_TxPower_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VI_PARAM "ItsDCC_CCH_ActiveState2_TxPower_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VI_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BE_PARAM "ItsDCC_CCH_ActiveState2_TxPower_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BE_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BK_PARAM "ItsDCC_CCH_ActiveState2_TxPower_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BK_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VO_PARAM "ItsDCC_CCH_ActiveState2_PktInterval_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VO_DEF 19
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VI_PARAM "ItsDCC_CCH_ActiveState2_PktInterval_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VI_DEF 19
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BE_PARAM "ItsDCC_CCH_ActiveState2_PktInterval_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BE_DEF 19
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BK_PARAM "ItsDCC_CCH_ActiveState2_PktInterval_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BK_DEF 19
#define default_stack_ItsDCC_CCH_ActiveState2_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VO_PARAM "ItsDCC_CCH_ActiveState2_DataRate_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VI_PARAM "ItsDCC_CCH_ActiveState2_DataRate_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VI_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BE_PARAM "ItsDCC_CCH_ActiveState2_DataRate_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BE_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BK_PARAM "ItsDCC_CCH_ActiveState2_DataRate_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BK_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState2_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_PARAM "ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_DEF 650
#define default_stack_ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VO_PARAM "ItsDCC_CCH_ActiveState3_TxPower_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VI_PARAM "ItsDCC_CCH_ActiveState3_TxPower_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VI_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BE_PARAM "ItsDCC_CCH_ActiveState3_TxPower_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BE_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BK_PARAM "ItsDCC_CCH_ActiveState3_TxPower_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BK_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VO_PARAM "ItsDCC_CCH_ActiveState3_PktInterval_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VO_DEF 24
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VI_PARAM "ItsDCC_CCH_ActiveState3_PktInterval_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VI_DEF 24
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BE_PARAM "ItsDCC_CCH_ActiveState3_PktInterval_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BE_DEF 24
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BK_PARAM "ItsDCC_CCH_ActiveState3_PktInterval_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BK_DEF 24
#define default_stack_ItsDCC_CCH_ActiveState3_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VO_PARAM "ItsDCC_CCH_ActiveState3_DataRate_AC_VO"
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VI_PARAM "ItsDCC_CCH_ActiveState3_DataRate_AC_VI"
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VI_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BE_PARAM "ItsDCC_CCH_ActiveState3_DataRate_AC_BE"
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BE_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BK_PARAM "ItsDCC_CCH_ActiveState3_DataRate_AC_BK"
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BK_DEF 0
#define default_stack_ItsDCC_CCH_ActiveState3_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VO_PARAM "ItsDCC_CCH_Restrictive_DCC_AC_VO"
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VI_PARAM "ItsDCC_CCH_Restrictive_DCC_AC_VI"
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VI_DEF 2
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BE_PARAM "ItsDCC_CCH_Restrictive_DCC_AC_BE"
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BE_DEF 2
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BK_PARAM "ItsDCC_CCH_Restrictive_DCC_AC_BK"
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BK_DEF 2
#define default_stack_ItsDCC_CCH_Restrictive_DCC_AC_BK_MAX 63

#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VO_PARAM "ItsDCC_SCH_Relaxed_DCC_AC_VO"
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VI_PARAM "ItsDCC_SCH_Relaxed_DCC_AC_VI"
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VI_DEF 1
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BE_PARAM "ItsDCC_SCH_Relaxed_DCC_AC_BE"
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BE_DEF 1
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BK_PARAM "ItsDCC_SCH_Relaxed_DCC_AC_BK"
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BK_DEF 1
#define default_stack_ItsDCC_SCH_Relaxed_DCC_AC_BK_MAX 63

#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_PARAM "ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_DEF 250
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VO_PARAM "ItsDCC_SCH_ActiveState_DCC_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VI_PARAM "ItsDCC_SCH_ActiveState_DCC_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BE_PARAM "ItsDCC_SCH_ActiveState_DCC_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BE_DEF 1
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BK_PARAM "ItsDCC_SCH_ActiveState_DCC_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BK_DEF 1
#define default_stack_ItsDCC_SCH_ActiveState_DCC_AC_BK_MAX 63

#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VO_PARAM "ItsDCC_SCH_ActiveState1_TxPower_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VI_PARAM "ItsDCC_SCH_ActiveState1_TxPower_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BE_PARAM "ItsDCC_SCH_ActiveState1_TxPower_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BE_DEF 90
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BK_PARAM "ItsDCC_SCH_ActiveState1_TxPower_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BK_DEF 80
#define default_stack_ItsDCC_SCH_ActiveState1_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VO_PARAM "ItsDCC_SCH_ActiveState1_PktInterval_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VI_PARAM "ItsDCC_SCH_ActiveState1_PktInterval_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BE_PARAM "ItsDCC_SCH_ActiveState1_PktInterval_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BE_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BK_PARAM "ItsDCC_SCH_ActiveState1_PktInterval_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BK_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VO_PARAM "ItsDCC_SCH_ActiveState1_DataRate_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VI_PARAM "ItsDCC_SCH_ActiveState1_DataRate_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BE_PARAM "ItsDCC_SCH_ActiveState1_DataRate_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BE_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BK_PARAM "ItsDCC_SCH_ActiveState1_DataRate_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BK_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState1_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_PARAM "ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_DEF 300
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VO_PARAM "ItsDCC_SCH_ActiveState2_TxPower_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VO_DEF 90
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VI_PARAM "ItsDCC_SCH_ActiveState2_TxPower_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VI_DEF 90
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BE_PARAM "ItsDCC_SCH_ActiveState2_TxPower_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BE_DEF 80
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BK_PARAM "ItsDCC_SCH_ActiveState2_TxPower_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BK_DEF 60
#define default_stack_ItsDCC_SCH_ActiveState2_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VO_PARAM "ItsDCC_SCH_ActiveState2_PktInterval_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VI_PARAM "ItsDCC_SCH_ActiveState2_PktInterval_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BE_PARAM "ItsDCC_SCH_ActiveState2_PktInterval_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BE_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BK_PARAM "ItsDCC_SCH_ActiveState2_PktInterval_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BK_DEF 100
#define default_stack_ItsDCC_SCH_ActiveState2_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VO_PARAM "ItsDCC_SCH_ActiveState2_DataRate_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VI_PARAM "ItsDCC_SCH_ActiveState2_DataRate_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BE_PARAM "ItsDCC_SCH_ActiveState2_DataRate_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BE_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BK_PARAM "ItsDCC_SCH_ActiveState2_DataRate_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BK_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState2_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_PARAM "ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC"
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_MIN 0
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_DEF 350
#define default_stack_ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC_MAX 1000

#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VO_PARAM "ItsDCC_SCH_ActiveState3_TxPower_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VO_DEF 70
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VO_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VI_PARAM "ItsDCC_SCH_ActiveState3_TxPower_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VI_DEF 70
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_VI_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BE_PARAM "ItsDCC_SCH_ActiveState3_TxPower_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BE_DEF 60
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BE_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BK_PARAM "ItsDCC_SCH_ActiveState3_TxPower_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BK_DEF 50
#define default_stack_ItsDCC_SCH_ActiveState3_TxPower_AC_BK_MAX 127

#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VO_PARAM "ItsDCC_SCH_ActiveState3_PktInterval_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VO_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VI_PARAM "ItsDCC_SCH_ActiveState3_PktInterval_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_VI_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BE_PARAM "ItsDCC_SCH_ActiveState3_PktInterval_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BE_DEF 100
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BE_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BK_PARAM "ItsDCC_SCH_ActiveState3_PktInterval_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BK_DEF 150
#define default_stack_ItsDCC_SCH_ActiveState3_PktInterval_AC_BK_MAX 1023

#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VO_PARAM "ItsDCC_SCH_ActiveState3_DataRate_AC_VO"
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VO_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VI_PARAM "ItsDCC_SCH_ActiveState3_DataRate_AC_VI"
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VI_DEF 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_VI_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BE_PARAM "ItsDCC_SCH_ActiveState3_DataRate_AC_BE"
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BE_DEF 3
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BE_MAX 7

#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BK_PARAM "ItsDCC_SCH_ActiveState3_DataRate_AC_BK"
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BK_DEF 3
#define default_stack_ItsDCC_SCH_ActiveState3_DataRate_AC_BK_MAX 7

#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VO_PARAM "ItsDCC_SCH_Restrictive_DCC_AC_VO"
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VO_MIN 0
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VO_DEF 0
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VO_MAX 63

#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VI_PARAM "ItsDCC_SCH_Restrictive_DCC_AC_VI"
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VI_MIN 0
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VI_DEF 1
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_VI_MAX 63

#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BE_PARAM "ItsDCC_SCH_Restrictive_DCC_AC_BE"
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BE_MIN 0
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BE_DEF 1
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BE_MAX 63

#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BK_PARAM "ItsDCC_SCH_Restrictive_DCC_AC_BK"
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BK_MIN 0
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BK_DEF 1
#define default_stack_ItsDCC_SCH_Restrictive_DCC_AC_BK_MAX 63

#define default_stack_ItsG5MonUpdateFrequency_PARAM "ItsG5MonUpdateFrequency"
#define default_stack_ItsG5MonUpdateFrequency_MIN 50
#define default_stack_ItsG5MonUpdateFrequency_DEF 100
#define default_stack_ItsG5MonUpdateFrequency_MAX 500

#define default_stack_ItsUdpBtpIfHostName_PARAM "ItsUdpBtpIfHostName"
#define default_stack_ItsUdpBtpIfHostName_DEF "127.0.0.1"

#define default_stack_ItsUdpBtpIfIndPort_PARAM "ItsUdpBtpIfIndPort"
#define default_stack_ItsUdpBtpIfIndPort_MIN 1
#define default_stack_ItsUdpBtpIfIndPort_DEF 4400
#define default_stack_ItsUdpBtpIfIndPort_MAX 65535

#define default_stack_ItsUdpBtpIfReqPort_PARAM "ItsUdpBtpIfReqPort"
#define default_stack_ItsUdpBtpIfReqPort_MIN 1
#define default_stack_ItsUdpBtpIfReqPort_DEF 4401
#define default_stack_ItsUdpBtpIfReqPort_MAX 65535

#define default_stack_Cohda_SecIdChangeCheckInterval_PARAM "Cohda_SecIdChangeCheckInterval"
#define default_stack_Cohda_SecIdChangeCheckInterval_MIN 0
#define default_stack_Cohda_SecIdChangeCheckInterval_DEF 1
#define default_stack_Cohda_SecIdChangeCheckInterval_MAX 3600
#define default_stack_Cohda_SecIdChangeCheckInterval_Disable (0)
#define default_stack_Cohda_SecIdChangeCheckInterval_OneSecond (1)

#define default_stack_Cohda_SecIdChangeIntervalRand_PARAM "Cohda_SecIdChangeIntervalRand"
#define default_stack_Cohda_SecIdChangeIntervalRand_DEF false

#define default_stack_Cohda_SecIdChangeIntervalMin_PARAM "Cohda_SecIdChangeIntervalMin"
#define default_stack_Cohda_SecIdChangeIntervalMin_MIN 0
#define default_stack_Cohda_SecIdChangeIntervalMin_DEF 300
#define default_stack_Cohda_SecIdChangeIntervalMin_MAX 3600
#define default_stack_Cohda_SecIdChangeIntervalMin_Disable (0)

#define default_stack_Cohda_SecIdChangeIntervalMax_PARAM "Cohda_SecIdChangeIntervalMax"
#define default_stack_Cohda_SecIdChangeIntervalMax_MIN 0
#define default_stack_Cohda_SecIdChangeIntervalMax_DEF 300
#define default_stack_Cohda_SecIdChangeIntervalMax_MAX 3600
#define default_stack_Cohda_SecIdChangeIntervalMax_Disable (0)

#define default_stack_Cohda_SecIdChangeDistanceRand_PARAM "Cohda_SecIdChangeDistanceRand"
#define default_stack_Cohda_SecIdChangeDistanceRand_DEF false

#define default_stack_Cohda_SecIdChangeDistanceMin_PARAM "Cohda_SecIdChangeDistanceMin"
#define default_stack_Cohda_SecIdChangeDistanceMin_MIN 0
#define default_stack_Cohda_SecIdChangeDistanceMin_DEF 2000
#define default_stack_Cohda_SecIdChangeDistanceMin_MAX 100000
#define default_stack_Cohda_SecIdChangeDistanceMin_Disable (0)

#define default_stack_Cohda_SecIdChangeDistanceMax_PARAM "Cohda_SecIdChangeDistanceMax"
#define default_stack_Cohda_SecIdChangeDistanceMax_MIN 0
#define default_stack_Cohda_SecIdChangeDistanceMax_DEF 15000
#define default_stack_Cohda_SecIdChangeDistanceMax_MAX 100000
#define default_stack_Cohda_SecIdChangeDistanceMax_Disable (0)

#define default_stack_Cohda_SecDuplicateMacHandling_PARAM "Cohda_SecDuplicateMacHandling"
#define default_stack_Cohda_SecDuplicateMacHandling_MIN 0
#define default_stack_Cohda_SecDuplicateMacHandling_DEF 2
#define default_stack_Cohda_SecDuplicateMacHandling_MAX 3
#define default_stack_Cohda_SecDuplicateMacHandling_AllowChange (0)
#define default_stack_Cohda_SecDuplicateMacHandling_NoSequentialChanges (1)
#define default_stack_Cohda_SecDuplicateMacHandling_NoFrequentChanges (2)

#define default_stack_Cohda_SecDuplicateMacInterval_PARAM "Cohda_SecDuplicateMacInterval"
#define default_stack_Cohda_SecDuplicateMacInterval_MIN -1
#define default_stack_Cohda_SecDuplicateMacInterval_DEF 1800
#define default_stack_Cohda_SecDuplicateMacInterval_MAX 3600
#define default_stack_Cohda_SecDuplicateMacInterval_Disable (-1)
#define default_stack_Cohda_SecDuplicateMacInterval_AlwaysChange (0)

#define default_stack_Cohda_SecIdChangeRetryInterval_PARAM "Cohda_SecIdChangeRetryInterval"
#define default_stack_Cohda_SecIdChangeRetryInterval_MIN -1
#define default_stack_Cohda_SecIdChangeRetryInterval_DEF 5
#define default_stack_Cohda_SecIdChangeRetryInterval_MAX 3600
#define default_stack_Cohda_SecIdChangeRetryInterval_Disable (-1)

#define default_stack_Cohda_SecShuffleCerts_PARAM "Cohda_SecShuffleCerts"
#define default_stack_Cohda_SecShuffleCerts_DEF false

#define default_stack_Cohda_SecIdChangeScheme_PARAM "Cohda_SecIdChangeScheme"
#define default_stack_Cohda_SecIdChangeScheme_MIN 0
#define default_stack_Cohda_SecIdChangeScheme_DEF 0
#define default_stack_Cohda_SecIdChangeScheme_MAX 2
#define default_stack_Cohda_SecIdChangeScheme_Cohda (0)
#define default_stack_Cohda_SecIdChangeScheme_C2C (1)
#define default_stack_Cohda_SecIdChangeScheme_EUCP (2)

#define default_stack_Cohda_SecIdChangeSchemeSchedOnly_PARAM "Cohda_SecIdChangeSchemeSchedOnly"
#define default_stack_Cohda_SecIdChangeSchemeSchedOnly_DEF false

#define default_stack_Cohda_SecIdChangeDistanceMethod_PARAM "Cohda_SecIdChangeDistanceMethod"
#define default_stack_Cohda_SecIdChangeDistanceMethod_DEF false
#define default_stack_Cohda_SecIdChangeDistanceMethod_AbsoluteAsTheCrowFlies ((bool)0)
#define default_stack_Cohda_SecIdChangeDistanceMethod_CumulativeTravel ((bool)1)

#define default_stack_Cohda_SecRestartBlockingTime_PARAM "Cohda_SecRestartBlockingTime"
#define default_stack_Cohda_SecRestartBlockingTime_MIN 0
#define default_stack_Cohda_SecRestartBlockingTime_DEF 0
#define default_stack_Cohda_SecRestartBlockingTime_MAX 30
#define default_stack_Cohda_SecRestartBlockingTime_Disable (0)
#define default_stack_Cohda_SecRestartBlockingTime_OneMinute (1)

#define default_stack_Cohda_SecChangeBlockingMaxTime_PARAM "Cohda_SecChangeBlockingMaxTime"
#define default_stack_Cohda_SecChangeBlockingMaxTime_MIN 0
#define default_stack_Cohda_SecChangeBlockingMaxTime_DEF 0
#define default_stack_Cohda_SecChangeBlockingMaxTime_MAX 60
#define default_stack_Cohda_SecChangeBlockingMaxTime_Disable (0)
#define default_stack_Cohda_SecChangeBlockingMaxTime_OneMinute (1)

#define default_stack_Cohda_SecCertMinTal_PARAM "Cohda_SecCertMinTal"
#define default_stack_Cohda_SecCertMinTal_MIN 0
#define default_stack_Cohda_SecCertMinTal_DEF 0
#define default_stack_Cohda_SecCertMinTal_MAX 4

#define default_stack_Cohda_SecMinValidATCerts_PARAM "Cohda_SecMinValidATCerts"
#define default_stack_Cohda_SecMinValidATCerts_MIN 0
#define default_stack_Cohda_SecMinValidATCerts_DEF 0
#define default_stack_Cohda_SecMinValidATCerts_MAX 100
#define default_stack_Cohda_SecMinValidATCerts_Disable (0)
#define default_stack_Cohda_SecMinValidATCerts_OneATCert (1)

#define default_stack_UpperTesterUdpRxPort_PARAM "UpperTesterUdpRxPort"
#define default_stack_UpperTesterUdpRxPort_MIN 1
#define default_stack_UpperTesterUdpRxPort_DEF 12345
#define default_stack_UpperTesterUdpRxPort_MAX 65535

#define default_stack_UpperTesterUdpRxIface_PARAM "UpperTesterUdpRxIface"
#define default_stack_UpperTesterUdpRxIface_DEF ""

#define default_stack_UpperTesterNotifCtrl_PARAM "UpperTesterNotifCtrl"
#define default_stack_UpperTesterNotifCtrl_MIN 0x0ul
#define default_stack_UpperTesterNotifCtrl_DEF 0x0ul
#define default_stack_UpperTesterNotifCtrl_MAX 0x3ul
#define default_stack_UpperTesterNotifCtrl_GN (0x01)
#define default_stack_UpperTesterNotifCtrl_BTP (0x02)

#define default_stack_UpperTesterAutoStart_PARAM "UpperTesterAutoStart"
#define default_stack_UpperTesterAutoStart_MIN 0x0ul
#define default_stack_UpperTesterAutoStart_DEF 0x0ul
#define default_stack_UpperTesterAutoStart_MAX 0x87ul
#define default_stack_UpperTesterAutoStart_start_MAP (0x01)
#define default_stack_UpperTesterAutoStart_start_SPAT (0x02)
#define default_stack_UpperTesterAutoStart_start_IVI (0x04)
#define default_stack_UpperTesterAutoStart_start_Unsecured_GN (0x80)

#define default_stack_UpperTesterGNExtra_PARAM "UpperTesterGNExtra"
#define default_stack_UpperTesterGNExtra_MIN 0x0ul
#define default_stack_UpperTesterGNExtra_DEF 0x1ul
#define default_stack_UpperTesterGNExtra_MAX 0xfful

#define default_stack_Cohda_PersistanceDir_PARAM "Cohda_PersistanceDir"
#define default_stack_Cohda_PersistanceDir_DEF "/var/persistence"


#define default_stack_Cohda_PP_CurvatureFilterCutoff_Hz_PARAM "Cohda_PP.CurvatureFilterCutoff_Hz"
#define default_stack_Cohda_PP_CurvatureFilterCutoff_Hz_MIN 0.01
#define default_stack_Cohda_PP_CurvatureFilterCutoff_Hz_DEF 0.33
#define default_stack_Cohda_PP_CurvatureFilterCutoff_Hz_MAX 1.0

#define default_stack_Cohda_PP_CurvatureDampFactor_PARAM "Cohda_PP.CurvatureDampFactor"
#define default_stack_Cohda_PP_CurvatureDampFactor_MIN 0.0
#define default_stack_Cohda_PP_CurvatureDampFactor_DEF 1.0
#define default_stack_Cohda_PP_CurvatureDampFactor_MAX 2.0

#define default_stack_Cohda_PP_CurvatureFilterSamplingTime_PARAM "Cohda_PP.CurvatureFilterSamplingTime"
#define default_stack_Cohda_PP_CurvatureFilterSamplingTime_MIN 0.1
#define default_stack_Cohda_PP_CurvatureFilterSamplingTime_DEF 0.1
#define default_stack_Cohda_PP_CurvatureFilterSamplingTime_MAX 0.4

#define default_stack_Cohda_PP_MinSpeed_mps_PARAM "Cohda_PP.MinSpeed_mps"
#define default_stack_Cohda_PP_MinSpeed_mps_MIN 0.0
#define default_stack_Cohda_PP_MinSpeed_mps_DEF 1.0
#define default_stack_Cohda_PP_MinSpeed_mps_MAX 2.0

#define default_stack_Cohda_PP_MaximumRadius_m_PARAM "Cohda_PP.MaximumRadius_m"
#define default_stack_Cohda_PP_MaximumRadius_m_MIN 1000
#define default_stack_Cohda_PP_MaximumRadius_m_DEF 2500
#define default_stack_Cohda_PP_MaximumRadius_m_MAX 5000

#define default_stack_Cohda_PP_ConfFilterCutoff_Hz_PARAM "Cohda_PP.ConfFilterCutoff_Hz"
#define default_stack_Cohda_PP_ConfFilterCutoff_Hz_MIN 0.33
#define default_stack_Cohda_PP_ConfFilterCutoff_Hz_DEF 1.0
#define default_stack_Cohda_PP_ConfFilterCutoff_Hz_MAX 1.0

#define default_stack_Cohda_PP_ConfDampFactor_PARAM "Cohda_PP.ConfDampFactor"
#define default_stack_Cohda_PP_ConfDampFactor_MIN 0.0
#define default_stack_Cohda_PP_ConfDampFactor_DEF 1.0
#define default_stack_Cohda_PP_ConfDampFactor_MAX 2.0

#define default_stack_Cohda_PP_ConfFilterSamplingTime_PARAM "Cohda_PP.ConfFilterSamplingTime"
#define default_stack_Cohda_PP_ConfFilterSamplingTime_MIN 0.1
#define default_stack_Cohda_PP_ConfFilterSamplingTime_DEF 0.1
#define default_stack_Cohda_PP_ConfFilterSamplingTime_MAX 0.4

#define default_stack_Cohda_PP_ConfLookup_0_0_Input_PARAM "Cohda_PP.ConfLookup_0_0_Input"
#define default_stack_Cohda_PP_ConfLookup_0_0_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_0_Input_DEF 25.0
#define default_stack_Cohda_PP_ConfLookup_0_0_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_1_Input_PARAM "Cohda_PP.ConfLookup_0_1_Input"
#define default_stack_Cohda_PP_ConfLookup_0_1_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_1_Input_DEF 20.0
#define default_stack_Cohda_PP_ConfLookup_0_1_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_2_Input_PARAM "Cohda_PP.ConfLookup_0_2_Input"
#define default_stack_Cohda_PP_ConfLookup_0_2_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_2_Input_DEF 15.0
#define default_stack_Cohda_PP_ConfLookup_0_2_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_3_Input_PARAM "Cohda_PP.ConfLookup_0_3_Input"
#define default_stack_Cohda_PP_ConfLookup_0_3_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_3_Input_DEF 10.0
#define default_stack_Cohda_PP_ConfLookup_0_3_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_4_Input_PARAM "Cohda_PP.ConfLookup_0_4_Input"
#define default_stack_Cohda_PP_ConfLookup_0_4_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_4_Input_DEF 5.0
#define default_stack_Cohda_PP_ConfLookup_0_4_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_5_Input_PARAM "Cohda_PP.ConfLookup_0_5_Input"
#define default_stack_Cohda_PP_ConfLookup_0_5_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_5_Input_DEF 2.5
#define default_stack_Cohda_PP_ConfLookup_0_5_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_6_Input_PARAM "Cohda_PP.ConfLookup_0_6_Input"
#define default_stack_Cohda_PP_ConfLookup_0_6_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_6_Input_DEF 2.0
#define default_stack_Cohda_PP_ConfLookup_0_6_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_7_Input_PARAM "Cohda_PP.ConfLookup_0_7_Input"
#define default_stack_Cohda_PP_ConfLookup_0_7_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_7_Input_DEF 1.5
#define default_stack_Cohda_PP_ConfLookup_0_7_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_8_Input_PARAM "Cohda_PP.ConfLookup_0_8_Input"
#define default_stack_Cohda_PP_ConfLookup_0_8_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_8_Input_DEF 1.0
#define default_stack_Cohda_PP_ConfLookup_0_8_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_9_Input_PARAM "Cohda_PP.ConfLookup_0_9_Input"
#define default_stack_Cohda_PP_ConfLookup_0_9_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_9_Input_DEF 0.5
#define default_stack_Cohda_PP_ConfLookup_0_9_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_0_10_Input_PARAM "Cohda_PP.ConfLookup_0_10_Input"
#define default_stack_Cohda_PP_ConfLookup_0_10_Input_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_0_10_Input_DEF 0.0
#define default_stack_Cohda_PP_ConfLookup_0_10_Input_MAX 400.0

#define default_stack_Cohda_PP_ConfLookup_1_0_Conf_PARAM "Cohda_PP.ConfLookup_1_0_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_0_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_0_Conf_DEF 0.0
#define default_stack_Cohda_PP_ConfLookup_1_0_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_1_Conf_PARAM "Cohda_PP.ConfLookup_1_1_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_1_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_1_Conf_DEF 10.0
#define default_stack_Cohda_PP_ConfLookup_1_1_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_2_Conf_PARAM "Cohda_PP.ConfLookup_1_2_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_2_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_2_Conf_DEF 20.0
#define default_stack_Cohda_PP_ConfLookup_1_2_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_3_Conf_PARAM "Cohda_PP.ConfLookup_1_3_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_3_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_3_Conf_DEF 30.0
#define default_stack_Cohda_PP_ConfLookup_1_3_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_4_Conf_PARAM "Cohda_PP.ConfLookup_1_4_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_4_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_4_Conf_DEF 40.0
#define default_stack_Cohda_PP_ConfLookup_1_4_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_5_Conf_PARAM "Cohda_PP.ConfLookup_1_5_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_5_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_5_Conf_DEF 50.0
#define default_stack_Cohda_PP_ConfLookup_1_5_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_6_Conf_PARAM "Cohda_PP.ConfLookup_1_6_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_6_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_6_Conf_DEF 60.0
#define default_stack_Cohda_PP_ConfLookup_1_6_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_7_Conf_PARAM "Cohda_PP.ConfLookup_1_7_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_7_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_7_Conf_DEF 70.0
#define default_stack_Cohda_PP_ConfLookup_1_7_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_8_Conf_PARAM "Cohda_PP.ConfLookup_1_8_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_8_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_8_Conf_DEF 80.0
#define default_stack_Cohda_PP_ConfLookup_1_8_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_9_Conf_PARAM "Cohda_PP.ConfLookup_1_9_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_9_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_9_Conf_DEF 90.0
#define default_stack_Cohda_PP_ConfLookup_1_9_Conf_MAX 100.0

#define default_stack_Cohda_PP_ConfLookup_1_10_Conf_PARAM "Cohda_PP.ConfLookup_1_10_Conf"
#define default_stack_Cohda_PP_ConfLookup_1_10_Conf_MIN 0.0
#define default_stack_Cohda_PP_ConfLookup_1_10_Conf_DEF 100.0
#define default_stack_Cohda_PP_ConfLookup_1_10_Conf_MAX 100.0

#define default_stack_Cohda_PP_StationaryConf_PARAM "Cohda_PP.StationaryConf"
#define default_stack_Cohda_PP_StationaryConf_MIN 0
#define default_stack_Cohda_PP_StationaryConf_DEF 100
#define default_stack_Cohda_PP_StationaryConf_MAX 100

#define default_stack_Cohda_PP_ConfAugmentFilterCutoff_Hz_PARAM "Cohda_PP.ConfAugmentFilterCutoff_Hz"
#define default_stack_Cohda_PP_ConfAugmentFilterCutoff_Hz_MIN 0.01
#define default_stack_Cohda_PP_ConfAugmentFilterCutoff_Hz_DEF 0.1
#define default_stack_Cohda_PP_ConfAugmentFilterCutoff_Hz_MAX 1.0

#define default_stack_Cohda_PP_AugmentConfidenceFilter_PARAM "Cohda_PP.AugmentConfidenceFilter"
#define default_stack_Cohda_PP_AugmentConfidenceFilter_DEF false

#define default_stack_Cohda_PP_UseStrWhlAngGrad_PARAM "Cohda_PP.UseStrWhlAngGrad"
#define default_stack_Cohda_PP_UseStrWhlAngGrad_DEF false

#define default_stack_Cohda_PP_DebugLevel_PARAM "Cohda_PP.DebugLevel"
#define default_stack_Cohda_PP_DebugLevel_MIN -1
#define default_stack_Cohda_PP_DebugLevel_DEF -1
#define default_stack_Cohda_PP_DebugLevel_MAX 255


#define default_stack_Cohda_PP_lph_pp_DebugLevel_PARAM "Cohda_PP.lph_pp.DebugLevel"
#define default_stack_Cohda_PP_lph_pp_DebugLevel_MIN -1
#define default_stack_Cohda_PP_lph_pp_DebugLevel_DEF -1
#define default_stack_Cohda_PP_lph_pp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PP_lph_pp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PP_lph_pp;

#define default_stack_Cohda_PP_lph_pp_NUM_SUB (0)
#define default_stack_Cohda_PP_lph_pp_NUM_FLD (1)

typedef struct default_stack_Cohda_PP
{
  tdefault_stack_Cohda_PP_lph_pp lph_pp;

  /**
   * CurvatureFilterCutoff_Hz default is 0.33, min/max 0.01/1.0
   * Table 23, PP Calibration Parameters
   * Curvature filter cutoff frequency [Hz]
   */
  float CurvatureFilterCutoff_Hz;

  /**
   * CurvatureDampFactor default is 1.0, min/max 0.0/2.0
   * Curvature filter damping factor (1 == critical)
   */
  float CurvatureDampFactor;

  /**
   * CurvatureFilterSamplingTime default is 0.1, min/max 0.1/0.4
   * Curvature filter sampling time [seconds]
   */
  float CurvatureFilterSamplingTime;

  /**
   * MinSpeed_mps default is 1.0, min/max 0.0/2.0
   * Minimum speed for PP calculations. Below this speed
   * PP algorithm will report straight path (3276.7m)
   */
  float MinSpeed_mps;

  /**
   * MaximumRadius_m default is 2500, min/max 1000/5000
   * For any (absolute) radius above this threshold, the PP
   */
  int32_t MaximumRadius_m;

  /**
   * ConfFilterCutoff_Hz default is 1.0, min/max 0.33/1.0
   * Straight path is a constant
   * Confidence filter cutoff frequency [Hz]
   */
  float ConfFilterCutoff_Hz;

  /**
   * ConfDampFactor default is 1.0, min/max 0.0/2.0
   * Confidence filter damping factor (Default 1 == critical)
   */
  float ConfDampFactor;

  /**
   * ConfFilterSamplingTime default is 0.1, min/max 0.1/0.4
   * Confidence filter sampling time [seconds]
   */
  float ConfFilterSamplingTime;

  /**
   * ConfLookup_0_0_Input default is 25.0, min/max 0.0/400.0
   * Table 24, Confidence lookup table
   * Confidence filter input values
   * Note that the default values below are suitable for "PPUseStrWhlAngGrad = 0" (i.e. YawRate filtering)
   * The comment has reasonable values for "PPUseStrWhlAngGrad = 1" (i.e. SteeringWheelGradient filtering)
   * yaw rate of 25 degrees/second/second
   * or
   * steering wheel gradient of 384 degrees/second
   */
  float ConfLookup_0_0_Input;

  /**
   * ConfLookup_0_1_Input default is 20.0, min/max 0.0/400.0
   * 20  d/s/s or 312 d/s
   */
  float ConfLookup_0_1_Input;

  /**
   * ConfLookup_0_2_Input default is 15.0, min/max 0.0/400.0
   * 15  d/s/s or 255 d/s
   */
  float ConfLookup_0_2_Input;

  /**
   * ConfLookup_0_3_Input default is 10.0, min/max 0.0/400.0
   * 10  d/s/s or 192 d/s
   */
  float ConfLookup_0_3_Input;

  /**
   * ConfLookup_0_4_Input default is 5.0, min/max 0.0/400.0
   * 5   d/s/s or 128 d/s
   */
  float ConfLookup_0_4_Input;

  /**
   * ConfLookup_0_5_Input default is 2.5, min/max 0.0/400.0
   * 2.5 d/s/s or  64 d/s
   */
  float ConfLookup_0_5_Input;

  /**
   * ConfLookup_0_6_Input default is 2.0, min/max 0.0/400.0
   * 2   d/s/s or  32 d/s
   */
  float ConfLookup_0_6_Input;

  /**
   * ConfLookup_0_7_Input default is 1.5, min/max 0.0/400.0
   * 1.5 d/s/s or  15 d/s
   */
  float ConfLookup_0_7_Input;

  /**
   * ConfLookup_0_8_Input default is 1.0, min/max 0.0/400.0
   * 1   d/s/s or   5 d/s
   */
  float ConfLookup_0_8_Input;

  /**
   * ConfLookup_0_9_Input default is 0.5, min/max 0.0/400.0
   * 0.5 d/s/s or   3 d/s
   */
  float ConfLookup_0_9_Input;

  /**
   * ConfLookup_0_10_Input default is 0.0, min/max 0.0/400.0
   *   0 d/s/s or   0 d/s
   */
  float ConfLookup_0_10_Input;

  /**
   * ConfLookup_1_0_Conf default is 0.0, min/max 0.0/100.0
   * Confidence Values
   */
  float ConfLookup_1_0_Conf;

  /**
   * ConfLookup_1_1_Conf default is 10.0, min/max 0.0/100.0
   */
  float ConfLookup_1_1_Conf;

  /**
   * ConfLookup_1_2_Conf default is 20.0, min/max 0.0/100.0
   */
  float ConfLookup_1_2_Conf;

  /**
   * ConfLookup_1_3_Conf default is 30.0, min/max 0.0/100.0
   */
  float ConfLookup_1_3_Conf;

  /**
   * ConfLookup_1_4_Conf default is 40.0, min/max 0.0/100.0
   */
  float ConfLookup_1_4_Conf;

  /**
   * ConfLookup_1_5_Conf default is 50.0, min/max 0.0/100.0
   */
  float ConfLookup_1_5_Conf;

  /**
   * ConfLookup_1_6_Conf default is 60.0, min/max 0.0/100.0
   */
  float ConfLookup_1_6_Conf;

  /**
   * ConfLookup_1_7_Conf default is 70.0, min/max 0.0/100.0
   */
  float ConfLookup_1_7_Conf;

  /**
   * ConfLookup_1_8_Conf default is 80.0, min/max 0.0/100.0
   */
  float ConfLookup_1_8_Conf;

  /**
   * ConfLookup_1_9_Conf default is 90.0, min/max 0.0/100.0
   */
  float ConfLookup_1_9_Conf;

  /**
   * ConfLookup_1_10_Conf default is 100.0, min/max 0.0/100.0
   */
  float ConfLookup_1_10_Conf;

  /**
   * StationaryConf default is 100, min/max 0/100
   * extra parameters not in the spec
   * Confidence, in percent, to report when stationary
   */
  int32_t StationaryConf;

  /**
   * ConfAugmentFilterCutoff_Hz default is 0.1, min/max 0.01/1.0
   * Confidence filter cutoff frequency [Hz]
   */
  float ConfAugmentFilterCutoff_Hz;

  /**
   * DebugLevel default is -1, min/max -1/255
   * fine-grained debug for PP
   * (some of the above are probably PP...)
   */
  int32_t DebugLevel;

  /**
   * AugmentConfidenceFilter default is false
   * Use the augmented confidence filter
   */
  bool AugmentConfidenceFilter;

  /**
   * UseStrWhlAngGrad default is false
   * use Steering Wheel Gradient instead of Yaw Rate
   * when estimating PP confidence
   */
  bool UseStrWhlAngGrad;
} tdefault_stack_Cohda_PP;

#define default_stack_Cohda_PP_NUM_SUB (1)
#define default_stack_Cohda_PP_NUM_FLD (35)


#define default_stack_Cohda_PH_Method_PARAM "Cohda_PH.Method"
#define default_stack_Cohda_PH_Method_MIN 1
#define default_stack_Cohda_PH_Method_DEF 3
#define default_stack_Cohda_PH_Method_MAX 3

#define default_stack_Cohda_PH_Distance_m_PARAM "Cohda_PH.Distance_m"
#define default_stack_Cohda_PH_Distance_m_MIN 0
#define default_stack_Cohda_PH_Distance_m_DEF 200
#define default_stack_Cohda_PH_Distance_m_MAX 5000

#define default_stack_Cohda_PH_ChordLength_m_PARAM "Cohda_PH.ChordLength_m"
#define default_stack_Cohda_PH_ChordLength_m_MIN 0.0
#define default_stack_Cohda_PH_ChordLength_m_DEF 210.0
#define default_stack_Cohda_PH_ChordLength_m_MAX 500.0

#define default_stack_Cohda_PH_AllowableError_m_PARAM "Cohda_PH.AllowableError_m"
#define default_stack_Cohda_PH_AllowableError_m_MIN 0.0
#define default_stack_Cohda_PH_AllowableError_m_DEF 1.0
#define default_stack_Cohda_PH_AllowableError_m_MAX 1.0

#define default_stack_Cohda_PH_MaxPoints_PARAM "Cohda_PH.MaxPoints"
#define default_stack_Cohda_PH_MaxPoints_MIN 0
#define default_stack_Cohda_PH_MaxPoints_DEF 15
#define default_stack_Cohda_PH_MaxPoints_MAX 40

#define default_stack_Cohda_PH_SmallDeltaPhi_r_PARAM "Cohda_PH.SmallDeltaPhi_r"
#define default_stack_Cohda_PH_SmallDeltaPhi_r_MIN 0.0
#define default_stack_Cohda_PH_SmallDeltaPhi_r_DEF 0.02
#define default_stack_Cohda_PH_SmallDeltaPhi_r_MAX 1.0

#define default_stack_Cohda_PH_MaxEstimatedRadius_PARAM "Cohda_PH.MaxEstimatedRadius"
#define default_stack_Cohda_PH_MaxEstimatedRadius_MIN 0x0ul
#define default_stack_Cohda_PH_MaxEstimatedRadius_DEF 0x7ffffful
#define default_stack_Cohda_PH_MaxEstimatedRadius_MAX 0xfffffful

#define default_stack_Cohda_PH_MaxNumIntermediatePoints_PARAM "Cohda_PH.MaxNumIntermediatePoints"
#define default_stack_Cohda_PH_MaxNumIntermediatePoints_MIN 1
#define default_stack_Cohda_PH_MaxNumIntermediatePoints_DEF 60
#define default_stack_Cohda_PH_MaxNumIntermediatePoints_MAX 100

#define default_stack_Cohda_PH_Persistency_PARAM "Cohda_PH.Persistency"
#define default_stack_Cohda_PH_Persistency_DEF true

#define default_stack_Cohda_PH_PositionLostAction_PARAM "Cohda_PH.PositionLostAction"
#define default_stack_Cohda_PH_PositionLostAction_DEF true
#define default_stack_Cohda_PH_PositionLostAction_None ((bool)0)
#define default_stack_Cohda_PH_PositionLostAction_ResetPH ((bool)1)

#define default_stack_Cohda_PH_DebugLevel_PARAM "Cohda_PH.DebugLevel"
#define default_stack_Cohda_PH_DebugLevel_MIN -1
#define default_stack_Cohda_PH_DebugLevel_DEF -1
#define default_stack_Cohda_PH_DebugLevel_MAX 255


#define default_stack_Cohda_PH_lph_api_DebugLevel_PARAM "Cohda_PH.lph_api.DebugLevel"
#define default_stack_Cohda_PH_lph_api_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_api_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_api_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_api
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_api;

#define default_stack_Cohda_PH_lph_api_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_api_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_circular_buffer_DebugLevel_PARAM "Cohda_PH.lph_circular_buffer.DebugLevel"
#define default_stack_Cohda_PH_lph_circular_buffer_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_circular_buffer_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_circular_buffer_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_circular_buffer
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_circular_buffer;

#define default_stack_Cohda_PH_lph_circular_buffer_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_circular_buffer_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_concise_algr_DebugLevel_PARAM "Cohda_PH.lph_concise_algr.DebugLevel"
#define default_stack_Cohda_PH_lph_concise_algr_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_concise_algr_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_concise_algr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_concise_algr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_concise_algr;

#define default_stack_Cohda_PH_lph_concise_algr_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_concise_algr_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_haversine_DebugLevel_PARAM "Cohda_PH.lph_haversine.DebugLevel"
#define default_stack_Cohda_PH_lph_haversine_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_haversine_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_haversine_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_haversine
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_haversine;

#define default_stack_Cohda_PH_lph_haversine_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_haversine_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_iir_DebugLevel_PARAM "Cohda_PH.lph_iir.DebugLevel"
#define default_stack_Cohda_PH_lph_iir_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_iir_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_iir_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_iir
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_iir;

#define default_stack_Cohda_PH_lph_iir_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_iir_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_kalman_DebugLevel_PARAM "Cohda_PH.lph_kalman.DebugLevel"
#define default_stack_Cohda_PH_lph_kalman_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_kalman_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_kalman_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_kalman
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_kalman;

#define default_stack_Cohda_PH_lph_kalman_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_kalman_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_leap_DebugLevel_PARAM "Cohda_PH.lph_leap.DebugLevel"
#define default_stack_Cohda_PH_lph_leap_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_leap_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_leap_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_leap
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_leap;

#define default_stack_Cohda_PH_lph_leap_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_leap_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_lib_DebugLevel_PARAM "Cohda_PH.lph_lib.DebugLevel"
#define default_stack_Cohda_PH_lph_lib_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_lib_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_lib_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_lib
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_lib;

#define default_stack_Cohda_PH_lph_lib_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_lib_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_ph_DebugLevel_PARAM "Cohda_PH.lph_ph.DebugLevel"
#define default_stack_Cohda_PH_lph_ph_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_ph_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_ph_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_ph
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_ph;

#define default_stack_Cohda_PH_lph_ph_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_ph_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_pos_DebugLevel_PARAM "Cohda_PH.lph_pos.DebugLevel"
#define default_stack_Cohda_PH_lph_pos_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_pos_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_pos_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_pos
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_pos;

#define default_stack_Cohda_PH_lph_pos_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_pos_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_pos_api_DebugLevel_PARAM "Cohda_PH.lph_pos_api.DebugLevel"
#define default_stack_Cohda_PH_lph_pos_api_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_pos_api_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_pos_api_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_pos_api
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_pos_api;

#define default_stack_Cohda_PH_lph_pos_api_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_pos_api_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_poshandler_DebugLevel_PARAM "Cohda_PH.lph_poshandler.DebugLevel"
#define default_stack_Cohda_PH_lph_poshandler_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_poshandler_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_poshandler_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_poshandler
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_poshandler;

#define default_stack_Cohda_PH_lph_poshandler_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_poshandler_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_tai_DebugLevel_PARAM "Cohda_PH.lph_tai.DebugLevel"
#define default_stack_Cohda_PH_lph_tai_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_tai_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_tai_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_tai
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_tai;

#define default_stack_Cohda_PH_lph_tai_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_tai_NUM_FLD (1)


#define default_stack_Cohda_PH_lph_thr_DebugLevel_PARAM "Cohda_PH.lph_thr.DebugLevel"
#define default_stack_Cohda_PH_lph_thr_DebugLevel_MIN -1
#define default_stack_Cohda_PH_lph_thr_DebugLevel_DEF -1
#define default_stack_Cohda_PH_lph_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_PH_lph_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_PH_lph_thr;

#define default_stack_Cohda_PH_lph_thr_NUM_SUB (0)
#define default_stack_Cohda_PH_lph_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_PH
{
  tdefault_stack_Cohda_PH_lph_api lph_api;

  tdefault_stack_Cohda_PH_lph_circular_buffer lph_circular_buffer;

  tdefault_stack_Cohda_PH_lph_concise_algr lph_concise_algr;

  tdefault_stack_Cohda_PH_lph_haversine lph_haversine;

  tdefault_stack_Cohda_PH_lph_iir lph_iir;

  tdefault_stack_Cohda_PH_lph_kalman lph_kalman;

  tdefault_stack_Cohda_PH_lph_leap lph_leap;

  tdefault_stack_Cohda_PH_lph_lib lph_lib;

  tdefault_stack_Cohda_PH_lph_ph lph_ph;

  tdefault_stack_Cohda_PH_lph_pos lph_pos;

  tdefault_stack_Cohda_PH_lph_pos_api lph_pos_api;

  tdefault_stack_Cohda_PH_lph_poshandler lph_poshandler;

  tdefault_stack_Cohda_PH_lph_tai lph_tai;

  tdefault_stack_Cohda_PH_lph_thr lph_thr;

  /**
   * Method default is 3, min/max 1/3
   * Path History Method as in J2945/1 2016
   */
  int32_t Method;

  /**
   * Distance_m default is 200, min/max 0/5000
   * 6.3.6.16 vMinPHistDistance 200 meters
   * Distance, in meters, for PH concise representation
   */
  int32_t Distance_m;

  /**
   * ChordLength_m default is 210.0, min/max 0.0/500.0
   * 6.3.6.16 vMaxPHistDistance 210 meters
   * It should be no more than vMaxPHistDistance. When the vehicle drives on a
   * straight path, a new PH point shall be added when HV is vMaxPHistDistance
   * away from the Starting Point (aka the last PH point)
   * Maximum distance, in meters, after which a PH point is added
   */
  float ChordLength_m;

  /**
   * AllowableError_m default is 1.0, min/max 0.0/1.0
   * 6.3.6.16 vPathPerpendicularDist 1 meter
   * Allowable error, in meters, for selecting concise points
   */
  float AllowableError_m;

  /**
   * MaxPoints default is 15, min/max 0/40
   * 6.3.6.16 vMaxPHistPoints 15
   * N.B., NA stack wants 15 to meet the requirement in J2945_1 2016, but EU stack
   * may want a different default value - 23.
   * Maximum number of PH points
   */
  int32_t MaxPoints;

  /**
   * SmallDeltaPhi_r default is 0.02, min/max 0.0/1.0
   * 6.3.6.17 vPPredRadiusError 2%                   2, 3
   * Smallest delta-Phi, in radians
   */
  float SmallDeltaPhi_r;

  /**
   * MaxEstimatedRadius default is 0x7ffffful, min/max 0x0ul/0xfffffful
   * Limit for radius value, in meters
   */
  uint32_t MaxEstimatedRadius;

  /**
   * MaxNumIntermediatePoints default is 60, min/max 1/100
   * Max number of intermediate points in Path History Method 3
   */
  int32_t MaxNumIntermediatePoints;

  /**
   * DebugLevel default is -1, min/max -1/255
   * fine-grained debug for PH
   */
  int32_t DebugLevel;

  /**
   * Persistency default is true
   *6.3.7.2 Path History
   * Enables / Disables persistently storing the PH at shutdown
   *   and using on startup
   *   0 = False
   *   1 = True
   */
  bool Persistency;

  /**
   * PositionLostAction default is true
   * PH management at position lost
   * Configures action on Path History data on position lost
   * -    0 = None
   * -    1 = ResetPH
   */
  bool PositionLostAction;
} tdefault_stack_Cohda_PH;

#define default_stack_Cohda_PH_NUM_SUB (14)
#define default_stack_Cohda_PH_NUM_FLD (11)


#define default_stack_J2945CC_DebugLevel_PARAM "J2945CC.DebugLevel"
#define default_stack_J2945CC_DebugLevel_MIN -1
#define default_stack_J2945CC_DebugLevel_DEF -1
#define default_stack_J2945CC_DebugLevel_MAX 255

typedef struct default_stack_J2945CC
{
  /**
   * DebugLevel default is -1, min/max -1/255
   ******************************************************************************
   **         Core J2945/1 2016 Congestion Control (1609 Only)
   ******************************************************************************
   *## J2945CC tuneable parameters
   * if != -1, override debug level for J2945CC module only
   */
  int32_t DebugLevel;
} tdefault_stack_J2945CC;

#define default_stack_J2945CC_NUM_SUB (0)
#define default_stack_J2945CC_NUM_FLD (1)


#define default_stack_SAEC_Security_PARAM "SAEC.Security"
#define default_stack_SAEC_Security_DEF false

#define default_stack_SAEC_Security_CMH_ID_PARAM "SAEC.Security_CMH_ID"
#define default_stack_SAEC_Security_CMH_ID_MIN 0x0ul
#define default_stack_SAEC_Security_CMH_ID_DEF 0x2ul
#define default_stack_SAEC_Security_CMH_ID_MAX 0xfffffffful

#define default_stack_SAEC_Security_Acceptable_Past_Time_PARAM "SAEC.Security_Acceptable_Past_Time"
#define default_stack_SAEC_Security_Acceptable_Past_Time_MIN 0
#define default_stack_SAEC_Security_Acceptable_Past_Time_DEF 30
#define default_stack_SAEC_Security_Acceptable_Past_Time_MAX 65535

#define default_stack_SAEC_Security_Acceptable_Future_Time_PARAM "SAEC.Security_Acceptable_Future_Time"
#define default_stack_SAEC_Security_Acceptable_Future_Time_MIN 0
#define default_stack_SAEC_Security_Acceptable_Future_Time_DEF 30
#define default_stack_SAEC_Security_Acceptable_Future_Time_MAX 65535

#define default_stack_SAEC_Security_SendUnsecuredHeader_PARAM "SAEC.Security_SendUnsecuredHeader"
#define default_stack_SAEC_Security_SendUnsecuredHeader_DEF false

#define default_stack_SAEC_Security_Certificate_Interval_PARAM "SAEC.Security_Certificate_Interval"
#define default_stack_SAEC_Security_Certificate_Interval_MIN 0
#define default_stack_SAEC_Security_Certificate_Interval_DEF 450
#define default_stack_SAEC_Security_Certificate_Interval_MAX 65535

#define default_stack_SAEC_Security_IdChangeDistance_m_PARAM "SAEC.Security_IdChangeDistance_m"
#define default_stack_SAEC_Security_IdChangeDistance_m_MIN 0
#define default_stack_SAEC_Security_IdChangeDistance_m_DEF 2000
#define default_stack_SAEC_Security_IdChangeDistance_m_MAX 65535

#define default_stack_SAEC_Security_IdChangeInterval_s_PARAM "SAEC.Security_IdChangeInterval_s"
#define default_stack_SAEC_Security_IdChangeInterval_s_MIN 0
#define default_stack_SAEC_Security_IdChangeInterval_s_DEF 300
#define default_stack_SAEC_Security_IdChangeInterval_s_MAX 65535

#define default_stack_SAEC_TCIA_Enabled_PARAM "SAEC.TCIA_Enabled"
#define default_stack_SAEC_TCIA_Enabled_DEF false

#define default_stack_SAEC_DSMP_ChannelNumber_PARAM "SAEC.DSMP_ChannelNumber"
#define default_stack_SAEC_DSMP_ChannelNumber_MIN 150
#define default_stack_SAEC_DSMP_ChannelNumber_DEF 182
#define default_stack_SAEC_DSMP_ChannelNumber_MAX 184

#define default_stack_SAEC_DSMP_ChannelWidth_mhz_PARAM "SAEC.DSMP_ChannelWidth_mhz"
#define default_stack_SAEC_DSMP_ChannelWidth_mhz_MIN 0
#define default_stack_SAEC_DSMP_ChannelWidth_mhz_DEF 10
#define default_stack_SAEC_DSMP_ChannelWidth_mhz_MAX 65535

#define default_stack_SAEC_DSMP_TxPower_dBm_PARAM "SAEC.DSMP_TxPower_dBm"
#define default_stack_SAEC_DSMP_TxPower_dBm_MIN 0
#define default_stack_SAEC_DSMP_TxPower_dBm_DEF 24
#define default_stack_SAEC_DSMP_TxPower_dBm_MAX 65535

#define default_stack_SAEC_DSMP_LLIF_PARAM "SAEC.DSMP_LLIF"
#define default_stack_SAEC_DSMP_LLIF_MIN 0
#define default_stack_SAEC_DSMP_LLIF_DEF 1
#define default_stack_SAEC_DSMP_LLIF_MAX 5
#define default_stack_SAEC_DSMP_LLIF_ETH (1)
#define default_stack_SAEC_DSMP_LLIF_LLC_DSRC (2)
#define default_stack_SAEC_DSMP_LLIF_QTI_CV2X (4)
#define default_stack_SAEC_DSMP_LLIF_ATK_CV2X (5)

#define default_stack_SAEC_MACAddr_PARAM "SAEC.MACAddr"
#define default_stack_SAEC_MACAddr_DEF "04:e5:48:00:00:01"

#define default_stack_SAEC_EthInterface_PARAM "SAEC.EthInterface"
#define default_stack_SAEC_EthInterface_DEF "eth0"

#define default_stack_SAEC_EthLinkName_PARAM "SAEC.EthLinkName"
#define default_stack_SAEC_EthLinkName_DEF "saec0"

#define default_stack_SAEC_EtherType_PARAM "SAEC.EtherType"
#define default_stack_SAEC_EtherType_MIN 0x0ul
#define default_stack_SAEC_EtherType_DEF 0x8444ul
#define default_stack_SAEC_EtherType_MAX 0xfffful

#define default_stack_SAEC_DSMP_MaxPduSize_PARAM "SAEC.DSMP_MaxPduSize"
#define default_stack_SAEC_DSMP_MaxPduSize_MIN 0
#define default_stack_SAEC_DSMP_MaxPduSize_DEF 1398
#define default_stack_SAEC_DSMP_MaxPduSize_MAX 65535

#define default_stack_SAEC_BSM_Enabled_PARAM "SAEC.BSM_Enabled"
#define default_stack_SAEC_BSM_Enabled_DEF true

#define default_stack_SAEC_BSM_BasicVehicleClass_PARAM "SAEC.BSM_BasicVehicleClass"
#define default_stack_SAEC_BSM_BasicVehicleClass_MIN 0
#define default_stack_SAEC_BSM_BasicVehicleClass_DEF 10
#define default_stack_SAEC_BSM_BasicVehicleClass_MAX 255

#define default_stack_SAEC_BSM_Interval_PARAM "SAEC.BSM_Interval"
#define default_stack_SAEC_BSM_Interval_MIN 50
#define default_stack_SAEC_BSM_Interval_DEF 100
#define default_stack_SAEC_BSM_Interval_MAX 1000

#define default_stack_SAEC_BSM_NoCriticalEvent_AID_PARAM "SAEC.BSM_NoCriticalEvent_AID"
#define default_stack_SAEC_BSM_NoCriticalEvent_AID_MIN 0
#define default_stack_SAEC_BSM_NoCriticalEvent_AID_DEF 111
#define default_stack_SAEC_BSM_NoCriticalEvent_AID_MAX 65536

#define default_stack_SAEC_BSM_CriticalEvent_AID_PARAM "SAEC.BSM_CriticalEvent_AID"
#define default_stack_SAEC_BSM_CriticalEvent_AID_MIN 0
#define default_stack_SAEC_BSM_CriticalEvent_AID_DEF 112
#define default_stack_SAEC_BSM_CriticalEvent_AID_MAX 65536

#define default_stack_SAEC_BSM_EmergencyVehicle_NoCriticalEvent_AID_PARAM "SAEC.BSM_EmergencyVehicle_NoCriticalEvent_AID"
#define default_stack_SAEC_BSM_EmergencyVehicle_NoCriticalEvent_AID_MIN 0
#define default_stack_SAEC_BSM_EmergencyVehicle_NoCriticalEvent_AID_DEF 113
#define default_stack_SAEC_BSM_EmergencyVehicle_NoCriticalEvent_AID_MAX 65536

#define default_stack_SAEC_BSM_EmergencyVehicle_CriticalEvent_AID_PARAM "SAEC.BSM_EmergencyVehicle_CriticalEvent_AID"
#define default_stack_SAEC_BSM_EmergencyVehicle_CriticalEvent_AID_MIN 0
#define default_stack_SAEC_BSM_EmergencyVehicle_CriticalEvent_AID_DEF 114
#define default_stack_SAEC_BSM_EmergencyVehicle_CriticalEvent_AID_MAX 65536

#define default_stack_SAEC_MAP_AID_PARAM "SAEC.MAP_AID"
#define default_stack_SAEC_MAP_AID_MIN 0
#define default_stack_SAEC_MAP_AID_DEF 3618
#define default_stack_SAEC_MAP_AID_MAX 65536

#define default_stack_SAEC_SPAT_AID_PARAM "SAEC.SPAT_AID"
#define default_stack_SAEC_SPAT_AID_MIN 0
#define default_stack_SAEC_SPAT_AID_DEF 3619
#define default_stack_SAEC_SPAT_AID_MAX 65536

#define default_stack_SAEC_RSI_Static_AID_PARAM "SAEC.RSI_Static_AID"
#define default_stack_SAEC_RSI_Static_AID_MIN 0
#define default_stack_SAEC_RSI_Static_AID_DEF 3620
#define default_stack_SAEC_RSI_Static_AID_MAX 65536

#define default_stack_SAEC_RSI_SemiDynamic_AID_PARAM "SAEC.RSI_SemiDynamic_AID"
#define default_stack_SAEC_RSI_SemiDynamic_AID_MIN 0
#define default_stack_SAEC_RSI_SemiDynamic_AID_DEF 3621
#define default_stack_SAEC_RSI_SemiDynamic_AID_MAX 65536

#define default_stack_SAEC_RSI_Dynamic_AID_PARAM "SAEC.RSI_Dynamic_AID"
#define default_stack_SAEC_RSI_Dynamic_AID_MIN 0
#define default_stack_SAEC_RSI_Dynamic_AID_DEF 3622
#define default_stack_SAEC_RSI_Dynamic_AID_MAX 65536

#define default_stack_SAEC_RSM_AID_PARAM "SAEC.RSM_AID"
#define default_stack_SAEC_RSM_AID_MIN 0
#define default_stack_SAEC_RSM_AID_DEF 3623
#define default_stack_SAEC_RSM_AID_MAX 65536

#define default_stack_SAEC_FacilitiesStationID_PARAM "SAEC.FacilitiesStationID"
#define default_stack_SAEC_FacilitiesStationID_MIN 0x0ul
#define default_stack_SAEC_FacilitiesStationID_DEF 0xfffffffful
#define default_stack_SAEC_FacilitiesStationID_MAX 0xfffffffful

#define default_stack_SAEC_LocalAddr_PARAM "SAEC.LocalAddr"
#define default_stack_SAEC_LocalAddr_DEF "00:00:00:00:00:01"

#define default_stack_SAEC_LocalAddrConfMethod_PARAM "SAEC.LocalAddrConfMethod"
#define default_stack_SAEC_LocalAddrConfMethod_MIN 0
#define default_stack_SAEC_LocalAddrConfMethod_DEF 2
#define default_stack_SAEC_LocalAddrConfMethod_MAX 2
#define default_stack_SAEC_LocalAddrConfMethod_auto (0)
#define default_stack_SAEC_LocalAddrConfMethod_managed (1)
#define default_stack_SAEC_LocalAddrConfMethod_anonymous (2)

#define default_stack_SAEC_IMT2020_Enabled_PARAM "SAEC.IMT2020_Enabled"
#define default_stack_SAEC_IMT2020_Enabled_DEF false

#define default_stack_SAEC_IMT2020_StationID_PARAM "SAEC.IMT2020_StationID"
#define default_stack_SAEC_IMT2020_StationID_DEF "NLLST426"

typedef struct default_stack_SAEC
{
  /**
   * MACAddr default is "04:e5:48:00:00:01"
   * Source MAC Address. e.g. 04:e5:48:00:00:00
   */
  const char * MACAddr;

  /**
   * EthInterface default is "eth0"
   * Ethernet interface to use (when ETH LLIF used)
   */
  const char * EthInterface;

  /**
   * EthLinkName default is "saec0"
   * Ethernet ip link name to use (when ETH LLIF used)
   */
  const char * EthLinkName;

  /**
   * LocalAddr default is "00:00:00:00:00:01"
   * Local Address (used when LocalAddrConfMethod is auto)
   */
  const char * LocalAddr;

  /**
   * IMT2020_StationID default is "NLLST426"
   * Assigned ID NLLST426-NLLST430
   */
  const char * IMT2020_StationID;

  /**
   * Security_CMH_ID default is 0x2ul, min/max 0x0ul/0xfffffffful
   * Security CmhId
   */
  uint32_t Security_CMH_ID;

  /**
   * Security_Acceptable_Past_Time default is 30, min/max 0/65535
   * Acceptable expiry time in seconds in the past
   */
  int32_t Security_Acceptable_Past_Time;

  /**
   * Security_Acceptable_Future_Time default is 30, min/max 0/65535
   * Acceptable expiry time in seconds in the future
   */
  int32_t Security_Acceptable_Future_Time;

  /**
   * Security_Certificate_Interval default is 450, min/max 0/65535
   * Interval at which full certificates are included in ms
   */
  int32_t Security_Certificate_Interval;

  /**
   * Security_IdChangeDistance_m default is 2000, min/max 0/65535
   * Minimum Travel Distance before Id change unless requested by user
   */
  int32_t Security_IdChangeDistance_m;

  /**
   * Security_IdChangeInterval_s default is 300, min/max 0/65535
   * Maximum Travel Time before Id change unless requested by user
   */
  int32_t Security_IdChangeInterval_s;

  /**
   * DSMP_ChannelNumber default is 182, min/max 150/184
   * Channel Number
   */
  int32_t DSMP_ChannelNumber;

  /**
   * DSMP_ChannelWidth_mhz default is 10, min/max 0/65535
   * Channel bandwidth
   */
  int32_t DSMP_ChannelWidth_mhz;

  /**
   * DSMP_TxPower_dBm default is 24, min/max 0/65535
   * Channel tx power
   */
  int32_t DSMP_TxPower_dBm;

  /**
   * DSMP_LLIF default is 1, min/max 0/5
   * DSMP Lower-layer interface
   *  0 = None (interface inactive)
   * -  1 = ETH
   * -  2 = LLC_DSRC (for internal test purposes)
   * -  4 = QTI_CV2X
   * -  5 = ATK_CV2X
   */
  int32_t DSMP_LLIF;

  /**
   * EtherType default is 0x8444ul, min/max 0x0ul/0xfffful
   * Ethernet ethertype to use (when ETH|LLC LLIF used)
   */
  uint32_t EtherType;

  /**
   * DSMP_MaxPduSize default is 1398, min/max 0/65535
   * Maximum size of DSMP PDU in bytes
   * Note: Max size limited by implementation
   */
  int32_t DSMP_MaxPduSize;

  /**
   * BSM_BasicVehicleClass default is 10, min/max 0/255
   * Basic Vehicle Class
   */
  int32_t BSM_BasicVehicleClass;

  /**
   * BSM_Interval default is 100, min/max 50/1000
   * millisec
   */
  int32_t BSM_Interval;

  /**
   * BSM_NoCriticalEvent_AID default is 111, min/max 0/65536
   * AID value for BSM without critical events
   */
  int32_t BSM_NoCriticalEvent_AID;

  /**
   * BSM_CriticalEvent_AID default is 112, min/max 0/65536
   * AID value for BSM with critical events
   */
  int32_t BSM_CriticalEvent_AID;

  /**
   * BSM_EmergencyVehicle_NoCriticalEvent_AID default is 113, min/max 0/65536
   * AID value for Emergency Vehicle without critical events
   */
  int32_t BSM_EmergencyVehicle_NoCriticalEvent_AID;

  /**
   * BSM_EmergencyVehicle_CriticalEvent_AID default is 114, min/max 0/65536
   * AID value for Emergency Vehicle with critical events
   */
  int32_t BSM_EmergencyVehicle_CriticalEvent_AID;

  /**
   * MAP_AID default is 3618, min/max 0/65536
   * AID value
   */
  int32_t MAP_AID;

  /**
   * SPAT_AID default is 3619, min/max 0/65536
   * AID value
   */
  int32_t SPAT_AID;

  /**
   * RSI_Static_AID default is 3620, min/max 0/65536
   * AID value
   */
  int32_t RSI_Static_AID;

  /**
   * RSI_SemiDynamic_AID default is 3621, min/max 0/65536
   * AID value
   */
  int32_t RSI_SemiDynamic_AID;

  /**
   * RSI_Dynamic_AID default is 3622, min/max 0/65536
   * AID value
   */
  int32_t RSI_Dynamic_AID;

  /**
   * RSM_AID default is 3623, min/max 0/65536
   * AID value
   */
  int32_t RSM_AID;

  /**
   * FacilitiesStationID default is 0xfffffffful, min/max 0x0ul/0xfffffffful
   * Local FAC Station ID selection
   * AUTO (0xXXXXXXXX): Determine own ID
   *  > Station ID is defined value in FacilitiesStationID
   *  > Note: recommend not using Station ID = 0
   * TEST (0xfffffffd): Conformance testing purpose
   *  > Station ID based on IPv4 address of Ethernet interface (useful for identification on a network)
   * MANAGED (0xfffffffe, default): MGMT provides ID
   *  > Station ID is from local (WLAN) MAC
   * ANONYMOUS (0xffffffff): Identity service interface provides ID
   *  > Station ID set from value from identity service (if SAEC.Security is active)
   *  > Station ID otherwise is random
   */
  uint32_t FacilitiesStationID;

  /**
   * LocalAddrConfMethod default is 2, min/max 0/2
   * Local address configuration method
   * AUTO (0): Determine own ID (cannot change)
   *  > ADDR is from SAEC.LocalAddr
   *  > ADDR is random if LocalAddr is 0xFFFFFFFFFFFF
   * MANAGED (1, default): MGMT provides ID
   *  > ADDR is from local (WLAN) MAC
   * ANONYMOUS (2): Identity service interface provides ID
   *  > ADDR randomised when identity is changed (if SAEC.Security is active)
   *  > ADDR otherwise is randomised once on start up
   * -  0 = auto
   * -  1 = managed
   * -  2 = anonymous
   */
  int32_t LocalAddrConfMethod;

  /**
   * Security default is false
   ******************************************************************************
   **         SAE China Stack Software
   ******************************************************************************
   * Security Enable
   */
  bool Security;

  /**
   * Security_SendUnsecuredHeader default is false
   * Enables / Disables transmitting with V2XSec Header when security is off
   *   0 = False
   *   1 = True
   */
  bool Security_SendUnsecuredHeader;

  /**
   * TCIA_Enabled default is false
   * Conformance test enable
   */
  bool TCIA_Enabled;

  /**
   * BSM_Enabled default is true
   * BSM Enable
   * Enables / Disables support for transmitting a BSM
   *   0 = False
   *   1 = True
   */
  bool BSM_Enabled;

  /**
   * IMT2020_Enabled default is false
   * IMT2020 test enable
   */
  bool IMT2020_Enabled;
} tdefault_stack_SAEC;

#define default_stack_SAEC_NUM_SUB (0)
#define default_stack_SAEC_NUM_FLD (36)


#define default_stack_SAEC_TRX_Enabled_PARAM "SAEC_TRX.Enabled"
#define default_stack_SAEC_TRX_Enabled_DEF true

#define default_stack_SAEC_TRX_PeriodicExtrapolatePosition_PARAM "SAEC_TRX.PeriodicExtrapolatePosition"
#define default_stack_SAEC_TRX_PeriodicExtrapolatePosition_DEF true

#define default_stack_SAEC_TRX_PostUnknownToExt_PARAM "SAEC_TRX.PostUnknownToExt"
#define default_stack_SAEC_TRX_PostUnknownToExt_DEF false

typedef struct default_stack_SAEC_TRX
{
  /**
   * Enabled default is true
   * Enables / Disables support Facilities BSM/etc as a whole
   */
  bool Enabled;

  /**
   * PeriodicExtrapolatePosition default is true
   * Enables /Disables support for position extrapolation in TRX module
   * 0 = disabled, 1 = enabled
   */
  bool PeriodicExtrapolatePosition;

  /**
   * PostUnknownToExt default is false
   * Forward unknown messages to Ext
   * 0 = disabled, 1 = enabled
   */
  bool PostUnknownToExt;
} tdefault_stack_SAEC_TRX;

#define default_stack_SAEC_TRX_NUM_SUB (0)
#define default_stack_SAEC_TRX_NUM_FLD (3)


#define default_stack_Cohda_IVI_Enable_PARAM "Cohda_IVI.Enable"
#define default_stack_Cohda_IVI_Enable_DEF true

typedef struct default_stack_Cohda_IVI
{
  /**
   * Enable default is true
   ******************************************************************************
   **         IVI (In Vehicle Information)
   ******************************************************************************
   * Enables / Disables IVI
   */
  bool Enable;
} tdefault_stack_Cohda_IVI;

#define default_stack_Cohda_IVI_NUM_SUB (0)
#define default_stack_Cohda_IVI_NUM_FLD (1)


#define default_stack_Cohda_TIM_Enable_PARAM "Cohda_TIM.Enable"
#define default_stack_Cohda_TIM_Enable_DEF true

#define default_stack_Cohda_TIM_IgnoreRange_m_PARAM "Cohda_TIM.IgnoreRange_m"
#define default_stack_Cohda_TIM_IgnoreRange_m_MIN 0
#define default_stack_Cohda_TIM_IgnoreRange_m_DEF 1000
#define default_stack_Cohda_TIM_IgnoreRange_m_MAX 99999

#define default_stack_Cohda_TIM_LocationTolerance_m_PARAM "Cohda_TIM.LocationTolerance_m"
#define default_stack_Cohda_TIM_LocationTolerance_m_MIN 0.0
#define default_stack_Cohda_TIM_LocationTolerance_m_DEF 1.5
#define default_stack_Cohda_TIM_LocationTolerance_m_MAX 99.9

#define default_stack_Cohda_TIM_DefaultLaneWidth_m_PARAM "Cohda_TIM.DefaultLaneWidth_m"
#define default_stack_Cohda_TIM_DefaultLaneWidth_m_MIN 0.1
#define default_stack_Cohda_TIM_DefaultLaneWidth_m_DEF 8.0
#define default_stack_Cohda_TIM_DefaultLaneWidth_m_MAX 99.9

typedef struct default_stack_Cohda_TIM
{
  /**
   * IgnoreRange_m default is 1000, min/max 0/99999
   * TIMs further away than this ignored
   */
  int32_t IgnoreRange_m;

  /**
   * LocationTolerance_m default is 1.5, min/max 0.0/99.9
   * +/- (additional allowance)
   */
  float LocationTolerance_m;

  /**
   * DefaultLaneWidth_m default is 8.0, min/max 0.1/99.9
   * Used if not defined in the TIM
   */
  float DefaultLaneWidth_m;

  /**
   * Enable default is true
   ******************************************************************************
   **         TIM (Traveler Information)
   ******************************************************************************
   * Enables / Disables TIM
   */
  bool Enable;
} tdefault_stack_Cohda_TIM;

#define default_stack_Cohda_TIM_NUM_SUB (0)
#define default_stack_Cohda_TIM_NUM_FLD (4)


#define default_stack_Cohda_RSICN_Enable_PARAM "Cohda_RSICN.Enable"
#define default_stack_Cohda_RSICN_Enable_DEF true

#define default_stack_Cohda_RSICN_IgnoreRange_m_PARAM "Cohda_RSICN.IgnoreRange_m"
#define default_stack_Cohda_RSICN_IgnoreRange_m_MIN 0
#define default_stack_Cohda_RSICN_IgnoreRange_m_DEF 1000
#define default_stack_Cohda_RSICN_IgnoreRange_m_MAX 99999

#define default_stack_Cohda_RSICN_LocationTolerance_m_PARAM "Cohda_RSICN.LocationTolerance_m"
#define default_stack_Cohda_RSICN_LocationTolerance_m_MIN 0.0
#define default_stack_Cohda_RSICN_LocationTolerance_m_DEF 1.5
#define default_stack_Cohda_RSICN_LocationTolerance_m_MAX 99.9

#define default_stack_Cohda_RSICN_DefaultRadius_m_PARAM "Cohda_RSICN.DefaultRadius_m"
#define default_stack_Cohda_RSICN_DefaultRadius_m_MIN 0.1
#define default_stack_Cohda_RSICN_DefaultRadius_m_DEF 8.0
#define default_stack_Cohda_RSICN_DefaultRadius_m_MAX 99.9

typedef struct default_stack_Cohda_RSICN
{
  /**
   * IgnoreRange_m default is 1000, min/max 0/99999
   * RSICNs further away than this ignored
   */
  int32_t IgnoreRange_m;

  /**
   * LocationTolerance_m default is 1.5, min/max 0.0/99.9
   * +/- (additional allowance)
   */
  float LocationTolerance_m;

  /**
   * DefaultRadius_m default is 8.0, min/max 0.1/99.9
   * Used if not defined in the RSICN
   */
  float DefaultRadius_m;

  /**
   * Enable default is true
   ******************************************************************************
   **         RSICN (Road Side Information)
   ******************************************************************************
   * Enables / Disables RSICN
   */
  bool Enable;
} tdefault_stack_Cohda_RSICN;

#define default_stack_Cohda_RSICN_NUM_SUB (0)
#define default_stack_Cohda_RSICN_NUM_FLD (4)


#define default_stack_Cohda_PC5_SPS_0_Interval_ms_PARAM "Cohda_PC5.SPS_0_Interval_ms"
#define default_stack_Cohda_PC5_SPS_0_Interval_ms_MIN 0
#define default_stack_Cohda_PC5_SPS_0_Interval_ms_DEF 100
#define default_stack_Cohda_PC5_SPS_0_Interval_ms_MAX 1000

#define default_stack_Cohda_PC5_SPS_0_Size_PARAM "Cohda_PC5.SPS_0_Size"
#define default_stack_Cohda_PC5_SPS_0_Size_MIN 0
#define default_stack_Cohda_PC5_SPS_0_Size_DEF 365
#define default_stack_Cohda_PC5_SPS_0_Size_MAX 65535

typedef struct default_stack_Cohda_PC5
{
  /**
   * SPS_0_Interval_ms default is 100, min/max 0/1000
   ***************************************************************************
   **                  PC5 (C-V2X) specifics                           *
   ***************************************************************************
   * Bandwidth-reserved periodicity interval in milliseconds
   */
  int32_t SPS_0_Interval_ms;

  /**
   * SPS_0_Size default is 365, min/max 0/65535
   * Number of bytes of Tx bandwidth that are sent every periodicity interval
   */
  int32_t SPS_0_Size;
} tdefault_stack_Cohda_PC5;

#define default_stack_Cohda_PC5_NUM_SUB (0)
#define default_stack_Cohda_PC5_NUM_FLD (2)


#define default_stack_Cohda_QTI_Interface_PARAM "Cohda_QTI.Interface"
#define default_stack_Cohda_QTI_Interface_DEF "rmnet_data1"

#define default_stack_Cohda_QTI_DestinationAddr_PARAM "Cohda_QTI.DestinationAddr"
#define default_stack_Cohda_QTI_DestinationAddr_DEF "ff02::1"

#define default_stack_Cohda_QTI_SPSPort_0_V2XID_PARAM "Cohda_QTI.SPSPort_0_V2XID"
#define default_stack_Cohda_QTI_SPSPort_0_V2XID_MIN 0
#define default_stack_Cohda_QTI_SPSPort_0_V2XID_DEF 32
#define default_stack_Cohda_QTI_SPSPort_0_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_0_V2XID_PARAM "Cohda_QTI.EventPort_0_V2XID"
#define default_stack_Cohda_QTI_EventPort_0_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_0_V2XID_DEF 32770
#define default_stack_Cohda_QTI_EventPort_0_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_1_V2XID_PARAM "Cohda_QTI.EventPort_1_V2XID"
#define default_stack_Cohda_QTI_EventPort_1_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_1_V2XID_DEF 32771
#define default_stack_Cohda_QTI_EventPort_1_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_2_V2XID_PARAM "Cohda_QTI.EventPort_2_V2XID"
#define default_stack_Cohda_QTI_EventPort_2_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_2_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_2_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_3_V2XID_PARAM "Cohda_QTI.EventPort_3_V2XID"
#define default_stack_Cohda_QTI_EventPort_3_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_3_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_3_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_4_V2XID_PARAM "Cohda_QTI.EventPort_4_V2XID"
#define default_stack_Cohda_QTI_EventPort_4_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_4_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_4_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_5_V2XID_PARAM "Cohda_QTI.EventPort_5_V2XID"
#define default_stack_Cohda_QTI_EventPort_5_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_5_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_5_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_6_V2XID_PARAM "Cohda_QTI.EventPort_6_V2XID"
#define default_stack_Cohda_QTI_EventPort_6_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_6_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_6_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_7_V2XID_PARAM "Cohda_QTI.EventPort_7_V2XID"
#define default_stack_Cohda_QTI_EventPort_7_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_7_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_7_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_8_V2XID_PARAM "Cohda_QTI.EventPort_8_V2XID"
#define default_stack_Cohda_QTI_EventPort_8_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_8_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_8_V2XID_MAX 65535

#define default_stack_Cohda_QTI_EventPort_9_V2XID_PARAM "Cohda_QTI.EventPort_9_V2XID"
#define default_stack_Cohda_QTI_EventPort_9_V2XID_MIN 0
#define default_stack_Cohda_QTI_EventPort_9_V2XID_DEF 0
#define default_stack_Cohda_QTI_EventPort_9_V2XID_MAX 65535

typedef struct default_stack_Cohda_QTI
{
  /**
   * Interface default is "rmnet_data1"
   * Interface to use for QTI
   * rmnet_data1 for CV2X 9150 Dev Kit
   * enP2p1s0 for Snapdragon 820C board
   */
  const char * Interface;

  /**
   * DestinationAddr default is "ff02::1"
   * Destination IPV6 address (TESTING ONLY)
   * ff02::1 for CV2X 9150 Dev Kit
   * Use link-local for Snapdragon 820C board
   */
  const char * DestinationAddr;

  /**
   * SPSPort_0_V2XID default is 32, min/max 0/65535
   * V2XID associated with SPS port
   * SPS port will be used for regular priority BSM's
   * Set this to the BSM PSID (32) for 1609
   */
  int32_t SPSPort_0_V2XID;

  /**
   * EventPort_0_V2XID default is 32770, min/max 0/65535
   * V2XID for Event port 0 (PSID Port number of associated message type)
   */
  int32_t EventPort_0_V2XID;

  /**
   * EventPort_1_V2XID default is 32771, min/max 0/65535
   * V2XID for Event port 1 (PSID Port number of associated message type)
   */
  int32_t EventPort_1_V2XID;

  /**
   * EventPort_2_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 2 (PSID Port number of associated message type)
   */
  int32_t EventPort_2_V2XID;

  /**
   * EventPort_3_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 3 (PSID Port number of associated message type)
   */
  int32_t EventPort_3_V2XID;

  /**
   * EventPort_4_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 4 (PSID Port number of associated message type)
   */
  int32_t EventPort_4_V2XID;

  /**
   * EventPort_5_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 5 (PSID Port number of associated message type)
   */
  int32_t EventPort_5_V2XID;

  /**
   * EventPort_6_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 6 (PSID Port number of associated message type)
   */
  int32_t EventPort_6_V2XID;

  /**
   * EventPort_7_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 7 (PSID Port number of associated message type)
   */
  int32_t EventPort_7_V2XID;

  /**
   * EventPort_8_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 8 (PSID Port number of associated message type)
   */
  int32_t EventPort_8_V2XID;

  /**
   * EventPort_9_V2XID default is 0, min/max 0/65535
   * V2XID for Event port 9 (PSID Port number of associated message type)
   */
  int32_t EventPort_9_V2XID;
} tdefault_stack_Cohda_QTI;

#define default_stack_Cohda_QTI_NUM_SUB (0)
#define default_stack_Cohda_QTI_NUM_FLD (13)


#define default_stack_Cohda_VS_DebugLevel_PARAM "Cohda_VS.DebugLevel"
#define default_stack_Cohda_VS_DebugLevel_MIN -1
#define default_stack_Cohda_VS_DebugLevel_DEF -1
#define default_stack_Cohda_VS_DebugLevel_MAX 255

#define default_stack_Cohda_VS_MaxReaders_PARAM "Cohda_VS.MaxReaders"
#define default_stack_Cohda_VS_MaxReaders_MIN 1
#define default_stack_Cohda_VS_MaxReaders_DEF 12
#define default_stack_Cohda_VS_MaxReaders_MAX 99

#define default_stack_Cohda_VS_VehLength_PARAM "Cohda_VS.VehLength"
#define default_stack_Cohda_VS_VehLength_MIN 0
#define default_stack_Cohda_VS_VehLength_DEF 0
#define default_stack_Cohda_VS_VehLength_MAX 10220
#define default_stack_Cohda_VS_VehLength_cm (1)

#define default_stack_Cohda_VS_VehWidth_PARAM "Cohda_VS.VehWidth"
#define default_stack_Cohda_VS_VehWidth_MIN 0
#define default_stack_Cohda_VS_VehWidth_DEF 0
#define default_stack_Cohda_VS_VehWidth_MAX 1023
#define default_stack_Cohda_VS_VehWidth_cm (1)

#define default_stack_Cohda_VS_BmprHghtFnt_PARAM "Cohda_VS.BmprHghtFnt"
#define default_stack_Cohda_VS_BmprHghtFnt_MIN 0
#define default_stack_Cohda_VS_BmprHghtFnt_DEF 0
#define default_stack_Cohda_VS_BmprHghtFnt_MAX 127

#define default_stack_Cohda_VS_BmprHghtRear_PARAM "Cohda_VS.BmprHghtRear"
#define default_stack_Cohda_VS_BmprHghtRear_MIN 0
#define default_stack_Cohda_VS_BmprHghtRear_DEF 0
#define default_stack_Cohda_VS_BmprHghtRear_MAX 127

#define default_stack_Cohda_VS_VehHght_PARAM "Cohda_VS.VehHght"
#define default_stack_Cohda_VS_VehHght_MIN 0
#define default_stack_Cohda_VS_VehHght_DEF 0
#define default_stack_Cohda_VS_VehHght_MAX 127

#define default_stack_Cohda_VS_VehMass_PARAM "Cohda_VS.VehMass"
#define default_stack_Cohda_VS_VehMass_MIN 0
#define default_stack_Cohda_VS_VehMass_DEF 0
#define default_stack_Cohda_VS_VehMass_MAX 3401

#define default_stack_Cohda_VS_VehType_PARAM "Cohda_VS.VehType"
#define default_stack_Cohda_VS_VehType_MIN 0
#define default_stack_Cohda_VS_VehType_DEF 0
#define default_stack_Cohda_VS_VehType_MAX 255

#define default_stack_Cohda_VS_VehLayout_PARAM "Cohda_VS.VehLayout"
#define default_stack_Cohda_VS_VehLayout_MIN 0
#define default_stack_Cohda_VS_VehLayout_DEF 1
#define default_stack_Cohda_VS_VehLayout_MAX 4
#define default_stack_Cohda_VS_VehLayout_not_configured_ (0)
#define default_stack_Cohda_VS_VehLayout_2WD_Front_Driven_ (1)
#define default_stack_Cohda_VS_VehLayout_2WD_Rear_Driven_ (2)
#define default_stack_Cohda_VS_VehLayout_4WD_4_Wheel_Drive_ (3)
#define default_stack_Cohda_VS_VehLayout_AWD_All_Wheel_Drive (4)

#define default_stack_Cohda_VS_Transmission_PARAM "Cohda_VS.Transmission"
#define default_stack_Cohda_VS_Transmission_MIN 0
#define default_stack_Cohda_VS_Transmission_DEF 0
#define default_stack_Cohda_VS_Transmission_MAX 3
#define default_stack_Cohda_VS_Transmission_not_configured (0)
#define default_stack_Cohda_VS_Transmission_manual_transmission (1)
#define default_stack_Cohda_VS_Transmission_automatic_transmission (2)
#define default_stack_Cohda_VS_Transmission_continuously_variable (3)

#define default_stack_Cohda_VS_DrivingSide_PARAM "Cohda_VS.DrivingSide"
#define default_stack_Cohda_VS_DrivingSide_MIN 0
#define default_stack_Cohda_VS_DrivingSide_DEF 0
#define default_stack_Cohda_VS_DrivingSide_MAX 2
#define default_stack_Cohda_VS_DrivingSide_Dynamic_Unknown (0)
#define default_stack_Cohda_VS_DrivingSide_Always_Left (1)
#define default_stack_Cohda_VS_DrivingSide_Always_Right (2)

#define default_stack_Cohda_VS_HeightLonCarrLeft_cm_PARAM "Cohda_VS.HeightLonCarrLeft_cm"
#define default_stack_Cohda_VS_HeightLonCarrLeft_cm_MIN 1
#define default_stack_Cohda_VS_HeightLonCarrLeft_cm_DEF 100
#define default_stack_Cohda_VS_HeightLonCarrLeft_cm_MAX 100

#define default_stack_Cohda_VS_HeightLonCarrRight_cm_PARAM "Cohda_VS.HeightLonCarrRight_cm"
#define default_stack_Cohda_VS_HeightLonCarrRight_cm_MIN 1
#define default_stack_Cohda_VS_HeightLonCarrRight_cm_DEF 100
#define default_stack_Cohda_VS_HeightLonCarrRight_cm_MAX 100

#define default_stack_Cohda_VS_PosLonCarrLeft_cm_PARAM "Cohda_VS.PosLonCarrLeft_cm"
#define default_stack_Cohda_VS_PosLonCarrLeft_cm_MIN 1
#define default_stack_Cohda_VS_PosLonCarrLeft_cm_DEF 127
#define default_stack_Cohda_VS_PosLonCarrLeft_cm_MAX 127

#define default_stack_Cohda_VS_PosLonCarrRight_cm_PARAM "Cohda_VS.PosLonCarrRight_cm"
#define default_stack_Cohda_VS_PosLonCarrRight_cm_MIN 1
#define default_stack_Cohda_VS_PosLonCarrRight_cm_DEF 127
#define default_stack_Cohda_VS_PosLonCarrRight_cm_MAX 127

#define default_stack_Cohda_VS_PositionOfPillars_count_PARAM "Cohda_VS.PositionOfPillars_count"
#define default_stack_Cohda_VS_PositionOfPillars_count_MIN 1
#define default_stack_Cohda_VS_PositionOfPillars_count_DEF 3
#define default_stack_Cohda_VS_PositionOfPillars_count_MAX 4

#define default_stack_Cohda_VS_PositionOfPillarA_cm_PARAM "Cohda_VS.PositionOfPillarA_cm"
#define default_stack_Cohda_VS_PositionOfPillarA_cm_MIN 10
#define default_stack_Cohda_VS_PositionOfPillarA_cm_DEF 300
#define default_stack_Cohda_VS_PositionOfPillarA_cm_MAX 300

#define default_stack_Cohda_VS_PositionOfPillarB_cm_PARAM "Cohda_VS.PositionOfPillarB_cm"
#define default_stack_Cohda_VS_PositionOfPillarB_cm_MIN 10
#define default_stack_Cohda_VS_PositionOfPillarB_cm_DEF 300
#define default_stack_Cohda_VS_PositionOfPillarB_cm_MAX 300

#define default_stack_Cohda_VS_PositionOfPillarC_cm_PARAM "Cohda_VS.PositionOfPillarC_cm"
#define default_stack_Cohda_VS_PositionOfPillarC_cm_MIN 10
#define default_stack_Cohda_VS_PositionOfPillarC_cm_DEF 300
#define default_stack_Cohda_VS_PositionOfPillarC_cm_MAX 300

#define default_stack_Cohda_VS_PositionOfPillarD_cm_PARAM "Cohda_VS.PositionOfPillarD_cm"
#define default_stack_Cohda_VS_PositionOfPillarD_cm_MIN 10
#define default_stack_Cohda_VS_PositionOfPillarD_cm_DEF 300
#define default_stack_Cohda_VS_PositionOfPillarD_cm_MAX 300

#define default_stack_Cohda_VS_PosCentMass_cm_PARAM "Cohda_VS.PosCentMass_cm"
#define default_stack_Cohda_VS_PosCentMass_cm_MIN 10
#define default_stack_Cohda_VS_PosCentMass_cm_DEF 630
#define default_stack_Cohda_VS_PosCentMass_cm_MAX 630

#define default_stack_Cohda_VS_WheelBaseVehicle_cm_PARAM "Cohda_VS.WheelBaseVehicle_cm"
#define default_stack_Cohda_VS_WheelBaseVehicle_cm_MIN 10
#define default_stack_Cohda_VS_WheelBaseVehicle_cm_DEF 1270
#define default_stack_Cohda_VS_WheelBaseVehicle_cm_MAX 1270

#define default_stack_Cohda_VS_TurningRadius_cm_PARAM "Cohda_VS.TurningRadius_cm"
#define default_stack_Cohda_VS_TurningRadius_cm_MIN 40
#define default_stack_Cohda_VS_TurningRadius_cm_DEF 10200
#define default_stack_Cohda_VS_TurningRadius_cm_MAX 10200

#define default_stack_Cohda_VS_PosFrontAx_cm_PARAM "Cohda_VS.PosFrontAx_cm"
#define default_stack_Cohda_VS_PosFrontAx_cm_MIN 10
#define default_stack_Cohda_VS_PosFrontAx_cm_DEF 200
#define default_stack_Cohda_VS_PosFrontAx_cm_MAX 200

#define default_stack_Cohda_VS_EVENT_HAZARDLIGHT_DURATION_PARAM "Cohda_VS.EVENT_HAZARDLIGHT_DURATION"
#define default_stack_Cohda_VS_EVENT_HAZARDLIGHT_DURATION_MIN 0
#define default_stack_Cohda_VS_EVENT_HAZARDLIGHT_DURATION_DEF 100
#define default_stack_Cohda_VS_EVENT_HAZARDLIGHT_DURATION_MAX 10000

#define default_stack_Cohda_VS_EVENT_AIRBAG_DURATION_PARAM "Cohda_VS.EVENT_AIRBAG_DURATION"
#define default_stack_Cohda_VS_EVENT_AIRBAG_DURATION_MIN 0
#define default_stack_Cohda_VS_EVENT_AIRBAG_DURATION_DEF 300
#define default_stack_Cohda_VS_EVENT_AIRBAG_DURATION_MAX 10000

#define default_stack_Cohda_VS_EVENT_ABS_DURATION_PARAM "Cohda_VS.EVENT_ABS_DURATION"
#define default_stack_Cohda_VS_EVENT_ABS_DURATION_MIN 0
#define default_stack_Cohda_VS_EVENT_ABS_DURATION_DEF 100
#define default_stack_Cohda_VS_EVENT_ABS_DURATION_MAX 10000

#define default_stack_Cohda_VS_EVENT_TRACTION_DURATION_PARAM "Cohda_VS.EVENT_TRACTION_DURATION"
#define default_stack_Cohda_VS_EVENT_TRACTION_DURATION_MIN 0
#define default_stack_Cohda_VS_EVENT_TRACTION_DURATION_DEF 100
#define default_stack_Cohda_VS_EVENT_TRACTION_DURATION_MAX 10000

#define default_stack_Cohda_VS_EVENT_SBC_DURATION_PARAM "Cohda_VS.EVENT_SBC_DURATION"
#define default_stack_Cohda_VS_EVENT_SBC_DURATION_MIN 0
#define default_stack_Cohda_VS_EVENT_SBC_DURATION_DEF 100
#define default_stack_Cohda_VS_EVENT_SBC_DURATION_MAX 10000

#define default_stack_Cohda_VS_HARD_BRAKING_DURATION_PARAM "Cohda_VS.HARD_BRAKING_DURATION"
#define default_stack_Cohda_VS_HARD_BRAKING_DURATION_MIN 0
#define default_stack_Cohda_VS_HARD_BRAKING_DURATION_DEF 200
#define default_stack_Cohda_VS_HARD_BRAKING_DURATION_MAX 10000

#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_SET_PARAM "Cohda_VS.HARD_BRAKING_ACCEL_SET"
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_SET_MIN -99.9
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_SET_DEF -4.0
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_SET_MAX 99.9

#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_UNSET_PARAM "Cohda_VS.HARD_BRAKING_ACCEL_UNSET"
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_UNSET_MIN -99.9
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_UNSET_DEF -3.5
#define default_stack_Cohda_VS_HARD_BRAKING_ACCEL_UNSET_MAX 99.9

#define default_stack_Cohda_VS_GPS_LONACCEL_FILTERGAIN_PARAM "Cohda_VS.GPS_LONACCEL_FILTERGAIN"
#define default_stack_Cohda_VS_GPS_LONACCEL_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GPS_LONACCEL_FILTERGAIN_DEF 1.0
#define default_stack_Cohda_VS_GPS_LONACCEL_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GPS_LATACCEL_FILTERGAIN_PARAM "Cohda_VS.GPS_LATACCEL_FILTERGAIN"
#define default_stack_Cohda_VS_GPS_LATACCEL_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GPS_LATACCEL_FILTERGAIN_DEF 1.0
#define default_stack_Cohda_VS_GPS_LATACCEL_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GPS_YAWRATE_FILTERGAIN_PARAM "Cohda_VS.GPS_YAWRATE_FILTERGAIN"
#define default_stack_Cohda_VS_GPS_YAWRATE_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GPS_YAWRATE_FILTERGAIN_DEF 1.0
#define default_stack_Cohda_VS_GPS_YAWRATE_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GRADE_SENSORACCEL_FILTERGAIN_PARAM "Cohda_VS.GRADE_SENSORACCEL_FILTERGAIN"
#define default_stack_Cohda_VS_GRADE_SENSORACCEL_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GRADE_SENSORACCEL_FILTERGAIN_DEF 0.522
#define default_stack_Cohda_VS_GRADE_SENSORACCEL_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GRADE_WHEELACCEL_FILTERGAIN_PARAM "Cohda_VS.GRADE_WHEELACCEL_FILTERGAIN"
#define default_stack_Cohda_VS_GRADE_WHEELACCEL_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GRADE_WHEELACCEL_FILTERGAIN_DEF 0.85
#define default_stack_Cohda_VS_GRADE_WHEELACCEL_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GRADE_GRADEACCEL_FILTERGAIN_PARAM "Cohda_VS.GRADE_GRADEACCEL_FILTERGAIN"
#define default_stack_Cohda_VS_GRADE_GRADEACCEL_FILTERGAIN_MIN 0.0
#define default_stack_Cohda_VS_GRADE_GRADEACCEL_FILTERGAIN_DEF 0.105
#define default_stack_Cohda_VS_GRADE_GRADEACCEL_FILTERGAIN_MAX 1.0

#define default_stack_Cohda_VS_GRADE_LATCH_SPEED_PARAM "Cohda_VS.GRADE_LATCH_SPEED"
#define default_stack_Cohda_VS_GRADE_LATCH_SPEED_MIN 0
#define default_stack_Cohda_VS_GRADE_LATCH_SPEED_DEF 3
#define default_stack_Cohda_VS_GRADE_LATCH_SPEED_MAX 360

#define default_stack_Cohda_VS_GRADE_UNLATCH_SPEED_PARAM "Cohda_VS.GRADE_UNLATCH_SPEED"
#define default_stack_Cohda_VS_GRADE_UNLATCH_SPEED_MIN 0
#define default_stack_Cohda_VS_GRADE_UNLATCH_SPEED_DEF 5
#define default_stack_Cohda_VS_GRADE_UNLATCH_SPEED_MAX 360

#define default_stack_Cohda_VS_VehSpd_TIME_OLD_PARAM "Cohda_VS.VehSpd_TIME_OLD"
#define default_stack_Cohda_VS_VehSpd_TIME_OLD_MIN 0
#define default_stack_Cohda_VS_VehSpd_TIME_OLD_DEF 2184
#define default_stack_Cohda_VS_VehSpd_TIME_OLD_MAX 32767

#define default_stack_Cohda_VS_VehSpd_VALUE_ON_PARAM "Cohda_VS.VehSpd_VALUE_ON"
#define default_stack_Cohda_VS_VehSpd_VALUE_ON_MIN 0
#define default_stack_Cohda_VS_VehSpd_VALUE_ON_DEF 300
#define default_stack_Cohda_VS_VehSpd_VALUE_ON_MAX 65535

#define default_stack_Cohda_VS_VehSpd_TIME_ON_PARAM "Cohda_VS.VehSpd_TIME_ON"
#define default_stack_Cohda_VS_VehSpd_TIME_ON_MIN 0
#define default_stack_Cohda_VS_VehSpd_TIME_ON_DEF 273
#define default_stack_Cohda_VS_VehSpd_TIME_ON_MAX 65535

#define default_stack_Cohda_VS_VehSpd_VALUE_OFF_PARAM "Cohda_VS.VehSpd_VALUE_OFF"
#define default_stack_Cohda_VS_VehSpd_VALUE_OFF_MIN 0
#define default_stack_Cohda_VS_VehSpd_VALUE_OFF_DEF 50
#define default_stack_Cohda_VS_VehSpd_VALUE_OFF_MAX 65535

#define default_stack_Cohda_VS_VehSpd_TIME_OFF_PARAM "Cohda_VS.VehSpd_TIME_OFF"
#define default_stack_Cohda_VS_VehSpd_TIME_OFF_MIN 0
#define default_stack_Cohda_VS_VehSpd_TIME_OFF_DEF 546
#define default_stack_Cohda_VS_VehSpd_TIME_OFF_MAX 65535

#define default_stack_Cohda_VS_CommitPeriod_mS_PARAM "Cohda_VS.CommitPeriod_mS"
#define default_stack_Cohda_VS_CommitPeriod_mS_MIN 0
#define default_stack_Cohda_VS_CommitPeriod_mS_DEF 100
#define default_stack_Cohda_VS_CommitPeriod_mS_MAX 10000
#define default_stack_Cohda_VS_CommitPeriod_mS_AlwaysCommit (0)

#define default_stack_Cohda_VS_PlausibilityPeriod_mS_PARAM "Cohda_VS.PlausibilityPeriod_mS"
#define default_stack_Cohda_VS_PlausibilityPeriod_mS_MIN 0
#define default_stack_Cohda_VS_PlausibilityPeriod_mS_DEF 500
#define default_stack_Cohda_VS_PlausibilityPeriod_mS_MAX 10000
#define default_stack_Cohda_VS_PlausibilityPeriod_mS_NoPlausibilityChecks (0)

#define default_stack_Cohda_VS_PurgePeriod_mS_PARAM "Cohda_VS.PurgePeriod_mS"
#define default_stack_Cohda_VS_PurgePeriod_mS_MIN 0
#define default_stack_Cohda_VS_PurgePeriod_mS_DEF 1000
#define default_stack_Cohda_VS_PurgePeriod_mS_MAX 10000
#define default_stack_Cohda_VS_PurgePeriod_mS_NoPurging (0)


#define default_stack_Cohda_VS_vstate_data_DebugLevel_PARAM "Cohda_VS.vstate_data.DebugLevel"
#define default_stack_Cohda_VS_vstate_data_DebugLevel_MIN -1
#define default_stack_Cohda_VS_vstate_data_DebugLevel_DEF -1
#define default_stack_Cohda_VS_vstate_data_DebugLevel_MAX 255

typedef struct default_stack_Cohda_VS_vstate_data
{
  /**
   * DebugLevel default is -1, min/max -1/255
   * these should be in %  default_VS.conf
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_VS_vstate_data;

#define default_stack_Cohda_VS_vstate_data_NUM_SUB (0)
#define default_stack_Cohda_VS_vstate_data_NUM_FLD (1)


#define default_stack_Cohda_VS_vstate_gen_DebugLevel_PARAM "Cohda_VS.vstate_gen.DebugLevel"
#define default_stack_Cohda_VS_vstate_gen_DebugLevel_MIN -1
#define default_stack_Cohda_VS_vstate_gen_DebugLevel_DEF -1
#define default_stack_Cohda_VS_vstate_gen_DebugLevel_MAX 255

typedef struct default_stack_Cohda_VS_vstate_gen
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_VS_vstate_gen;

#define default_stack_Cohda_VS_vstate_gen_NUM_SUB (0)
#define default_stack_Cohda_VS_vstate_gen_NUM_FLD (1)


#define default_stack_Cohda_VS_vstate_skel_DebugLevel_PARAM "Cohda_VS.vstate_skel.DebugLevel"
#define default_stack_Cohda_VS_vstate_skel_DebugLevel_MIN -1
#define default_stack_Cohda_VS_vstate_skel_DebugLevel_DEF -1
#define default_stack_Cohda_VS_vstate_skel_DebugLevel_MAX 255

typedef struct default_stack_Cohda_VS_vstate_skel
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_VS_vstate_skel;

#define default_stack_Cohda_VS_vstate_skel_NUM_SUB (0)
#define default_stack_Cohda_VS_vstate_skel_NUM_FLD (1)


#define default_stack_Cohda_VS_vstate_stub_DebugLevel_PARAM "Cohda_VS.vstate_stub.DebugLevel"
#define default_stack_Cohda_VS_vstate_stub_DebugLevel_MIN -1
#define default_stack_Cohda_VS_vstate_stub_DebugLevel_DEF -1
#define default_stack_Cohda_VS_vstate_stub_DebugLevel_MAX 255

typedef struct default_stack_Cohda_VS_vstate_stub
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_VS_vstate_stub;

#define default_stack_Cohda_VS_vstate_stub_NUM_SUB (0)
#define default_stack_Cohda_VS_vstate_stub_NUM_FLD (1)


#define default_stack_Cohda_VS_vstate_thr_DebugLevel_PARAM "Cohda_VS.vstate_thr.DebugLevel"
#define default_stack_Cohda_VS_vstate_thr_DebugLevel_MIN -1
#define default_stack_Cohda_VS_vstate_thr_DebugLevel_DEF -1
#define default_stack_Cohda_VS_vstate_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_VS_vstate_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_VS_vstate_thr;

#define default_stack_Cohda_VS_vstate_thr_NUM_SUB (0)
#define default_stack_Cohda_VS_vstate_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_VS
{
  tdefault_stack_Cohda_VS_vstate_data vstate_data;

  tdefault_stack_Cohda_VS_vstate_gen vstate_gen;

  tdefault_stack_Cohda_VS_vstate_skel vstate_skel;

  tdefault_stack_Cohda_VS_vstate_stub vstate_stub;

  tdefault_stack_Cohda_VS_vstate_thr vstate_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   * if != -1, override debug level for EEBL module only
   */
  int32_t DebugLevel;

  /**
   * MaxReaders default is 12, min/max 1/99
   * Maximum number of VState readers which can be supported at a given time
   */
  int32_t MaxReaders;

  /**
   * VehLength default is 0, min/max 0/10220
   * NOTE: Can be set via configuration if not available from CAN bus
   * NOTE: Both VehLength and VehWidth must be non-zero to be set via configuration
   * NOTE: Set to zero if available from CAN bus
   * EU: CDD supports up to 10210 cm with 10 cm resolution (use 10220 for larger lengths)
   * NA/CN: J2735 supports up to 4095 cm with 1 cm resolution
   * 0 indicates unavailable
   * Vehicle Length (0...10220 cm)
   * -  1 = cm
   */
  int32_t VehLength;

  /**
   * VehWidth default is 0, min/max 0/1023
   * EU: CDD supports up to 600 cm with 10 cm resolution (use 610 for larger widths)
   * NA/CN: J2735 supports up to 1023 cm with 1 cm resolution
   * 0 indicates unavailable
   * Vehicle Width  (0...1023 cm)
   * -  1 = cm
   */
  int32_t VehWidth;

  /**
   * BmprHghtFnt default is 0, min/max 0/127
   * Bumper Height Front (0...127 cm)
   */
  int32_t BmprHghtFnt;

  /**
   * BmprHghtRear default is 0, min/max 0/127
   * Bumper Height Rear (0...127 cm)
   */
  int32_t BmprHghtRear;

  /**
   * VehHght default is 0, min/max 0/127
   * Vehicle Height (0...635 cm, 5cm units)
   */
  int32_t VehHght;

  /**
   * VehMass default is 0, min/max 0/3401
   * Vehicle Mass (0...170050 kg, 50kg units)
   */
  int32_t VehMass;

  /**
   * VehType default is 0, min/max 0/255
   * Vehicle Type (Per SAE DE_VehicleType)
   */
  int32_t VehType;

  /**
   * VehLayout default is 1, min/max 0/4
   * Vehicle layout (Driven Wheel):
   * -  0 = not configured,
   * -  1 = 2WD - Front Driven,
   * -  2 = 2WD - Rear Driven,
   * -  3 = 4WD - 4 Wheel Drive,
   * -  4 = AWD - All Wheel Drive
   */
  int32_t VehLayout;

  /**
   * Transmission default is 0, min/max 0/3
   * Vehicle Transmission Type:
   * -  0 = not configured
   * -  1 = manual transmission
   * -  2 = automatic transmission
   * -  3 = continuously-variable
   */
  int32_t Transmission;

  /**
   * DrivingSide default is 0, min/max 0/2
   * https://en.wikipedia.org/wiki/Right-_and_left-hand_traffic
   * -  0 = Dynamic/Unknown
   * -  1 = Always Left  (e.g. AU, UK etc.)
   * -  2 = Always Right (e.g. EU, US etc.)
   */
  int32_t DrivingSide;

  /**
   * HeightLonCarrLeft_cm default is 100, min/max 1/100
   * Height/Pos of left/right longitudinal carrier of the vehicle from base to top
   * in cm, 100=unavailable
   */
  int32_t HeightLonCarrLeft_cm;

  /**
   * HeightLonCarrRight_cm default is 100, min/max 1/100
   * in cm, 100=unavailable
   */
  int32_t HeightLonCarrRight_cm;

  /**
   * PosLonCarrLeft_cm default is 127, min/max 1/127
   * in cm, 127=unavailable
   */
  int32_t PosLonCarrLeft_cm;

  /**
   * PosLonCarrRight_cm default is 127, min/max 1/127
   * in cm, 127=unavailable
   */
  int32_t PosLonCarrRight_cm;

  /**
   * PositionOfPillars_count default is 3, min/max 1/4
   * The positionOfPillars contains a list of distance, which refers to the perpendicular
   * distance between centre of vehicle front bumper to vehicle A pillar, between
   * neighbour vehicle pillars until the last pillar of the vehicle.
   * Number of pillars
   */
  int32_t PositionOfPillars_count;

  /**
   * PositionOfPillarA_cm default is 300, min/max 10/300
   * in cm, 300=unavailable
   */
  int32_t PositionOfPillarA_cm;

  /**
   * PositionOfPillarB_cm default is 300, min/max 10/300
   * in cm, 300=unavailable
   */
  int32_t PositionOfPillarB_cm;

  /**
   * PositionOfPillarC_cm default is 300, min/max 10/300
   * in cm, 300=unavailable
   */
  int32_t PositionOfPillarC_cm;

  /**
   * PositionOfPillarD_cm default is 300, min/max 10/300
   * in cm, 300=unavailable
   */
  int32_t PositionOfPillarD_cm;

  /**
   * PosCentMass_cm default is 630, min/max 10/630
   * Perpendicular distance from centre of mass of an empty charged vehicle to
   * vehicle front bumper.
   * in cm, 630=unavailable
   */
  int32_t PosCentMass_cm;

  /**
   * WheelBaseVehicle_cm default is 1270, min/max 10/1270
   * Perpendicular distance between front and rear axle of the wheel base of a
   * passenger vehicle.
   * in cm, 1270=unavailable
   */
  int32_t WheelBaseVehicle_cm;

  /**
   * TurningRadius_cm default is 10200, min/max 40/10200
   * The turning radius of a vehicle is the size of the smallest circular turn (i.e. U-turn)
   * that the vehicle is capable of making
   * in cm, 10200=unavailable
   */
  int32_t TurningRadius_cm;

  /**
   * PosFrontAx_cm default is 200, min/max 10/200
   * Perpendicular distance between the front wheel axle and front bumper.
   * in cm, 200=unavailable
   */
  int32_t PosFrontAx_cm;

  /**
   * EVENT_HAZARDLIGHT_DURATION default is 100, min/max 0/10000
   * Hazard light duration set threshold [ms]
   */
  int32_t EVENT_HAZARDLIGHT_DURATION;

  /**
   * EVENT_AIRBAG_DURATION default is 300, min/max 0/10000
   * Airbag duration set threshold [ms]
   */
  int32_t EVENT_AIRBAG_DURATION;

  /**
   * EVENT_ABS_DURATION default is 100, min/max 0/10000
   * ABS duration set threshold [ms]
   */
  int32_t EVENT_ABS_DURATION;

  /**
   * EVENT_TRACTION_DURATION default is 100, min/max 0/10000
   * Traction control duration set threshold [ms]
   */
  int32_t EVENT_TRACTION_DURATION;

  /**
   * EVENT_SBC_DURATION default is 100, min/max 0/10000
   * Stability control duration set threshold [ms]
   */
  int32_t EVENT_SBC_DURATION;

  /**
   * HARD_BRAKING_DURATION default is 200, min/max 0/10000
   * Hard braking duration set threshold [ms]
   */
  int32_t HARD_BRAKING_DURATION;

  /**
   * HARD_BRAKING_ACCEL_SET default is -4.0, min/max -99.9/99.9
   * Hard braking accel set threshold [m/s/s]
   */
  float HARD_BRAKING_ACCEL_SET;

  /**
   * HARD_BRAKING_ACCEL_UNSET default is -3.5, min/max -99.9/99.9
   * Hard braking accel unset threshold [m/s/s]
   */
  float HARD_BRAKING_ACCEL_UNSET;

  /**
   * GPS_LONACCEL_FILTERGAIN default is 1.0, min/max 0.0/1.0
   *############ GPS based estimation #############
   * Longitudinal acceleration filtering (1st order lag filter gain)
   */
  float GPS_LONACCEL_FILTERGAIN;

  /**
   * GPS_LATACCEL_FILTERGAIN default is 1.0, min/max 0.0/1.0
   * Lateral acceleration filtering (1st order lag filter gain)
   */
  float GPS_LATACCEL_FILTERGAIN;

  /**
   * GPS_YAWRATE_FILTERGAIN default is 1.0, min/max 0.0/1.0
   * Yaw rate filtering (1st order lag filter gain)
   */
  float GPS_YAWRATE_FILTERGAIN;

  /**
   * GRADE_SENSORACCEL_FILTERGAIN default is 0.522, min/max 0.0/1.0
   *############ Slope (grade) estimation #############
   * Longitudinal filtering of sensor value (1st order lag filter gain)
   */
  float GRADE_SENSORACCEL_FILTERGAIN;

  /**
   * GRADE_WHEELACCEL_FILTERGAIN default is 0.85, min/max 0.0/1.0
   * Longitudinal filtering of wheel acceleration (4th order lag filter gain)
   */
  float GRADE_WHEELACCEL_FILTERGAIN;

  /**
   * GRADE_GRADEACCEL_FILTERGAIN default is 0.105, min/max 0.0/1.0
   * VSTATE acceleration difference (SENSOR - WHEEL) filtering (1st order lag filter gain)
   */
  float GRADE_GRADEACCEL_FILTERGAIN;

  /**
   * GRADE_LATCH_SPEED default is 3, min/max 0/360
   * Speed, in kph, below which the grade angle will be latched
   */
  int32_t GRADE_LATCH_SPEED;

  /**
   * GRADE_UNLATCH_SPEED default is 5, min/max 0/360
   * Speed, in kph, above which the grade angle will be unlatched
   */
  int32_t GRADE_UNLATCH_SPEED;

  /**
   * VehSpd_TIME_OLD default is 2184, min/max 0/32767
   * 2s
   */
  int32_t VehSpd_TIME_OLD;

  /**
   * VehSpd_VALUE_ON default is 300, min/max 0/65535
   * 3kph
   */
  int32_t VehSpd_VALUE_ON;

  /**
   * VehSpd_TIME_ON default is 273, min/max 0/65535
   * 250ms
   */
  int32_t VehSpd_TIME_ON;

  /**
   * VehSpd_VALUE_OFF default is 50, min/max 0/65535
   * 0.5kph
   */
  int32_t VehSpd_VALUE_OFF;

  /**
   * VehSpd_TIME_OFF default is 546, min/max 0/65535
   * 500ms
   */
  int32_t VehSpd_TIME_OFF;

  /**
   * CommitPeriod_mS default is 100, min/max 0/10000
   * Interval, in mSec, with which periodic (unforced) commits are made
   * -  0 = AlwaysCommit
   */
  int32_t CommitPeriod_mS;

  /**
   * PlausibilityPeriod_mS default is 500, min/max 0/10000
   * Interval, in mSec, with which plausibility checks are made
   * -  0 = NoPlausibilityChecks
   */
  int32_t PlausibilityPeriod_mS;

  /**
   * PurgePeriod_mS default is 1000, min/max 0/10000
   * Interval, in mSec, with which periodic purging is performed
   * -  0 = NoPurging
   */
  int32_t PurgePeriod_mS;
} tdefault_stack_Cohda_VS;

#define default_stack_Cohda_VS_NUM_SUB (5)
#define default_stack_Cohda_VS_NUM_FLD (49)


#define default_stack_Cohda_TM_DebugLevel_PARAM "Cohda_TM.DebugLevel"
#define default_stack_Cohda_TM_DebugLevel_MIN -1
#define default_stack_Cohda_TM_DebugLevel_DEF -1
#define default_stack_Cohda_TM_DebugLevel_MAX 255

#define default_stack_Cohda_TM_AlertQueueDepth_PARAM "Cohda_TM.AlertQueueDepth"
#define default_stack_Cohda_TM_AlertQueueDepth_MIN 1
#define default_stack_Cohda_TM_AlertQueueDepth_DEF 5
#define default_stack_Cohda_TM_AlertQueueDepth_MAX 100

#define default_stack_Cohda_TM_MinLevelDelta_PARAM "Cohda_TM.MinLevelDelta"
#define default_stack_Cohda_TM_MinLevelDelta_MIN 0
#define default_stack_Cohda_TM_MinLevelDelta_DEF 10
#define default_stack_Cohda_TM_MinLevelDelta_MAX 255

#define default_stack_Cohda_TM_NumParallelVerifies_PARAM "Cohda_TM.NumParallelVerifies"
#define default_stack_Cohda_TM_NumParallelVerifies_MIN 1
#define default_stack_Cohda_TM_NumParallelVerifies_DEF 3
#define default_stack_Cohda_TM_NumParallelVerifies_MAX 10

#define default_stack_Cohda_TM_schedulerPolicy_PARAM "Cohda_TM.schedulerPolicy"
#define default_stack_Cohda_TM_schedulerPolicy_MIN -1
#define default_stack_Cohda_TM_schedulerPolicy_DEF 1
#define default_stack_Cohda_TM_schedulerPolicy_MAX 2

#define default_stack_Cohda_TM_schedulerPriority_pc_PARAM "Cohda_TM.schedulerPriority_pc"
#define default_stack_Cohda_TM_schedulerPriority_pc_MIN 0
#define default_stack_Cohda_TM_schedulerPriority_pc_DEF 20
#define default_stack_Cohda_TM_schedulerPriority_pc_MAX 100

#define default_stack_Cohda_TM_RepeatPeriod_Seconds_PARAM "Cohda_TM.RepeatPeriod_Seconds"
#define default_stack_Cohda_TM_RepeatPeriod_Seconds_MIN -1
#define default_stack_Cohda_TM_RepeatPeriod_Seconds_DEF 0
#define default_stack_Cohda_TM_RepeatPeriod_Seconds_MAX 255

#define default_stack_Cohda_TM_AlertUpdate_Seconds_PARAM "Cohda_TM.AlertUpdate_Seconds"
#define default_stack_Cohda_TM_AlertUpdate_Seconds_MIN 0
#define default_stack_Cohda_TM_AlertUpdate_Seconds_DEF 1
#define default_stack_Cohda_TM_AlertUpdate_Seconds_MAX 255

#define default_stack_Cohda_TM_AlertExpiry_Seconds_PARAM "Cohda_TM.AlertExpiry_Seconds"
#define default_stack_Cohda_TM_AlertExpiry_Seconds_MIN 1
#define default_stack_Cohda_TM_AlertExpiry_Seconds_DEF 5
#define default_stack_Cohda_TM_AlertExpiry_Seconds_MAX 255

typedef struct default_stack_Cohda_TM
{
  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                               TM                                       *
   ***************************************************************************
   ***************************************************************************
   **                  Stack module TM                                       *
   ***************************************************************************
   * if != -1, override debug level for TM module only
   */
  int32_t DebugLevel;

  /**
   * AlertQueueDepth default is 5, min/max 1/100
   * how many alerts to enqueue waiting for verification
   */
  int32_t AlertQueueDepth;

  /**
   * MinLevelDelta default is 10, min/max 0/255
   * how different an alert has to be to qualify as an update.
   */
  int32_t MinLevelDelta;

  /**
   * NumParallelVerifies default is 3, min/max 1/10
   * number of parallel verification requests
   */
  int32_t NumParallelVerifies;

  /**
   * schedulerPolicy default is 1, min/max -1/2
   *  0 = SCHED_OTHER (no priorities)
   *  1 = SCHED_FIFO  (strict)
   *  2 = SCHED_RR    (FIFO + timeslice limits)
   */
  int32_t schedulerPolicy;

  /**
   * schedulerPriority_pc default is 20, min/max 0/100
   * priority %
   */
  int32_t schedulerPriority_pc;

  /**
   * RepeatPeriod_Seconds default is 0, min/max -1/255
   * Minimum time between successive alerts for the same condition
   * 0 disables repeat filtering, -1 disables repetition completely
   */
  int32_t RepeatPeriod_Seconds;

  /**
   * AlertUpdate_Seconds default is 1, min/max 0/255
   * Minimum time to update the new alert
   * 0 immediately update the new alert
   */
  int32_t AlertUpdate_Seconds;

  /**
   * AlertExpiry_Seconds default is 5, min/max 1/255
   * Minimum time a new alert to be active
   */
  int32_t AlertExpiry_Seconds;
} tdefault_stack_Cohda_TM;

#define default_stack_Cohda_TM_NUM_SUB (0)
#define default_stack_Cohda_TM_NUM_FLD (9)


#define default_stack_Cohda_UBX_DebugLevel_PARAM "Cohda_UBX.DebugLevel"
#define default_stack_Cohda_UBX_DebugLevel_MIN -1
#define default_stack_Cohda_UBX_DebugLevel_DEF -1
#define default_stack_Cohda_UBX_DebugLevel_MAX 255

#define default_stack_Cohda_UBX_DEV_FILE_PARAM "Cohda_UBX.DEV_FILE"
#define default_stack_Cohda_UBX_DEV_FILE_DEF "/dev/ttymxc4"

#define default_stack_Cohda_UBX_UBX_DEVICE_TYPE_PARAM "Cohda_UBX.UBX_DEVICE_TYPE"
#define default_stack_Cohda_UBX_UBX_DEVICE_TYPE_MIN 0
#define default_stack_Cohda_UBX_UBX_DEVICE_TYPE_DEF 0
#define default_stack_Cohda_UBX_UBX_DEVICE_TYPE_MAX 3

typedef struct default_stack_Cohda_UBX
{
  /**
   * DEV_FILE default is "/dev/ttymxc4"
   * u-blox serial port dev file
   */
  const char * DEV_FILE;

  /**
   * DebugLevel default is -1, min/max -1/255
   * if != -1, override debug level for UBX module only
   */
  int32_t DebugLevel;

  /**
   * UBX_DEVICE_TYPE default is 0, min/max 0/3
   * Specify the u-blox device type: this should match the installed hardware.
   * 0 = M8N: GNSS capability
   * 1 = M8U: GNSS + UDR capability
   * 2 = M8L: GNSS + ADR capability, with optional vstate speed support
   * 3 = M8L: GNSS + ADR capability, with no dead reckoning, 5 Hz fixes
   */
  int32_t UBX_DEVICE_TYPE;
} tdefault_stack_Cohda_UBX;

#define default_stack_Cohda_UBX_NUM_SUB (0)
#define default_stack_Cohda_UBX_NUM_FLD (3)


#define default_stack_Cohda_HMI_Destination_PARAM "Cohda_HMI.Destination"
#define default_stack_Cohda_HMI_Destination_DEF "127.0.0.1"

#define default_stack_Cohda_HMI_Port_PARAM "Cohda_HMI.Port"
#define default_stack_Cohda_HMI_Port_DEF "9100"

#define default_stack_Cohda_HMI_Interface_PARAM "Cohda_HMI.Interface"
#define default_stack_Cohda_HMI_Interface_DEF "lo"

#define default_stack_Cohda_HMI_Timeout_ms_PARAM "Cohda_HMI.Timeout_ms"
#define default_stack_Cohda_HMI_Timeout_ms_MIN 0
#define default_stack_Cohda_HMI_Timeout_ms_DEF 10
#define default_stack_Cohda_HMI_Timeout_ms_MAX 65536

#define default_stack_Cohda_HMI_JSONOutput_PARAM "Cohda_HMI.JSONOutput"
#define default_stack_Cohda_HMI_JSONOutput_DEF false

typedef struct default_stack_Cohda_HMI
{
  /**
   * Destination default is "127.0.0.1"
   ***************************************************************************
   **                               HMI                                      *
   ***************************************************************************
   * A comma separated list of destination addresses
   */
  const char * Destination;

  /**
   * Port default is "9100"
   * A comma separated list of destination ports for each address
   */
  const char * Port;

  /**
   * Interface default is "lo"
   * Interface which is used to communicate with HMI
   */
  const char * Interface;

  /**
   * Timeout_ms default is 10, min/max 0/65536
   * Timeout to connect to HMI to push resources in millisecs
   */
  int32_t Timeout_ms;

  /**
   * JSONOutput default is false
   * Use JSON output instead of XML for alerts / heartbeat messages
   */
  bool JSONOutput;
} tdefault_stack_Cohda_HMI;

#define default_stack_Cohda_HMI_NUM_SUB (0)
#define default_stack_Cohda_HMI_NUM_FLD (5)


#define default_stack_Cohda_ADR_DebugLevel_PARAM "Cohda_ADR.DebugLevel"
#define default_stack_Cohda_ADR_DebugLevel_MIN -1
#define default_stack_Cohda_ADR_DebugLevel_DEF -1
#define default_stack_Cohda_ADR_DebugLevel_MAX 255

#define default_stack_Cohda_ADR_ENABLE_PARAM "Cohda_ADR.ENABLE"
#define default_stack_Cohda_ADR_ENABLE_DEF false

#define default_stack_Cohda_ADR_LogEnableFlag_PARAM "Cohda_ADR.LogEnableFlag"
#define default_stack_Cohda_ADR_LogEnableFlag_DEF false

#define default_stack_Cohda_ADR_UDP_HOST_PARAM "Cohda_ADR.UDP_HOST"
#define default_stack_Cohda_ADR_UDP_HOST_DEF ""

#define default_stack_Cohda_ADR_UDP_PORT_PARAM "Cohda_ADR.UDP_PORT"
#define default_stack_Cohda_ADR_UDP_PORT_MIN 1
#define default_stack_Cohda_ADR_UDP_PORT_DEF 15000
#define default_stack_Cohda_ADR_UDP_PORT_MAX 65535

#define default_stack_Cohda_ADR_JSON_UDP_HOST_PARAM "Cohda_ADR.JSON_UDP_HOST"
#define default_stack_Cohda_ADR_JSON_UDP_HOST_DEF ""

#define default_stack_Cohda_ADR_JSON_UDP_PORT_PARAM "Cohda_ADR.JSON_UDP_PORT"
#define default_stack_Cohda_ADR_JSON_UDP_PORT_MIN 1
#define default_stack_Cohda_ADR_JSON_UDP_PORT_DEF 33994
#define default_stack_Cohda_ADR_JSON_UDP_PORT_MAX 65535

#define default_stack_Cohda_ADR_RV_CNT_PARAM "Cohda_ADR.RV_CNT"
#define default_stack_Cohda_ADR_RV_CNT_MIN 1
#define default_stack_Cohda_ADR_RV_CNT_DEF 12
#define default_stack_Cohda_ADR_RV_CNT_MAX 12

typedef struct default_stack_Cohda_ADR
{
  /**
   * UDP_HOST default is ""
   * ADR UDP logging
   * Set to enable ADR logging to given host/port
   */
  const char * UDP_HOST;

  /**
   * JSON_UDP_HOST default is ""
   * JSON basic ADR info via UDP
   * Set to enable ADR logging to given host/port
   */
  const char * JSON_UDP_HOST;

  /**
   * DebugLevel default is -1, min/max -1/255
   * if != -1, override debug level for EEBL module only
   */
  int32_t DebugLevel;

  /**
   * UDP_PORT default is 15000, min/max 1/65535
   * UDP Port to log to (if enabled)
   */
  int32_t UDP_PORT;

  /**
   * JSON_UDP_PORT default is 33994, min/max 1/65535
   * UDP Port to log to (if enabled)
   */
  int32_t JSON_UDP_PORT;

  /**
   * RV_CNT default is 12, min/max 1/12
   * Number of RV's to record in ADR (1 ADR record ~= 1kB)
   */
  int32_t RV_CNT;

  /**
   * ENABLE default is false
   * Enable ADR/EDR module
   */
  bool ENABLE;

  /**
   * LogEnableFlag default is false
   * ADR pcap logging
   */
  bool LogEnableFlag;
} tdefault_stack_Cohda_ADR;

#define default_stack_Cohda_ADR_NUM_SUB (0)
#define default_stack_Cohda_ADR_NUM_FLD (8)


#define default_stack_Cohda_RPS_DebugLevel_PARAM "Cohda_RPS.DebugLevel"
#define default_stack_Cohda_RPS_DebugLevel_MIN -1
#define default_stack_Cohda_RPS_DebugLevel_DEF 4
#define default_stack_Cohda_RPS_DebugLevel_MAX 255

#define default_stack_Cohda_RPS_RPS_AP_MODE_ENABLE_PARAM "Cohda_RPS.RPS_AP_MODE_ENABLE"
#define default_stack_Cohda_RPS_RPS_AP_MODE_ENABLE_DEF false

#define default_stack_Cohda_RPS_RPS_AP_MODE_APLIST_FILENAME_PARAM "Cohda_RPS.RPS_AP_MODE_APLIST_FILENAME"
#define default_stack_Cohda_RPS_RPS_AP_MODE_APLIST_FILENAME_DEF "/mnt/ubi/locate/locate_aplist.json"

#define default_stack_Cohda_RPS_RPS_AP_MODE_NEW_APLIST_FILENAME_PARAM "Cohda_RPS.RPS_AP_MODE_NEW_APLIST_FILENAME"
#define default_stack_Cohda_RPS_RPS_AP_MODE_NEW_APLIST_FILENAME_DEF "locate_new_aplist.json"

#define default_stack_Cohda_RPS_DUMMY_BEACON_GENERATE_PARAM "Cohda_RPS.DUMMY_BEACON_GENERATE"
#define default_stack_Cohda_RPS_DUMMY_BEACON_GENERATE_DEF false

#define default_stack_Cohda_RPS_RPS_ANNOUNCE_ENABLE_PARAM "Cohda_RPS.RPS_ANNOUNCE_ENABLE"
#define default_stack_Cohda_RPS_RPS_ANNOUNCE_ENABLE_DEF true

#define default_stack_Cohda_RPS_ENABLE_PARAM "Cohda_RPS.ENABLE"
#define default_stack_Cohda_RPS_ENABLE_DEF false

#define default_stack_Cohda_RPS_DEVICE_ID_PARAM "Cohda_RPS.DEVICE_ID"
#define default_stack_Cohda_RPS_DEVICE_ID_MIN 0x0ul
#define default_stack_Cohda_RPS_DEVICE_ID_DEF 0x0ul
#define default_stack_Cohda_RPS_DEVICE_ID_MAX 0xfffffffful

#define default_stack_Cohda_RPS_DEVICE_ID_STR_PARAM "Cohda_RPS.DEVICE_ID_STR"
#define default_stack_Cohda_RPS_DEVICE_ID_STR_DEF ""

#define default_stack_Cohda_RPS_UDP_STATUS_PORT_PARAM "Cohda_RPS.UDP_STATUS_PORT"
#define default_stack_Cohda_RPS_UDP_STATUS_PORT_MIN 0
#define default_stack_Cohda_RPS_UDP_STATUS_PORT_DEF 33990
#define default_stack_Cohda_RPS_UDP_STATUS_PORT_MAX 65535

#define default_stack_Cohda_RPS_UDP_STATUS_HOST_PARAM "Cohda_RPS.UDP_STATUS_HOST"
#define default_stack_Cohda_RPS_UDP_STATUS_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_UDP_STATUS_PERIOD_ms_PARAM "Cohda_RPS.UDP_STATUS_PERIOD_ms"
#define default_stack_Cohda_RPS_UDP_STATUS_PERIOD_ms_MIN 50
#define default_stack_Cohda_RPS_UDP_STATUS_PERIOD_ms_DEF 1000
#define default_stack_Cohda_RPS_UDP_STATUS_PERIOD_ms_MAX 60000

#define default_stack_Cohda_RPS_CORE_PROCESSING_PERIOD_ms_PARAM "Cohda_RPS.CORE_PROCESSING_PERIOD_ms"
#define default_stack_Cohda_RPS_CORE_PROCESSING_PERIOD_ms_MIN 50
#define default_stack_Cohda_RPS_CORE_PROCESSING_PERIOD_ms_DEF 100
#define default_stack_Cohda_RPS_CORE_PROCESSING_PERIOD_ms_MAX 1000

#define default_stack_Cohda_RPS_RAW_RANGING_ENABLE_PARAM "Cohda_RPS.RAW_RANGING_ENABLE"
#define default_stack_Cohda_RPS_RAW_RANGING_ENABLE_DEF false

#define default_stack_Cohda_RPS_RAW_RANGING_PORT_PARAM "Cohda_RPS.RAW_RANGING_PORT"
#define default_stack_Cohda_RPS_RAW_RANGING_PORT_MIN 0
#define default_stack_Cohda_RPS_RAW_RANGING_PORT_DEF 33991
#define default_stack_Cohda_RPS_RAW_RANGING_PORT_MAX 65535

#define default_stack_Cohda_RPS_RAW_RANGING_HOST_PARAM "Cohda_RPS.RAW_RANGING_HOST"
#define default_stack_Cohda_RPS_RAW_RANGING_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_RAW_RANGING_VERSION_PARAM "Cohda_RPS.RAW_RANGING_VERSION"
#define default_stack_Cohda_RPS_RAW_RANGING_VERSION_MIN 2
#define default_stack_Cohda_RPS_RAW_RANGING_VERSION_DEF 5
#define default_stack_Cohda_RPS_RAW_RANGING_VERSION_MAX 5

#define default_stack_Cohda_RPS_RAW_RANGING_LOG_ENABLE_PARAM "Cohda_RPS.RAW_RANGING_LOG_ENABLE"
#define default_stack_Cohda_RPS_RAW_RANGING_LOG_ENABLE_DEF true

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_MAP_FILENAME_PARAM "Cohda_RPS.LOCATE_TUNNEL_MAP_FILENAME"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_MAP_FILENAME_DEF ""

#define default_stack_Cohda_RPS_LOCATE_MAPDATA_FILENAME_PARAM "Cohda_RPS.LOCATE_MAPDATA_FILENAME"
#define default_stack_Cohda_RPS_LOCATE_MAPDATA_FILENAME_DEF ""

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITIONING_MODE_PARAM "Cohda_RPS.LOCATE_TUNNEL_POSITIONING_MODE"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITIONING_MODE_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITIONING_MODE_DEF 3
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITIONING_MODE_MAX 3

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_EDGE_TRACKING_MODE_PARAM "Cohda_RPS.LOCATE_TUNNEL_EDGE_TRACKING_MODE"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_EDGE_TRACKING_MODE_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_EDGE_TRACKING_MODE_DEF 4
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_EDGE_TRACKING_MODE_MAX 9

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m_PARAM "Cohda_RPS.LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m_MIN -1.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m_DEF 1.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m_MAX 20.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_ZERO_UPDATE_STATIONARY_PARAM "Cohda_RPS.LOCATE_TUNNEL_ZERO_UPDATE_STATIONARY"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_ZERO_UPDATE_STATIONARY_DEF false

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD_PARAM "Cohda_RPS.LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD_DEF 20.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD_PARAM "Cohda_RPS.LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD_DEF 20.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT_PARAM "Cohda_RPS.LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT_DEF 10
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT_MAX 100

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD_PARAM "Cohda_RPS.LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD_DEF 20
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD_MAX 1000

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS_DEF 90.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS_MAX 180.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD_DEF 1
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD_MAX 100

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT_PARAM "Cohda_RPS.LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT_DEF 10
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT_MAX 1000

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH_MIN 0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH_DEF 10
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH_MAX 100

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CONTINUOUS_CALIBRATION_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_CONTINUOUS_CALIBRATION"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_CONTINUOUS_CALIBRATION_DEF false

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH_DEF 10.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED_PARAM "Cohda_RPS.LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED_DEF 1.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m_PARAM "Cohda_RPS.LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m_DEF 50.0
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m_MAX 200.0

#define default_stack_Cohda_RPS_MAX_ACC_LONG_MPSS_PARAM "Cohda_RPS.MAX_ACC_LONG_MPSS"
#define default_stack_Cohda_RPS_MAX_ACC_LONG_MPSS_MIN 0.0
#define default_stack_Cohda_RPS_MAX_ACC_LONG_MPSS_DEF 0.5
#define default_stack_Cohda_RPS_MAX_ACC_LONG_MPSS_MAX 2.0

#define default_stack_Cohda_RPS_TX_ENABLE_PARAM "Cohda_RPS.TX_ENABLE"
#define default_stack_Cohda_RPS_TX_ENABLE_DEF true

#define default_stack_Cohda_RPS_RX_ENABLE_PARAM "Cohda_RPS.RX_ENABLE"
#define default_stack_Cohda_RPS_RX_ENABLE_DEF true

#define default_stack_Cohda_RPS_TX_DEFAULT_POWER_PARAM "Cohda_RPS.TX_DEFAULT_POWER"
#define default_stack_Cohda_RPS_TX_DEFAULT_POWER_MIN -10
#define default_stack_Cohda_RPS_TX_DEFAULT_POWER_DEF -1
#define default_stack_Cohda_RPS_TX_DEFAULT_POWER_MAX 30

#define default_stack_Cohda_RPS_TX_DEFAULT_ANTENNA_PARAM "Cohda_RPS.TX_DEFAULT_ANTENNA"
#define default_stack_Cohda_RPS_TX_DEFAULT_ANTENNA_MIN -1
#define default_stack_Cohda_RPS_TX_DEFAULT_ANTENNA_DEF -1
#define default_stack_Cohda_RPS_TX_DEFAULT_ANTENNA_MAX 3

#define default_stack_Cohda_RPS_TX_PROBE_ANTENNA_MODE_PARAM "Cohda_RPS.TX_PROBE_ANTENNA_MODE"
#define default_stack_Cohda_RPS_TX_PROBE_ANTENNA_MODE_MIN 0
#define default_stack_Cohda_RPS_TX_PROBE_ANTENNA_MODE_DEF 0
#define default_stack_Cohda_RPS_TX_PROBE_ANTENNA_MODE_MAX 4

#define default_stack_Cohda_RPS_DOT11_RADIO_CHANNEL_PARAM "Cohda_RPS.DOT11_RADIO_CHANNEL"
#define default_stack_Cohda_RPS_DOT11_RADIO_CHANNEL_MIN 0
#define default_stack_Cohda_RPS_DOT11_RADIO_CHANNEL_DEF 150
#define default_stack_Cohda_RPS_DOT11_RADIO_CHANNEL_MAX 200

#define default_stack_Cohda_RPS_DOT11_RX_ANTENNA_PARAM "Cohda_RPS.DOT11_RX_ANTENNA"
#define default_stack_Cohda_RPS_DOT11_RX_ANTENNA_MIN 0
#define default_stack_Cohda_RPS_DOT11_RX_ANTENNA_DEF 3
#define default_stack_Cohda_RPS_DOT11_RX_ANTENNA_MAX 3

#define default_stack_Cohda_RPS_DOT11_DEFAULT_MCS_PARAM "Cohda_RPS.DOT11_DEFAULT_MCS"
#define default_stack_Cohda_RPS_DOT11_DEFAULT_MCS_MIN 0
#define default_stack_Cohda_RPS_DOT11_DEFAULT_MCS_DEF 10
#define default_stack_Cohda_RPS_DOT11_DEFAULT_MCS_MAX 255

#define default_stack_Cohda_RPS_DOT11_SHORT_RETRY_LIMIT_PARAM "Cohda_RPS.DOT11_SHORT_RETRY_LIMIT"
#define default_stack_Cohda_RPS_DOT11_SHORT_RETRY_LIMIT_MIN 0
#define default_stack_Cohda_RPS_DOT11_SHORT_RETRY_LIMIT_DEF 3
#define default_stack_Cohda_RPS_DOT11_SHORT_RETRY_LIMIT_MAX 255

#define default_stack_Cohda_RPS_DOT11_LONG_RETRY_LIMIT_PARAM "Cohda_RPS.DOT11_LONG_RETRY_LIMIT"
#define default_stack_Cohda_RPS_DOT11_LONG_RETRY_LIMIT_MIN 0
#define default_stack_Cohda_RPS_DOT11_LONG_RETRY_LIMIT_DEF 3
#define default_stack_Cohda_RPS_DOT11_LONG_RETRY_LIMIT_MAX 255

#define default_stack_Cohda_RPS_DOT11_DEFAULT_BSSID_PARAM "Cohda_RPS.DOT11_DEFAULT_BSSID"
#define default_stack_Cohda_RPS_DOT11_DEFAULT_BSSID_DEF "ff:ff:ff:ff:ff:ff"

#define default_stack_Cohda_RPS_DOT11_OVERRIDE_PROBE_MAC_ADDR_PARAM "Cohda_RPS.DOT11_OVERRIDE_PROBE_MAC_ADDR"
#define default_stack_Cohda_RPS_DOT11_OVERRIDE_PROBE_MAC_ADDR_DEF ""

#define default_stack_Cohda_RPS_RPS_RADIO_NUM_PARAM "Cohda_RPS.RPS_RADIO_NUM"
#define default_stack_Cohda_RPS_RPS_RADIO_NUM_DEF false

#define default_stack_Cohda_RPS_RPS_CHANNEL_NUM_PARAM "Cohda_RPS.RPS_CHANNEL_NUM"
#define default_stack_Cohda_RPS_RPS_CHANNEL_NUM_MIN 0
#define default_stack_Cohda_RPS_RPS_CHANNEL_NUM_DEF 0
#define default_stack_Cohda_RPS_RPS_CHANNEL_NUM_MAX 2

#define default_stack_Cohda_RPS_RPS_BANDWIDTH_MODE_PARAM "Cohda_RPS.RPS_BANDWIDTH_MODE"
#define default_stack_Cohda_RPS_RPS_BANDWIDTH_MODE_MIN 10
#define default_stack_Cohda_RPS_RPS_BANDWIDTH_MODE_DEF 10
#define default_stack_Cohda_RPS_RPS_BANDWIDTH_MODE_MAX 20

#define default_stack_Cohda_RPS_RPS_STA_PROBE_PERIOD_ms_PARAM "Cohda_RPS.RPS_STA_PROBE_PERIOD_ms"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_PERIOD_ms_MIN 20
#define default_stack_Cohda_RPS_RPS_STA_PROBE_PERIOD_ms_DEF 100
#define default_stack_Cohda_RPS_RPS_STA_PROBE_PERIOD_ms_MAX 5000

#define default_stack_Cohda_RPS_RPS_STA_FORCED_PROBE_PERIOD_ms_PARAM "Cohda_RPS.RPS_STA_FORCED_PROBE_PERIOD_ms"
#define default_stack_Cohda_RPS_RPS_STA_FORCED_PROBE_PERIOD_ms_MIN 20
#define default_stack_Cohda_RPS_RPS_STA_FORCED_PROBE_PERIOD_ms_DEF 1000
#define default_stack_Cohda_RPS_RPS_STA_FORCED_PROBE_PERIOD_ms_MAX 5000

#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_PARAM "Cohda_RPS.RPS_LOCATE_SYNC_TO_TOP"
#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_DEF false

#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms_PARAM "Cohda_RPS.RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms"
#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms_MIN 0
#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms_DEF 10
#define default_stack_Cohda_RPS_RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms_MAX 50

#define default_stack_Cohda_RPS_RPS_STA_PROBE_BURST_COUNT_PARAM "Cohda_RPS.RPS_STA_PROBE_BURST_COUNT"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BURST_COUNT_MIN 1
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BURST_COUNT_DEF 1
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BURST_COUNT_MAX 100

#define default_stack_Cohda_RPS_RPS_STA_MONITOR_DB_MAX_ENTRIES_PARAM "Cohda_RPS.RPS_STA_MONITOR_DB_MAX_ENTRIES"
#define default_stack_Cohda_RPS_RPS_STA_MONITOR_DB_MAX_ENTRIES_MIN 1
#define default_stack_Cohda_RPS_RPS_STA_MONITOR_DB_MAX_ENTRIES_DEF 100
#define default_stack_Cohda_RPS_RPS_STA_MONITOR_DB_MAX_ENTRIES_MAX 10000

#define default_stack_Cohda_RPS_RPS_BROADCAST_ANNOUNCE_PERIOD_ms_PARAM "Cohda_RPS.RPS_BROADCAST_ANNOUNCE_PERIOD_ms"
#define default_stack_Cohda_RPS_RPS_BROADCAST_ANNOUNCE_PERIOD_ms_MIN 100
#define default_stack_Cohda_RPS_RPS_BROADCAST_ANNOUNCE_PERIOD_ms_DEF 500
#define default_stack_Cohda_RPS_RPS_BROADCAST_ANNOUNCE_PERIOD_ms_MAX 60000

#define default_stack_Cohda_RPS_RPS_STA_PROBE_MCS_PARAM "Cohda_RPS.RPS_STA_PROBE_MCS"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_MCS_MIN 0
#define default_stack_Cohda_RPS_RPS_STA_PROBE_MCS_DEF 10
#define default_stack_Cohda_RPS_RPS_STA_PROBE_MCS_MAX 15

#define default_stack_Cohda_RPS_RPS_STA_PROBE_BROADCAST_MCS_PARAM "Cohda_RPS.RPS_STA_PROBE_BROADCAST_MCS"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BROADCAST_MCS_MIN 0
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BROADCAST_MCS_DEF 10
#define default_stack_Cohda_RPS_RPS_STA_PROBE_BROADCAST_MCS_MAX 15

#define default_stack_Cohda_RPS_RPS_STA_PROBE_USE_RTSCTS_PARAM "Cohda_RPS.RPS_STA_PROBE_USE_RTSCTS"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_USE_RTSCTS_DEF false

#define default_stack_Cohda_RPS_RPS_STA_PROBE_RX_QUIET_PERIOD_ms_PARAM "Cohda_RPS.RPS_STA_PROBE_RX_QUIET_PERIOD_ms"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_RX_QUIET_PERIOD_ms_MIN 0
#define default_stack_Cohda_RPS_RPS_STA_PROBE_RX_QUIET_PERIOD_ms_DEF 5000
#define default_stack_Cohda_RPS_RPS_STA_PROBE_RX_QUIET_PERIOD_ms_MAX 60000

#define default_stack_Cohda_RPS_RPS_STA_PROBE_DISABLE_PARAM "Cohda_RPS.RPS_STA_PROBE_DISABLE"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_DISABLE_DEF false

#define default_stack_Cohda_RPS_RPS_STA_PROBE_NORETRIES_PARAM "Cohda_RPS.RPS_STA_PROBE_NORETRIES"
#define default_stack_Cohda_RPS_RPS_STA_PROBE_NORETRIES_DEF true

#define default_stack_Cohda_RPS_RPS_ESTIMATION_MODE_PARAM "Cohda_RPS.RPS_ESTIMATION_MODE"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MODE_MIN 0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MODE_DEF 4
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MODE_MAX 4

#define default_stack_Cohda_RPS_RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns_PARAM "Cohda_RPS.RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns_DEF 80.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns_MAX 1000.0

#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MIN_WIDTH_s_PARAM "Cohda_RPS.RPS_ESTIMATION_SLIDING_MIN_WIDTH_s"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MIN_WIDTH_s_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MIN_WIDTH_s_DEF 1.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MIN_WIDTH_s_MAX 10.0

#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s_PARAM "Cohda_RPS.RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s_DEF 1.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s_MAX 10.0

#define default_stack_Cohda_RPS_RPS_ESTIMATION_LINEAR_FIT_WIDTH_s_PARAM "Cohda_RPS.RPS_ESTIMATION_LINEAR_FIT_WIDTH_s"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_LINEAR_FIT_WIDTH_s_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_LINEAR_FIT_WIDTH_s_DEF 3.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_LINEAR_FIT_WIDTH_s_MAX 10.0

#define default_stack_Cohda_RPS_RPS_ESTIMATION_MAXIDLE_s_PARAM "Cohda_RPS.RPS_ESTIMATION_MAXIDLE_s"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MAXIDLE_s_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MAXIDLE_s_DEF 4.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_MAXIDLE_s_MAX 100.0

#define default_stack_Cohda_RPS_RPS_ESTIMATION_UPDATE_PERIOD_s_PARAM "Cohda_RPS.RPS_ESTIMATION_UPDATE_PERIOD_s"
#define default_stack_Cohda_RPS_RPS_ESTIMATION_UPDATE_PERIOD_s_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ESTIMATION_UPDATE_PERIOD_s_DEF 0.1
#define default_stack_Cohda_RPS_RPS_ESTIMATION_UPDATE_PERIOD_s_MAX 10.0

#define default_stack_Cohda_RPS_RPS_ABS_POSITIONING_DISABLED_PARAM "Cohda_RPS.RPS_ABS_POSITIONING_DISABLED"
#define default_stack_Cohda_RPS_RPS_ABS_POSITIONING_DISABLED_DEF true

#define default_stack_Cohda_RPS_RPS_ABS_POS_USE_STA_ADVERTISED_POSITIONS_PARAM "Cohda_RPS.RPS_ABS_POS_USE_STA_ADVERTISED_POSITIONS"
#define default_stack_Cohda_RPS_RPS_ABS_POS_USE_STA_ADVERTISED_POSITIONS_DEF false

#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_CONF_TRESHOLD_PARAM "Cohda_RPS.RPS_ABS_POS_RANGE_CONF_TRESHOLD"
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_CONF_TRESHOLD_MIN 0
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_CONF_TRESHOLD_DEF 20
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_CONF_TRESHOLD_MAX 100

#define default_stack_Cohda_RPS_RPS_ABS_POS_RSSI_THRESHOLD_PARAM "Cohda_RPS.RPS_ABS_POS_RSSI_THRESHOLD"
#define default_stack_Cohda_RPS_RPS_ABS_POS_RSSI_THRESHOLD_MIN -120
#define default_stack_Cohda_RPS_RPS_ABS_POS_RSSI_THRESHOLD_DEF -120
#define default_stack_Cohda_RPS_RPS_ABS_POS_RSSI_THRESHOLD_MAX 0

#define default_stack_Cohda_RPS_RPS_ABS_POS_HISTORY_LENGTH_PARAM "Cohda_RPS.RPS_ABS_POS_HISTORY_LENGTH"
#define default_stack_Cohda_RPS_RPS_ABS_POS_HISTORY_LENGTH_MIN 10
#define default_stack_Cohda_RPS_RPS_ABS_POS_HISTORY_LENGTH_DEF 100
#define default_stack_Cohda_RPS_RPS_ABS_POS_HISTORY_LENGTH_MAX 1000

#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm_PARAM "Cohda_RPS.RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm"
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm_DEF 25.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm_MAX 200.0

#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_POS_THRESHOLD_m_PARAM "Cohda_RPS.RPS_ABS_POS_DELTA_POS_THRESHOLD_m"
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_POS_THRESHOLD_m_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_POS_THRESHOLD_m_DEF 22.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_DELTA_POS_THRESHOLD_m_MAX 200.0

#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_BIAS_m_PARAM "Cohda_RPS.RPS_ABS_POS_RANGE_BIAS_m"
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_BIAS_m_MIN -100.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_BIAS_m_DEF 5.0
#define default_stack_Cohda_RPS_RPS_ABS_POS_RANGE_BIAS_m_MAX 100.0

#define default_stack_Cohda_RPS_RPS_ABS_LOW_SPEED_THRESHOLD_mps_PARAM "Cohda_RPS.RPS_ABS_LOW_SPEED_THRESHOLD_mps"
#define default_stack_Cohda_RPS_RPS_ABS_LOW_SPEED_THRESHOLD_mps_MIN 0.0
#define default_stack_Cohda_RPS_RPS_ABS_LOW_SPEED_THRESHOLD_mps_DEF 0.5
#define default_stack_Cohda_RPS_RPS_ABS_LOW_SPEED_THRESHOLD_mps_MAX 10.0

#define default_stack_Cohda_RPS_LOCATE_TUNNEL_DEBUG_SOLUTION_OUTPUT_ENABLE_PARAM "Cohda_RPS.LOCATE_TUNNEL_DEBUG_SOLUTION_OUTPUT_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_TUNNEL_DEBUG_SOLUTION_OUTPUT_ENABLE_DEF false

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_ENABLE_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_INPUT_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_ENABLE_DEF false

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_PORT_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_INPUT_PORT"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_PORT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_PORT_DEF 33992
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_IMU_PORT_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_INPUT_IMU_PORT"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_IMU_PORT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_IMU_PORT_DEF 5555
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_IMU_PORT_MAX 65535

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_HOST_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_FORWARD_HOST"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_PORT_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_FORWARD_PORT"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_PORT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_PORT_DEF 33992
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_FORWARD_PORT_MAX 65535

#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_LOG_ENABLE_PARAM "Cohda_RPS.LOCATE_CLOUD_RANGING_INPUT_LOG_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_CLOUD_RANGING_INPUT_LOG_ENABLE_DEF false

#define default_stack_Cohda_RPS_LLC_DEVICE_NAME_PARAM "Cohda_RPS.LLC_DEVICE_NAME"
#define default_stack_Cohda_RPS_LLC_DEVICE_NAME_DEF "cw-llc0"

#define default_stack_Cohda_RPS_LLC_LOG_ENABLE_PARAM "Cohda_RPS.LLC_LOG_ENABLE"
#define default_stack_Cohda_RPS_LLC_LOG_ENABLE_DEF false

#define default_stack_Cohda_RPS_LLC_LOG_ALL_PARAM "Cohda_RPS.LLC_LOG_ALL"
#define default_stack_Cohda_RPS_LLC_LOG_ALL_DEF false

#define default_stack_Cohda_RPS_LLC_LOG_REPLAY_FILENAME_PARAM "Cohda_RPS.LLC_LOG_REPLAY_FILENAME"
#define default_stack_Cohda_RPS_LLC_LOG_REPLAY_FILENAME_DEF ""

#define default_stack_Cohda_RPS_LLC_LOG_BUFFER_MAX_PARAM "Cohda_RPS.LLC_LOG_BUFFER_MAX"
#define default_stack_Cohda_RPS_LLC_LOG_BUFFER_MAX_MIN 0
#define default_stack_Cohda_RPS_LLC_LOG_BUFFER_MAX_DEF 5000
#define default_stack_Cohda_RPS_LLC_LOG_BUFFER_MAX_MAX 5000

#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_FILENAME_PARAM "Cohda_RPS.LOCATE_REPLAY_RAWRANGING_FILENAME"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_FILENAME_DEF ""

#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM_PARAM "Cohda_RPS.LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM_MIN 0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM_DEF 0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM_MAX 10000000

#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM_PARAM "Cohda_RPS.LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM_MIN 0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM_DEF 2000000000
#define default_stack_Cohda_RPS_LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM_MAX 2000000000

#define default_stack_Cohda_RPS_LOCATE_REPLAY_REALTIME_PARAM "Cohda_RPS.LOCATE_REPLAY_REALTIME"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_REALTIME_DEF true

#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_SEC_PARAM "Cohda_RPS.LOCATE_REPLAY_INTERPACKET_DELAY_SEC"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_SEC_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_SEC_DEF 0.0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_SEC_MAX 0.99

#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM_PARAM "Cohda_RPS.LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM"
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM_MIN 0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM_DEF 0
#define default_stack_Cohda_RPS_LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM_MAX 10000000

#define default_stack_Cohda_RPS_LLC_FORWARD_ENABLE_PARAM "Cohda_RPS.LLC_FORWARD_ENABLE"
#define default_stack_Cohda_RPS_LLC_FORWARD_ENABLE_DEF false

#define default_stack_Cohda_RPS_LLC_FORWARD_HOST_PARAM "Cohda_RPS.LLC_FORWARD_HOST"
#define default_stack_Cohda_RPS_LLC_FORWARD_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_LLC_FORWARD_PORT_PARAM "Cohda_RPS.LLC_FORWARD_PORT"
#define default_stack_Cohda_RPS_LLC_FORWARD_PORT_MIN 0
#define default_stack_Cohda_RPS_LLC_FORWARD_PORT_DEF 37009
#define default_stack_Cohda_RPS_LLC_FORWARD_PORT_MAX 65535

#define default_stack_Cohda_RPS_RPS_LOG_ENABLE_PARAM "Cohda_RPS.RPS_LOG_ENABLE"
#define default_stack_Cohda_RPS_RPS_LOG_ENABLE_DEF false

#define default_stack_Cohda_RPS_EXTERNAL_DELAY_CORRECTION_FACTOR_ns_PARAM "Cohda_RPS.EXTERNAL_DELAY_CORRECTION_FACTOR_ns"
#define default_stack_Cohda_RPS_EXTERNAL_DELAY_CORRECTION_FACTOR_ns_MIN -1000
#define default_stack_Cohda_RPS_EXTERNAL_DELAY_CORRECTION_FACTOR_ns_DEF 0
#define default_stack_Cohda_RPS_EXTERNAL_DELAY_CORRECTION_FACTOR_ns_MAX 1000

#define default_stack_Cohda_RPS_SITE_POSITION_IS_FIXED_PARAM "Cohda_RPS.SITE_POSITION_IS_FIXED"
#define default_stack_Cohda_RPS_SITE_POSITION_IS_FIXED_DEF false

#define default_stack_Cohda_RPS_SITE_POSITION_MAPID_PARAM "Cohda_RPS.SITE_POSITION_MAPID"
#define default_stack_Cohda_RPS_SITE_POSITION_MAPID_MIN 0
#define default_stack_Cohda_RPS_SITE_POSITION_MAPID_DEF 0
#define default_stack_Cohda_RPS_SITE_POSITION_MAPID_MAX 2147483647

#define default_stack_Cohda_RPS_SITE_POSITION_MAPVERSION_PARAM "Cohda_RPS.SITE_POSITION_MAPVERSION"
#define default_stack_Cohda_RPS_SITE_POSITION_MAPVERSION_MIN 0
#define default_stack_Cohda_RPS_SITE_POSITION_MAPVERSION_DEF 0
#define default_stack_Cohda_RPS_SITE_POSITION_MAPVERSION_MAX 2147483647

#define default_stack_Cohda_RPS_SITE_POSITION_EDGEID_PARAM "Cohda_RPS.SITE_POSITION_EDGEID"
#define default_stack_Cohda_RPS_SITE_POSITION_EDGEID_MIN 0
#define default_stack_Cohda_RPS_SITE_POSITION_EDGEID_DEF 0
#define default_stack_Cohda_RPS_SITE_POSITION_EDGEID_MAX 2147483647

#define default_stack_Cohda_RPS_SITE_POSITION_RANGE_m_PARAM "Cohda_RPS.SITE_POSITION_RANGE_m"
#define default_stack_Cohda_RPS_SITE_POSITION_RANGE_m_MIN 0.0
#define default_stack_Cohda_RPS_SITE_POSITION_RANGE_m_DEF 0.0
#define default_stack_Cohda_RPS_SITE_POSITION_RANGE_m_MAX 1000000.0

#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LATITUDE_PARAM "Cohda_RPS.SITE_POSITION_WGS84_LATITUDE"
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LATITUDE_MIN -90.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LATITUDE_DEF 0.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LATITUDE_MAX 90.0

#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LONGITUDE_PARAM "Cohda_RPS.SITE_POSITION_WGS84_LONGITUDE"
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LONGITUDE_MIN -180.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LONGITUDE_DEF 0.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_LONGITUDE_MAX 180.0

#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_ELEVATION_PARAM "Cohda_RPS.SITE_POSITION_WGS84_ELEVATION"
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_ELEVATION_MIN -500.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_ELEVATION_DEF 0.0
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_ELEVATION_MAX 6144.0

#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_USE_GPS_PARAM "Cohda_RPS.SITE_POSITION_WGS84_USE_GPS"
#define default_stack_Cohda_RPS_SITE_POSITION_WGS84_USE_GPS_DEF false

#define default_stack_Cohda_RPS_RPS_API_TEST_ENABLED_PARAM "Cohda_RPS.RPS_API_TEST_ENABLED"
#define default_stack_Cohda_RPS_RPS_API_TEST_ENABLED_DEF false

#define default_stack_Cohda_RPS_RPS_API_TEST_UPDATE_PERIOD_ms_PARAM "Cohda_RPS.RPS_API_TEST_UPDATE_PERIOD_ms"
#define default_stack_Cohda_RPS_RPS_API_TEST_UPDATE_PERIOD_ms_MIN 100
#define default_stack_Cohda_RPS_RPS_API_TEST_UPDATE_PERIOD_ms_DEF 200
#define default_stack_Cohda_RPS_RPS_API_TEST_UPDATE_PERIOD_ms_MAX 5000

#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_PORT_PARAM "Cohda_RPS.RPS_API_TEST_STATUS_PORT"
#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_PORT_MIN 0
#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_PORT_DEF 33993
#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_PORT_MAX 65535

#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_HOST_PARAM "Cohda_RPS.RPS_API_TEST_STATUS_HOST"
#define default_stack_Cohda_RPS_RPS_API_TEST_STATUS_HOST_DEF ""

#define default_stack_Cohda_RPS_RPS_REDPINE_TAG_EXPERIMENTAL_PARAM "Cohda_RPS.RPS_REDPINE_TAG_EXPERIMENTAL"
#define default_stack_Cohda_RPS_RPS_REDPINE_TAG_EXPERIMENTAL_MIN 0
#define default_stack_Cohda_RPS_RPS_REDPINE_TAG_EXPERIMENTAL_DEF 0
#define default_stack_Cohda_RPS_RPS_REDPINE_TAG_EXPERIMENTAL_MAX 2

#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps_PARAM "Cohda_RPS.RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps"
#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps_MIN -50000000.0
#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps_DEF -210000.0
#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps_MAX 50000000.0

#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_EXPERIMENTAL_CHANEST_REQUEST_PARAM "Cohda_RPS.RM_FTM_REDPINE_TAG_EXPERIMENTAL_CHANEST_REQUEST"
#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_EXPERIMENTAL_CHANEST_REQUEST_DEF false

#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_PROBE_FAULTY_FIRMWARE_PARAM "Cohda_RPS.RM_FTM_REDPINE_TAG_PROBE_FAULTY_FIRMWARE"
#define default_stack_Cohda_RPS_RM_FTM_REDPINE_TAG_PROBE_FAULTY_FIRMWARE_DEF false

#define default_stack_Cohda_RPS_RM_DR_ENABLE_PARAM "Cohda_RPS.RM_DR_ENABLE"
#define default_stack_Cohda_RPS_RM_DR_ENABLE_DEF false

#define default_stack_Cohda_RPS_RM_DR_REFERENCE_FRAME_PERIOD_ms_PARAM "Cohda_RPS.RM_DR_REFERENCE_FRAME_PERIOD_ms"
#define default_stack_Cohda_RPS_RM_DR_REFERENCE_FRAME_PERIOD_ms_MIN 10
#define default_stack_Cohda_RPS_RM_DR_REFERENCE_FRAME_PERIOD_ms_DEF 100
#define default_stack_Cohda_RPS_RM_DR_REFERENCE_FRAME_PERIOD_ms_MAX 10000

#define default_stack_Cohda_RPS_BNO_DEVICE_NAME_PARAM "Cohda_RPS.BNO_DEVICE_NAME"
#define default_stack_Cohda_RPS_BNO_DEVICE_NAME_DEF "/dev/ttyUSB0"

#define default_stack_Cohda_RPS_UBX_ENABLE_PARAM "Cohda_RPS.UBX_ENABLE"
#define default_stack_Cohda_RPS_UBX_ENABLE_DEF false

#define default_stack_Cohda_RPS_UBX_PCAP_LOG_ENABLE_PARAM "Cohda_RPS.UBX_PCAP_LOG_ENABLE"
#define default_stack_Cohda_RPS_UBX_PCAP_LOG_ENABLE_DEF false

#define default_stack_Cohda_RPS_UBX_LOG_REPLAY_FILENAME_PARAM "Cohda_RPS.UBX_LOG_REPLAY_FILENAME"
#define default_stack_Cohda_RPS_UBX_LOG_REPLAY_FILENAME_DEF ""

#define default_stack_Cohda_RPS_IMU_ORIENTATION_BETA_PARAM "Cohda_RPS.IMU_ORIENTATION_BETA"
#define default_stack_Cohda_RPS_IMU_ORIENTATION_BETA_MIN 0.0
#define default_stack_Cohda_RPS_IMU_ORIENTATION_BETA_DEF 0.1
#define default_stack_Cohda_RPS_IMU_ORIENTATION_BETA_MAX 1.0

#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_X_m_PARAM "Cohda_RPS.IMU_LA_VRP_TO_SENS_X_m"
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_X_m_MIN -100.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_X_m_DEF 0.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_X_m_MAX 100.0

#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Y_m_PARAM "Cohda_RPS.IMU_LA_VRP_TO_SENS_Y_m"
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Y_m_MIN -100.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Y_m_DEF 0.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Y_m_MAX 100.0

#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Z_m_PARAM "Cohda_RPS.IMU_LA_VRP_TO_SENS_Z_m"
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Z_m_MIN -100.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Z_m_DEF 0.0
#define default_stack_Cohda_RPS_IMU_LA_VRP_TO_SENS_Z_m_MAX 100.0

#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_ROLL_X_deg_PARAM "Cohda_RPS.IMU_MA_VR_TO_SENS_ROLL_X_deg"
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_ROLL_X_deg_MIN -180.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_ROLL_X_deg_DEF 0.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_ROLL_X_deg_MAX 180.0

#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_PITCH_Y_deg_PARAM "Cohda_RPS.IMU_MA_VR_TO_SENS_PITCH_Y_deg"
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_PITCH_Y_deg_MIN -180.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_PITCH_Y_deg_DEF 0.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_PITCH_Y_deg_MAX 180.0

#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_YAW_Z_deg_PARAM "Cohda_RPS.IMU_MA_VR_TO_SENS_YAW_Z_deg"
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_YAW_Z_deg_MIN -180.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_YAW_Z_deg_DEF 0.0
#define default_stack_Cohda_RPS_IMU_MA_VR_TO_SENS_YAW_Z_deg_MAX 180.0

#define default_stack_Cohda_RPS_IMU_STATIONARY_GYRO_THRESHOLD_PARAM "Cohda_RPS.IMU_STATIONARY_GYRO_THRESHOLD"
#define default_stack_Cohda_RPS_IMU_STATIONARY_GYRO_THRESHOLD_MIN 0.0
#define default_stack_Cohda_RPS_IMU_STATIONARY_GYRO_THRESHOLD_DEF 0.002
#define default_stack_Cohda_RPS_IMU_STATIONARY_GYRO_THRESHOLD_MAX 1e+20

#define default_stack_Cohda_RPS_IMU_STATIONARY_ACCEL_THRESHOLD_PARAM "Cohda_RPS.IMU_STATIONARY_ACCEL_THRESHOLD"
#define default_stack_Cohda_RPS_IMU_STATIONARY_ACCEL_THRESHOLD_MIN 0.0
#define default_stack_Cohda_RPS_IMU_STATIONARY_ACCEL_THRESHOLD_DEF 1.0
#define default_stack_Cohda_RPS_IMU_STATIONARY_ACCEL_THRESHOLD_MAX 1e+20

#define default_stack_Cohda_RPS_IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT_PARAM "Cohda_RPS.IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT"
#define default_stack_Cohda_RPS_IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT_MIN 0
#define default_stack_Cohda_RPS_IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT_DEF 5
#define default_stack_Cohda_RPS_IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT_MAX 100

#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_START_DELAY_PARAM "Cohda_RPS.IMU_STATIONARY_CALIBRATION_START_DELAY"
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_START_DELAY_MIN 0
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_START_DELAY_DEF 15
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_START_DELAY_MAX 100

#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_END_DELAY_PARAM "Cohda_RPS.IMU_STATIONARY_CALIBRATION_END_DELAY"
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_END_DELAY_MIN 0
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_END_DELAY_DEF 12
#define default_stack_Cohda_RPS_IMU_STATIONARY_CALIBRATION_END_DELAY_MAX 100

#define default_stack_Cohda_RPS_IMU_ATTITUDE_ESTIMATION_ENABLE_PARAM "Cohda_RPS.IMU_ATTITUDE_ESTIMATION_ENABLE"
#define default_stack_Cohda_RPS_IMU_ATTITUDE_ESTIMATION_ENABLE_DEF false

#define default_stack_Cohda_RPS_GPS_OUT_ENABLE_PARAM "Cohda_RPS.GPS_OUT_ENABLE"
#define default_stack_Cohda_RPS_GPS_OUT_ENABLE_DEF false

#define default_stack_Cohda_RPS_GPS_OUT_PORT_PARAM "Cohda_RPS.GPS_OUT_PORT"
#define default_stack_Cohda_RPS_GPS_OUT_PORT_MIN 0
#define default_stack_Cohda_RPS_GPS_OUT_PORT_DEF 33992
#define default_stack_Cohda_RPS_GPS_OUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_GPS_OUT_HOST_PARAM "Cohda_RPS.GPS_OUT_HOST"
#define default_stack_Cohda_RPS_GPS_OUT_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_GPS_OUT_UBX_DEBUG_PARAM "Cohda_RPS.GPS_OUT_UBX_DEBUG"
#define default_stack_Cohda_RPS_GPS_OUT_UBX_DEBUG_DEF false

#define default_stack_Cohda_RPS_USE_IEEE1609_WSAS_PARAM "Cohda_RPS.USE_IEEE1609_WSAS"
#define default_stack_Cohda_RPS_USE_IEEE1609_WSAS_DEF false

#define default_stack_Cohda_RPS_TARGET_PARAM_UPDATE_TIMEOUT_s_PARAM "Cohda_RPS.TARGET_PARAM_UPDATE_TIMEOUT_s"
#define default_stack_Cohda_RPS_TARGET_PARAM_UPDATE_TIMEOUT_s_MIN 0
#define default_stack_Cohda_RPS_TARGET_PARAM_UPDATE_TIMEOUT_s_DEF 5
#define default_stack_Cohda_RPS_TARGET_PARAM_UPDATE_TIMEOUT_s_MAX 3000

#define default_stack_Cohda_RPS_LOCATE_CONFIG_FILE_NAME_PARAM "Cohda_RPS.LOCATE_CONFIG_FILE_NAME"
#define default_stack_Cohda_RPS_LOCATE_CONFIG_FILE_NAME_DEF "/mnt/ubi/locate/locate_config.json"

#define default_stack_Cohda_RPS_LOCATE_CONFIG_UPDATE_FILE_NAME_PARAM "Cohda_RPS.LOCATE_CONFIG_UPDATE_FILE_NAME"
#define default_stack_Cohda_RPS_LOCATE_CONFIG_UPDATE_FILE_NAME_DEF "/mnt/ubi/locate/locate_config_update.json"

#define default_stack_Cohda_RPS_LOCATE_RPS_MODE_PARAM "Cohda_RPS.LOCATE_RPS_MODE"
#define default_stack_Cohda_RPS_LOCATE_RPS_MODE_MIN 0
#define default_stack_Cohda_RPS_LOCATE_RPS_MODE_DEF 1
#define default_stack_Cohda_RPS_LOCATE_RPS_MODE_MAX 255

#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps_PARAM "Cohda_RPS.LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps"
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps_MIN -50000000.0
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps_DEF 0.0
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps_MAX 50000000.0

#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE_PARAM "Cohda_RPS.LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE"
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE_MIN 0
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE_DEF 1
#define default_stack_Cohda_RPS_LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE_MAX 65535

#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_HOST_PARAM "Cohda_RPS.LOCATE_POSOUTPUT_HOST"
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_PORT_PARAM "Cohda_RPS.LOCATE_POSOUTPUT_PORT"
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_PORT_MIN 0
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_PORT_DEF 33994
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_ENABLE_PARAM "Cohda_RPS.LOCATE_POSOUTPUT_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_ENABLE_DEF false

#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_LOG_ENABLE_PARAM "Cohda_RPS.LOCATE_POSOUTPUT_LOG_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_POSOUTPUT_LOG_ENABLE_DEF false

#define default_stack_Cohda_RPS_RPS_EXIT_SEND_NO_FIX_TO_LPH_PARAM "Cohda_RPS.RPS_EXIT_SEND_NO_FIX_TO_LPH"
#define default_stack_Cohda_RPS_RPS_EXIT_SEND_NO_FIX_TO_LPH_DEF false

#define default_stack_Cohda_RPS_EXTERNAL_INPUT_ENABLE_PARAM "Cohda_RPS.EXTERNAL_INPUT_ENABLE"
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_ENABLE_DEF false

#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TYPE_PARAM "Cohda_RPS.EXTERNAL_INPUT_TYPE"
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TYPE_DEF false

#define default_stack_Cohda_RPS_EXTERNAL_INPUT_PORT_PARAM "Cohda_RPS.EXTERNAL_INPUT_PORT"
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_PORT_MIN 0
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_PORT_DEF 3232
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TIMEOUT_ms_PARAM "Cohda_RPS.EXTERNAL_INPUT_TIMEOUT_ms"
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TIMEOUT_ms_MIN 200
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TIMEOUT_ms_DEF 200
#define default_stack_Cohda_RPS_EXTERNAL_INPUT_TIMEOUT_ms_MAX 2000

#define default_stack_Cohda_RPS_LOCATE_VEHICLE_DIRECTION_FROM_IMU_PARAM "Cohda_RPS.LOCATE_VEHICLE_DIRECTION_FROM_IMU"
#define default_stack_Cohda_RPS_LOCATE_VEHICLE_DIRECTION_FROM_IMU_DEF false

#define default_stack_Cohda_RPS_TM_USE_RPS_ANNOUCEMENTS_PARAM "Cohda_RPS.TM_USE_RPS_ANNOUCEMENTS"
#define default_stack_Cohda_RPS_TM_USE_RPS_ANNOUCEMENTS_DEF true

#define default_stack_Cohda_RPS_TM_USE_BEACONS_PARAM "Cohda_RPS.TM_USE_BEACONS"
#define default_stack_Cohda_RPS_TM_USE_BEACONS_DEF false

#define default_stack_Cohda_RPS_TM_USE_TAG_PROBES_PARAM "Cohda_RPS.TM_USE_TAG_PROBES"
#define default_stack_Cohda_RPS_TM_USE_TAG_PROBES_DEF true

#define default_stack_Cohda_RPS_TM_USE_IEEE1609_WSAS_PARAM "Cohda_RPS.TM_USE_IEEE1609_WSAS"
#define default_stack_Cohda_RPS_TM_USE_IEEE1609_WSAS_DEF false

#define default_stack_Cohda_RPS_TM_USE_ETSI_SAEM_PARAM "Cohda_RPS.TM_USE_ETSI_SAEM"
#define default_stack_Cohda_RPS_TM_USE_ETSI_SAEM_DEF false

#define default_stack_Cohda_RPS_ETSI_DUAL_RADIO_MODE_PARAM "Cohda_RPS.ETSI_DUAL_RADIO_MODE"
#define default_stack_Cohda_RPS_ETSI_DUAL_RADIO_MODE_DEF false

#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_pPSID_PARAM "Cohda_RPS.TM_LOCATE_SERVICE_pPSID"
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_pPSID_MIN 0x0ul
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_pPSID_DEF 0xe000001ful
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_pPSID_MAX 0xeffffffful

#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_PSID_PARAM "Cohda_RPS.TM_LOCATE_SERVICE_PSID"
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_PSID_MIN 0x0ul
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_PSID_DEF 0x20409ful
#define default_stack_Cohda_RPS_TM_LOCATE_SERVICE_PSID_MAX 0xeffffffful

#define default_stack_Cohda_RPS_TM_TRUST_UNKNOWN_DEVICES_PARAM "Cohda_RPS.TM_TRUST_UNKNOWN_DEVICES"
#define default_stack_Cohda_RPS_TM_TRUST_UNKNOWN_DEVICES_DEF true

#define default_stack_Cohda_RPS_RM_TAG_RX_SYNCHRONOUS_PROBE_ENABLE_PARAM "Cohda_RPS.RM_TAG_RX_SYNCHRONOUS_PROBE_ENABLE"
#define default_stack_Cohda_RPS_RM_TAG_RX_SYNCHRONOUS_PROBE_ENABLE_DEF false

#define default_stack_Cohda_RPS_RM_TAG_PROBE_BURST_COUNT_PARAM "Cohda_RPS.RM_TAG_PROBE_BURST_COUNT"
#define default_stack_Cohda_RPS_RM_TAG_PROBE_BURST_COUNT_MIN 1
#define default_stack_Cohda_RPS_RM_TAG_PROBE_BURST_COUNT_DEF 1
#define default_stack_Cohda_RPS_RM_TAG_PROBE_BURST_COUNT_MAX 10

#define default_stack_Cohda_RPS_RM_TAG_PROBE_PERIOD_ms_PARAM "Cohda_RPS.RM_TAG_PROBE_PERIOD_ms"
#define default_stack_Cohda_RPS_RM_TAG_PROBE_PERIOD_ms_MIN 10
#define default_stack_Cohda_RPS_RM_TAG_PROBE_PERIOD_ms_DEF 500
#define default_stack_Cohda_RPS_RM_TAG_PROBE_PERIOD_ms_MAX 10000

#define default_stack_Cohda_RPS_RM_TARGET_RSSI_LIMIT_dBm_PARAM "Cohda_RPS.RM_TARGET_RSSI_LIMIT_dBm"
#define default_stack_Cohda_RPS_RM_TARGET_RSSI_LIMIT_dBm_MIN -200
#define default_stack_Cohda_RPS_RM_TARGET_RSSI_LIMIT_dBm_DEF -100
#define default_stack_Cohda_RPS_RM_TARGET_RSSI_LIMIT_dBm_MAX 100

#define default_stack_Cohda_RPS_RM_DIRECTIONAL_ANTENNAS_PARAM "Cohda_RPS.RM_DIRECTIONAL_ANTENNAS"
#define default_stack_Cohda_RPS_RM_DIRECTIONAL_ANTENNAS_DEF false

#define default_stack_Cohda_RPS_RM_ANTENNA_1_HEADING_PARAM "Cohda_RPS.RM_ANTENNA_1_HEADING"
#define default_stack_Cohda_RPS_RM_ANTENNA_1_HEADING_MIN 0
#define default_stack_Cohda_RPS_RM_ANTENNA_1_HEADING_DEF 0
#define default_stack_Cohda_RPS_RM_ANTENNA_1_HEADING_MAX 360

#define default_stack_Cohda_RPS_RM_ANTENNA_2_HEADING_PARAM "Cohda_RPS.RM_ANTENNA_2_HEADING"
#define default_stack_Cohda_RPS_RM_ANTENNA_2_HEADING_MIN 0
#define default_stack_Cohda_RPS_RM_ANTENNA_2_HEADING_DEF 0
#define default_stack_Cohda_RPS_RM_ANTENNA_2_HEADING_MAX 360

#define default_stack_Cohda_RPS_RM_DIRECTIONAL_RSSI_DELTA_dBm_PARAM "Cohda_RPS.RM_DIRECTIONAL_RSSI_DELTA_dBm"
#define default_stack_Cohda_RPS_RM_DIRECTIONAL_RSSI_DELTA_dBm_MIN 1
#define default_stack_Cohda_RPS_RM_DIRECTIONAL_RSSI_DELTA_dBm_DEF 4
#define default_stack_Cohda_RPS_RM_DIRECTIONAL_RSSI_DELTA_dBm_MAX 20

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_AWARENESS_ENABLE_PARAM "Cohda_RPS.LOCATE_PROXIMITY_AWARENESS_ENABLE"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_AWARENESS_ENABLE_DEF false

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DIRECTION_FILTERING_PARAM "Cohda_RPS.LOCATE_PROXIMITY_DIRECTION_FILTERING"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DIRECTION_FILTERING_DEF true

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_UPDATE_PERIOD_s_PARAM "Cohda_RPS.LOCATE_PROXIMITY_UPDATE_PERIOD_s"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_UPDATE_PERIOD_s_MIN 0.1
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_UPDATE_PERIOD_s_DEF 0.2
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_UPDATE_PERIOD_s_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DEVICE_PERIOD_s_PARAM "Cohda_RPS.LOCATE_PROXIMITY_DEVICE_PERIOD_s"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DEVICE_PERIOD_s_MIN 0.1
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DEVICE_PERIOD_s_DEF 5.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_DEVICE_PERIOD_s_MAX 100.0

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND0_LIMIT_m_PARAM "Cohda_RPS.LOCATE_PROXIMITY_BAND0_LIMIT_m"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND0_LIMIT_m_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND0_LIMIT_m_DEF 0.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND0_LIMIT_m_MAX 1000.0

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND1_LIMIT_m_PARAM "Cohda_RPS.LOCATE_PROXIMITY_BAND1_LIMIT_m"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND1_LIMIT_m_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND1_LIMIT_m_DEF 30.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND1_LIMIT_m_MAX 1000.0

#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND2_LIMIT_m_PARAM "Cohda_RPS.LOCATE_PROXIMITY_BAND2_LIMIT_m"
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND2_LIMIT_m_MIN 0.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND2_LIMIT_m_DEF 60.0
#define default_stack_Cohda_RPS_LOCATE_PROXIMITY_BAND2_LIMIT_m_MAX 1000.0

#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_PARAM "Cohda_RPS.PAM_STATUS_OUTPUT_PORT"
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_MIN 0
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_DEF 33994
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_HOST_PARAM "Cohda_RPS.PAM_STATUS_OUTPUT_HOST"
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_ALT_PARAM "Cohda_RPS.PAM_STATUS_OUTPUT_PORT_ALT"
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_ALT_MIN 0
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_ALT_DEF 0
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_PORT_ALT_MAX 65535

#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_HOST_ALT_PARAM "Cohda_RPS.PAM_STATUS_OUTPUT_HOST_ALT"
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_HOST_ALT_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES_PARAM "Cohda_RPS.PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES"
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES_MIN 128
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES_DEF 16384
#define default_stack_Cohda_RPS_PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES_MAX 65535

#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_PORT_PARAM "Cohda_RPS.POS_STATUS_OUTPUT_PORT"
#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_PORT_MIN 0
#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_PORT_DEF 33994
#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_PORT_MAX 65535

#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_HOST_PARAM "Cohda_RPS.POS_STATUS_OUTPUT_HOST"
#define default_stack_Cohda_RPS_POS_STATUS_OUTPUT_HOST_DEF "127.0.0.1"

#define default_stack_Cohda_RPS_MULTI_DEVICE_ROLE_PARAM "Cohda_RPS.MULTI_DEVICE_ROLE"
#define default_stack_Cohda_RPS_MULTI_DEVICE_ROLE_MIN 0
#define default_stack_Cohda_RPS_MULTI_DEVICE_ROLE_DEF 0
#define default_stack_Cohda_RPS_MULTI_DEVICE_ROLE_MAX 2

#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_HOST_PARAM "Cohda_RPS.MULTI_DEVICE_MASTER_HOST"
#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_HOST_DEF ""

#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_PORT_PARAM "Cohda_RPS.MULTI_DEVICE_MASTER_PORT"
#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_PORT_MIN 0
#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_PORT_DEF 33991
#define default_stack_Cohda_RPS_MULTI_DEVICE_MASTER_PORT_MAX 65535

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_0_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_EUI_ID_0"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_0_DEF ""

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_1_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_EUI_ID_1"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_1_DEF ""

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_2_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_EUI_ID_2"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_2_DEF ""

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_3_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_EUI_ID_3"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_EUI_ID_3_DEF ""

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0_MIN 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0_DEF 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0_MAX 3

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1_MIN 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1_DEF 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1_MAX 3

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2_MIN 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2_DEF 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2_MAX 3

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3_MIN 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3_DEF 0
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3_MAX 3

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_0_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_TYPE_0"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_0_DEF false

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_1_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_TYPE_1"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_1_DEF false

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_2_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_TYPE_2"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_2_DEF false

#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_3_PARAM "Cohda_RPS.ASSOCIATED_DEVICE_ASSOCIATION_TYPE_3"
#define default_stack_Cohda_RPS_ASSOCIATED_DEVICE_ASSOCIATION_TYPE_3_DEF false

typedef struct default_stack_Cohda_RPS
{
  /**
   * RPS_AP_MODE_APLIST_FILENAME default is "/mnt/ubi/locate/locate_aplist.json"
   * Per-access point configuration file location
   */
  const char * RPS_AP_MODE_APLIST_FILENAME;

  /**
   * RPS_AP_MODE_NEW_APLIST_FILENAME default is "locate_new_aplist.json"
   * Newly discovered access point information file name
   */
  const char * RPS_AP_MODE_NEW_APLIST_FILENAME;

  /**
   * DEVICE_ID_STR default is ""
   * Device ID string, up to 16 characters
   */
  const char * DEVICE_ID_STR;

  /**
   * UDP_STATUS_HOST default is "127.0.0.1"
   * Status output is sent to this hostname, if blank status output messages will be disabled
   *Cohda_RPS.UDP_STATUS_HOST =
   */
  const char * UDP_STATUS_HOST;

  /**
   * RAW_RANGING_HOST default is "127.0.0.1"
   * Raw ranging data interface host-name
   */
  const char * RAW_RANGING_HOST;

  /**
   * LOCATE_TUNNEL_MAP_FILENAME default is ""
   * Absolute Map positioning service map filename - without .graphml or .json extensions
   */
  const char * LOCATE_TUNNEL_MAP_FILENAME;

  /**
   * LOCATE_MAPDATA_FILENAME default is ""
   * Text file containing XER encoded MAP data for Locate 'Tunnel' mode
   */
  const char * LOCATE_MAPDATA_FILENAME;

  /**
   * DOT11_DEFAULT_BSSID default is "ff:ff:ff:ff:ff:ff"
   * Default BSSID for all transmissions
   */
  const char * DOT11_DEFAULT_BSSID;

  /**
   * DOT11_OVERRIDE_PROBE_MAC_ADDR default is ""
   * MAC address override for probes - experimental, do not use!
   */
  const char * DOT11_OVERRIDE_PROBE_MAC_ADDR;

  /**
   * LOCATE_CLOUD_RANGING_FORWARD_HOST default is "127.0.0.1"
   * Locate Cloud UDP ranging forward host
   */
  const char * LOCATE_CLOUD_RANGING_FORWARD_HOST;

  /**
   * LLC_DEVICE_NAME default is "cw-llc0"
   *#############################################################################
   * Logging/Replay of llc.pcap
   *#############################################################################
   * The LLC interface network device name
   */
  const char * LLC_DEVICE_NAME;

  /**
   * LLC_LOG_REPLAY_FILENAME default is ""
   * llc.pcap replay filename (leave blank to disable)
   */
  const char * LLC_LOG_REPLAY_FILENAME;

  /**
   * LOCATE_REPLAY_RAWRANGING_FILENAME default is ""
   *#############################################################################
   * Logging/Replay of V2XLocate rpsrawranging.pcap log files
   *#############################################################################
   *Cohda_RPS.LOCATE_REPLAY_ENABLE = 0;0,1 # 0=False, 1=True (Enable/Disable)
   * rpsrawranginc.pcap replay filename (leave blank to disable)
   */
  const char * LOCATE_REPLAY_RAWRANGING_FILENAME;

  /**
   * LLC_FORWARD_HOST default is "127.0.0.1"
   * LLC event interface forwarding host
   */
  const char * LLC_FORWARD_HOST;

  /**
   * RPS_API_TEST_STATUS_HOST default is ""
   * Status output is sent to this hostname, if blank status output messages will be disabled
   */
  const char * RPS_API_TEST_STATUS_HOST;

  /**
   * BNO_DEVICE_NAME default is "/dev/ttyUSB0"
   * BNO dynamics sensor serial device name
   */
  const char * BNO_DEVICE_NAME;

  /**
   * UBX_LOG_REPLAY_FILENAME default is ""
   * UBX replay filename - rpsubx replay mode enabled if this variable is set to a valid replay log file
   */
  const char * UBX_LOG_REPLAY_FILENAME;

  /**
   * GPS_OUT_HOST default is "127.0.0.1"
   * GPS position data interface host-name
   */
  const char * GPS_OUT_HOST;

  /**
   * LOCATE_CONFIG_FILE_NAME default is "/mnt/ubi/locate/locate_config.json"
   *#########################################################
   * Locate core configuration
   *#########################################################
   */
  const char * LOCATE_CONFIG_FILE_NAME;

  /**
   * LOCATE_CONFIG_UPDATE_FILE_NAME default is "/mnt/ubi/locate/locate_config_update.json"
   */
  const char * LOCATE_CONFIG_UPDATE_FILE_NAME;

  /**
   * LOCATE_POSOUTPUT_HOST default is "127.0.0.1"
   *#########################################################
   * Locate service output handler configuration and control
   *#########################################################
   * Locate output service UDP host name target
   */
  const char * LOCATE_POSOUTPUT_HOST;

  /**
   * PAM_STATUS_OUTPUT_HOST default is "127.0.0.1"
   * PAM Status output is sent to this hostname, if blank status output messages will be disabled
   */
  const char * PAM_STATUS_OUTPUT_HOST;

  /**
   * PAM_STATUS_OUTPUT_HOST_ALT default is "127.0.0.1"
   * PAM Status output is sent to this hostname, if blank status output messages will be disabled
   */
  const char * PAM_STATUS_OUTPUT_HOST_ALT;

  /**
   * POS_STATUS_OUTPUT_HOST default is "127.0.0.1"
   * PAM Status output is sent to this hostname, if blank status output messages will be disabled
   */
  const char * POS_STATUS_OUTPUT_HOST;

  /**
   * MULTI_DEVICE_MASTER_HOST default is ""
   * Multi-device mode - master hostname (IPv6 address)
   */
  const char * MULTI_DEVICE_MASTER_HOST;

  /**
   * ASSOCIATED_DEVICE_EUI_ID_0 default is ""
   *###########################################################
   * Device Association Data Elements
   *###########################################################
   * Device EUI (64 bit)
   *   - EUI-64 of the associated device (64 bits to allow for 64-bit rf-tag UIDs)
   */
  const char * ASSOCIATED_DEVICE_EUI_ID_0;

  /**
   * ASSOCIATED_DEVICE_EUI_ID_1 default is ""
   */
  const char * ASSOCIATED_DEVICE_EUI_ID_1;

  /**
   * ASSOCIATED_DEVICE_EUI_ID_2 default is ""
   */
  const char * ASSOCIATED_DEVICE_EUI_ID_2;

  /**
   * ASSOCIATED_DEVICE_EUI_ID_3 default is ""
   */
  const char * ASSOCIATED_DEVICE_EUI_ID_3;

  /**
   * SITE_POSITION_WGS84_LATITUDE default is 0.0, min/max -90.0/90.0
   * WGS84 fixed site position
   * Note the use of upper-case "E" notation will result
   * in 'double' storage for these variables.
   */
  double SITE_POSITION_WGS84_LATITUDE;

  /**
   * SITE_POSITION_WGS84_LONGITUDE default is 0.0, min/max -180.0/180.0
   */
  double SITE_POSITION_WGS84_LONGITUDE;

  /**
   * DebugLevel default is 4, min/max -1/255
   ***************************************************************************
   **                                RPS                                     *
   ***************************************************************************
   * if != -1, override debug level for RPS module only
   */
  int32_t DebugLevel;

  /**
   * DEVICE_ID default is 0x0ul, min/max 0x0ul/0xfffffffful
   * Fixed unqiue device ID
   */
  uint32_t DEVICE_ID;

  /**
   * UDP_STATUS_PORT default is 33990, min/max 0/65535
   * Status output is sent to this port, set to zero to disable
   */
  int32_t UDP_STATUS_PORT;

  /**
   * UDP_STATUS_PERIOD_ms default is 1000, min/max 50/60000
   * Status output update period, in milliseconds, set equal to CORE_PROCESSING_PERIOD_ms
   * if you want one status output per core processing interval.
   */
  int32_t UDP_STATUS_PERIOD_ms;

  /**
   * CORE_PROCESSING_PERIOD_ms default is 100, min/max 50/1000
   * Core processing period in milliseconds. System core loop tick rate.
   */
  int32_t CORE_PROCESSING_PERIOD_ms;

  /**
   * RAW_RANGING_PORT default is 33991, min/max 0/65535
   * Raw ranging data sent to this UDP port
   */
  int32_t RAW_RANGING_PORT;

  /**
   * RAW_RANGING_VERSION default is 5, min/max 2/5
   * Raw ranging interface version, may be 2, 4 or 5
   */
  int32_t RAW_RANGING_VERSION;

  /**
   * LOCATE_TUNNEL_POSITIONING_MODE default is 3, min/max 0/3
   * Tunnel positioning mode,
   * 0 = basic,
   * 1 = basic with history filter
   * 2 = tracking
   * 3 = imu aided tracking ** NOTE, this is the only supported operating mode, other modes
   *     are purely for internal testing purposes only.
   */
  int32_t LOCATE_TUNNEL_POSITIONING_MODE;

  /**
   * LOCATE_TUNNEL_EDGE_TRACKING_MODE default is 4, min/max 0/9
   * Edge tracking mode
   * 0 = random edge,
   * 1 = minimum deviation path
   * 2 = imu driven (only use with LOCATE_TUNNEL_POSITIONING_MODE = 3)
   * 3 = imu driven - version 2 (only use with LOCATE_TUNNEL_POSITIONING_MODE = 3)
   * 4 = imu driven - version 4 (only use with LOCATE_TUNNEL_POSITIONING_MODE = 3)
   */
  int32_t LOCATE_TUNNEL_EDGE_TRACKING_MODE;

  /**
   * LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m default is 1.0, min/max -1.0/20.0
   * Inhibit submission of in-close ranges less than this value
   */
  float LOCATE_TUNNEL_INHIBIT_IN_CLOSE_RANGE_m;

  /**
   * LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD default is 20.0, min/max 0.0/100.0
   * Internal position variance threshold before tracking watchdog triggers.
   */
  float LOCATE_TUNNEL_POSITION_VARIANCE_THRESHOLD;

  /**
   * LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD default is 20.0, min/max 0.0/100.0
   * Internal range innovation threshold limit
   */
  float LOCATE_TUNNEL_RANGE_INNOVATION_THRESHOLD;

  /**
   * LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT default is 10, min/max 0/100
   * Internal tracking monitor bad state count threshold, for evasive action triggers
   */
  int32_t LOCATE_TUNNEL_TRACKING_MONITOR_BADSTATE_COUNT;

  /**
   * LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD default is 20, min/max 0/1000
   */
  int32_t LOCATE_TUNNEL_RANGE_INNOVATION_RUN_THRESHOLD;

  /**
   * LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS default is 90.0, min/max 0.0/180.0
   * Internal orientation deviation between intertial frame and map frame
   */
  float LOCATE_TUNNEL_IMU_OFFSET_THRESHOLD_DEGS;

  /**
   * LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD default is 1, min/max 0/100
   * orientation deviation between intertial frame and map frame run length limit
   */
  int32_t LOCATE_TUNNEL_IMU_OFFSET_RUN_THRESHOLD;

  /**
   * LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT default is 10, min/max 0/1000
   * Number of consecutive update intervals of no reference radio coverage before stopping tracking dynamics.
   */
  int32_t LOCATE_TUNNEL_TRACKING_LOST_REFERENCE_TRACKING_COUNT;

  /**
   * LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH default is 10, min/max 0/100
   * Minimum calibration measure run-length (updates)
   */
  int32_t LOCATE_TUNNEL_IMU_CAL_MIN_RUN_LENGTH;

  /**
   * LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH default is 10.0, min/max 0.0/100.0
   * The minimum distance from the end of a graph edge before we commence any IMU heading calibration
   */
  float LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_EDGE_END_LENGTH;

  /**
   * LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED default is 1.0, min/max 0.0/100.0
   * The minimum speed along a straight edge for IMU heading calibration
   */
  float LOCATE_TUNNEL_IMU_HEADING_CAL_MIN_SPEED;

  /**
   * LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m default is 50.0, min/max 0.0/200.0
   * Range from GPS position to tunnel portal node for map capture
   */
  float LOCATE_TUNNEL_PORTAL_CAPTURE_RANGE_m;

  /**
   * MAX_ACC_LONG_MPSS default is 0.5, min/max 0.0/2.0
   * Maximum acceleration value used in EKF positioning
   */
  float MAX_ACC_LONG_MPSS;

  /**
   * TX_DEFAULT_POWER default is -1, min/max -10/30
   * Default transmit power
   * note values <= 0 will force the use of the system TxPwrLevel_dBm instead
   */
  int32_t TX_DEFAULT_POWER;

  /**
   * TX_DEFAULT_ANTENNA default is -1, min/max -1/3
   * Default transmit antenna selection, bit-mask
   * -1 == use system TxAntenna value
   */
  int32_t TX_DEFAULT_ANTENNA;

  /**
   * TX_PROBE_ANTENNA_MODE default is 0, min/max 0/4
   * Antenna selection for transmiting probes
   * 0 - Uses default (i.e TX_DEFAULT_ANTENNA configuration)
   * 1 - Antenna 1
   * 2 - Antenna 2
   * 3 - Antenna 1 & 2
   * 4 - Toggle Antenna 1 & 2
   */
  int32_t TX_PROBE_ANTENNA_MODE;

  /**
   * DOT11_RADIO_CHANNEL default is 150, min/max 0/200
   *#############################################################################
   * RPS 802.11 radio configuration parameters
   *#############################################################################
   * Radio channel number to operate on
   */
  int32_t DOT11_RADIO_CHANNEL;

  /**
   * DOT11_RX_ANTENNA default is 3, min/max 0/3
   * Receive antenna configuration, bit-mask.. 1,2 or 3 for 2-antenna operation
   */
  int32_t DOT11_RX_ANTENNA;

  /**
   * DOT11_DEFAULT_MCS default is 10, min/max 0/255
   * Default RateID = 10 == QPSK
   */
  int32_t DOT11_DEFAULT_MCS;

  /**
   * DOT11_SHORT_RETRY_LIMIT default is 3, min/max 0/255
   * Short retry-limit (set short to limit retries for probe packetes)
   */
  int32_t DOT11_SHORT_RETRY_LIMIT;

  /**
   * DOT11_LONG_RETRY_LIMIT default is 3, min/max 0/255
   * Short retry-limit (set short to limit retries for probe packetes)
   */
  int32_t DOT11_LONG_RETRY_LIMIT;

  /**
   * RPS_CHANNEL_NUM default is 0, min/max 0/2
   * Logical channel number on which to operate (0, 1, 2 == auto selection based on radio mode no longer supported)
   */
  int32_t RPS_CHANNEL_NUM;

  /**
   * RPS_BANDWIDTH_MODE default is 10, min/max 10/20
   * Radio BADNWIDTH MODE, Default Mode = 10MHz
   */
  int32_t RPS_BANDWIDTH_MODE;

  /**
   * RPS_STA_PROBE_PERIOD_ms default is 100, min/max 20/5000
   * Per-STA probe period, in msec. The period between time-of-flight probes sent to a STA
   */
  int32_t RPS_STA_PROBE_PERIOD_ms;

  /**
   * RPS_STA_FORCED_PROBE_PERIOD_ms default is 1000, min/max 20/5000
   * Per-STA Forced probe period, in msec. The period between Forced time-of-flight probes sent to
   * a 'Forced-Probe' enabled STA
   */
  int32_t RPS_STA_FORCED_PROBE_PERIOD_ms;

  /**
   * RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms default is 10, min/max 0/50
   * Time to schedule transmission check after 50ms sync event.
   */
  int32_t RPS_LOCATE_SYNC_TO_TOP_OFFSET_ms;

  /**
   * RPS_STA_PROBE_BURST_COUNT default is 1, min/max 1/100
   * Per-STA probe burst length - number of pkts per PROBE_PERIOD
   */
  int32_t RPS_STA_PROBE_BURST_COUNT;

  /**
   * RPS_STA_MONITOR_DB_MAX_ENTRIES default is 100, min/max 1/10000
   *Maximum number of entries to store in STAMON Database
   */
  int32_t RPS_STA_MONITOR_DB_MAX_ENTRIES;

  /**
   * RPS_BROADCAST_ANNOUNCE_PERIOD_ms default is 500, min/max 100/60000
   * Broadcast 'announcement' message period
   */
  int32_t RPS_BROADCAST_ANNOUNCE_PERIOD_ms;

  /**
   * RPS_STA_PROBE_MCS default is 10, min/max 0/15
   * The RateID for transmitting probe packets.
   * Default to QPSK rate 1/2 (10)
   */
  int32_t RPS_STA_PROBE_MCS;

  /**
   * RPS_STA_PROBE_BROADCAST_MCS default is 10, min/max 0/15
   * The RateID for transmitting broadcast probe packets.
   * Default to the most robust, BPSK rate 1/2 (11).
   * Use QPSK rate 1/2 for now
   */
  int32_t RPS_STA_PROBE_BROADCAST_MCS;

  /**
   * RPS_STA_PROBE_RX_QUIET_PERIOD_ms default is 5000, min/max 0/60000
   * Probe any STA as long as we've received something from it within this many ms.
   */
  int32_t RPS_STA_PROBE_RX_QUIET_PERIOD_ms;

  /**
   * RPS_ESTIMATION_MODE default is 4, min/max 0/4
   * Estimation mode,
   * 0, Simple sliding window average
   * 1, Linear-fit/estimation
   * 2, Simple sliding with velocity
   */
  int32_t RPS_ESTIMATION_MODE;

  /**
   * RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns default is 80.0, min/max 0.0/1000.0
   * Median-centred-mean algorithm inclusion span (+/- Xns)
   */
  float RPS_ESTIMATION_MEDIAN_MEAN_SPAN_ns;

  /**
   * RPS_ESTIMATION_SLIDING_MIN_WIDTH_s default is 1.0, min/max 0.0/10.0
   * Sliding window min width
   */
  float RPS_ESTIMATION_SLIDING_MIN_WIDTH_s;

  /**
   * RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s default is 1.0, min/max 0.0/10.0
   * Sliding window mean width in seconds - now defaults to 1 second
   */
  float RPS_ESTIMATION_SLIDING_MEAN_WIDTH_s;

  /**
   * RPS_ESTIMATION_LINEAR_FIT_WIDTH_s default is 3.0, min/max 0.0/10.0
   * Estimation linear fit window width in seconds
   */
  float RPS_ESTIMATION_LINEAR_FIT_WIDTH_s;

  /**
   * RPS_ESTIMATION_MAXIDLE_s default is 4.0, min/max 0.0/100.0
   * Maximum measurement idle period allowed for range tracking
   */
  float RPS_ESTIMATION_MAXIDLE_s;

  /**
   * RPS_ESTIMATION_UPDATE_PERIOD_s default is 0.1, min/max 0.0/10.0
   * Range tracking esteimation rate
   */
  float RPS_ESTIMATION_UPDATE_PERIOD_s;

  /**
   * RPS_ABS_POS_RANGE_CONF_TRESHOLD default is 20, min/max 0/100
   * Relative range confidence threshold for use in absolute positioning solutions
   */
  int32_t RPS_ABS_POS_RANGE_CONF_TRESHOLD;

  /**
   * RPS_ABS_POS_RSSI_THRESHOLD default is -120, min/max -120/0
   * Rx signal power threshold for positioning.
   */
  int32_t RPS_ABS_POS_RSSI_THRESHOLD;

  /**
   * RPS_ABS_POS_HISTORY_LENGTH default is 100, min/max 10/1000
   * Length of relative position history to maintain for each remote RSU
   */
  int32_t RPS_ABS_POS_HISTORY_LENGTH;

  /**
   * RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm default is 25.0, min/max 0.0/200.0
   * Simple positioning model path-loss threshold
   */
  float RPS_ABS_POS_DELTA_LOSS_THRESHOLD_dBm;

  /**
   * RPS_ABS_POS_DELTA_POS_THRESHOLD_m default is 22.0, min/max 0.0/200.0
   * Simple positioning model distance delta threshold - for 'close' points
   */
  float RPS_ABS_POS_DELTA_POS_THRESHOLD_m;

  /**
   * RPS_ABS_POS_RANGE_BIAS_m default is 5.0, min/max -100.0/100.0
   * Simple positioning model global ranging bias assumption (metres)
   */
  float RPS_ABS_POS_RANGE_BIAS_m;

  /**
   * RPS_ABS_LOW_SPEED_THRESHOLD_mps default is 0.5, min/max 0.0/10.0
   * Low speed heading hysteresis threshold in metres per second
   */
  float RPS_ABS_LOW_SPEED_THRESHOLD_mps;

  /**
   * LOCATE_CLOUD_RANGING_INPUT_PORT default is 33992, min/max 0/65535
   * Locate Cloud UDP ranging input port
   */
  int32_t LOCATE_CLOUD_RANGING_INPUT_PORT;

  /**
   * LOCATE_CLOUD_RANGING_INPUT_IMU_PORT default is 5555, min/max 0/65535
   * Locate Cloud target IMU data input port
   */
  int32_t LOCATE_CLOUD_RANGING_INPUT_IMU_PORT;

  /**
   * LOCATE_CLOUD_RANGING_FORWARD_PORT default is 33992, min/max 0/65535
   * Locate Cloud UDP ranging forward port
   */
  int32_t LOCATE_CLOUD_RANGING_FORWARD_PORT;

  /**
   * LLC_LOG_BUFFER_MAX default is 5000, min/max 0/5000
   * Maximum buffer size in llc.pcap
   */
  int32_t LLC_LOG_BUFFER_MAX;

  /**
   * LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM default is 0, min/max 0/10000000
   * Packet number to start with
   */
  int32_t LOCATE_REPLAY_RAWRANGING_START_PACKET_NUM;

  /**
   * LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM default is 2000000000, min/max 0/2000000000
   * Packet number to end with
   */
  int32_t LOCATE_REPLAY_RAWRANGING_END_PACKET_NUM;

  /**
   * LOCATE_REPLAY_INTERPACKET_DELAY_SEC default is 0.0, min/max 0.0/0.99
   * If not replaying in real-time, time to wait after each packet
   */
  float LOCATE_REPLAY_INTERPACKET_DELAY_SEC;

  /**
   * LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM default is 0, min/max 0/10000000
   * If not replaying in real-time, add delay after packet number
   */
  int32_t LOCATE_REPLAY_INTERPACKET_DELAY_START_PACKET_NUM;

  /**
   * LLC_FORWARD_PORT default is 37009, min/max 0/65535
   * LLC event interface forwarding port
   */
  int32_t LLC_FORWARD_PORT;

  /**
   * EXTERNAL_DELAY_CORRECTION_FACTOR_ns default is 0, min/max -1000/1000
   * Local site antenna propagation delay correction factor
   * Used to account for additional cable/antenna delays due to device-specific
   * antenna installation.
   */
  int32_t EXTERNAL_DELAY_CORRECTION_FACTOR_ns;

  /**
   * SITE_POSITION_MAPID default is 0, min/max 0/2147483647
   * Site absolute position details
   */
  int32_t SITE_POSITION_MAPID;

  /**
   * SITE_POSITION_MAPVERSION default is 0, min/max 0/2147483647
   */
  int32_t SITE_POSITION_MAPVERSION;

  /**
   * SITE_POSITION_EDGEID default is 0, min/max 0/2147483647
   */
  int32_t SITE_POSITION_EDGEID;

  /**
   * SITE_POSITION_RANGE_m default is 0.0, min/max 0.0/1000000.0
   */
  float SITE_POSITION_RANGE_m;

  /**
   * SITE_POSITION_WGS84_ELEVATION default is 0.0, min/max -500.0/6144.0
   */
  float SITE_POSITION_WGS84_ELEVATION;

  /**
   * RPS_API_TEST_UPDATE_PERIOD_ms default is 200, min/max 100/5000
   * Test mode polling update period
   */
  int32_t RPS_API_TEST_UPDATE_PERIOD_ms;

  /**
   * RPS_API_TEST_STATUS_PORT default is 33993, min/max 0/65535
   * Test status output is sent to this port, set to zero to disable
   */
  int32_t RPS_API_TEST_STATUS_PORT;

  /**
   * RPS_REDPINE_TAG_EXPERIMENTAL default is 0, min/max 0/2
   *#############################################################################
   * Support for 3rd party tags
   *#############################################################################
   * Enable probe support for redpine 10MHz tags
   * 1 - basic override support for buggy redpine Tag IE (recommended)
   * 2 - treat any device with redpine OUI as tag (not for production use)
   */
  int32_t RPS_REDPINE_TAG_EXPERIMENTAL;

  /**
   * RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps default is -210000.0, min/max -50000000.0/50000000.0
   * ACK response Delay adjustment factor for new FTM-style redpine tags
   * -210ns for 8.3.8 firmware
   */
  float RM_FTM_REDPINE_TAG_DELAY_ADJUST_ps;

  /**
   * RM_DR_REFERENCE_FRAME_PERIOD_ms default is 100, min/max 10/10000
   * Distributed ranging reference frame transmission period
   */
  int32_t RM_DR_REFERENCE_FRAME_PERIOD_ms;

  /**
   * IMU_ORIENTATION_BETA default is 0.1, min/max 0.0/1.0
   * Orientation filter smoothing factor
   */
  float IMU_ORIENTATION_BETA;

  /**
   * IMU_LA_VRP_TO_SENS_X_m default is 0.0, min/max -100.0/100.0
   * Lever arm Vehicle Reference point to IMU sensor, floating point in units of metres
   */
  float IMU_LA_VRP_TO_SENS_X_m;

  /**
   * IMU_LA_VRP_TO_SENS_Y_m default is 0.0, min/max -100.0/100.0
   */
  float IMU_LA_VRP_TO_SENS_Y_m;

  /**
   * IMU_LA_VRP_TO_SENS_Z_m default is 0.0, min/max -100.0/100.0
   */
  float IMU_LA_VRP_TO_SENS_Z_m;

  /**
   * IMU_MA_VR_TO_SENS_ROLL_X_deg default is 0.0, min/max -180.0/180.0
   * IMU sensor mount alignment, with respect to vehicle reference (VR) frame - Z-up, X-forwards, Y-left-side
   * Units of degrees, anti-clockwise positive.
   */
  float IMU_MA_VR_TO_SENS_ROLL_X_deg;

  /**
   * IMU_MA_VR_TO_SENS_PITCH_Y_deg default is 0.0, min/max -180.0/180.0
   */
  float IMU_MA_VR_TO_SENS_PITCH_Y_deg;

  /**
   * IMU_MA_VR_TO_SENS_YAW_Z_deg default is 0.0, min/max -180.0/180.0
   */
  float IMU_MA_VR_TO_SENS_YAW_Z_deg;

  /**
   * IMU_STATIONARY_GYRO_THRESHOLD default is 0.002, min/max 0.0/1e+20
   * IMU stationary detection gyro threshold
   */
  float IMU_STATIONARY_GYRO_THRESHOLD;

  /**
   * IMU_STATIONARY_ACCEL_THRESHOLD default is 1.0, min/max 0.0/1e+20
   * IMU stationary detection  threshold
   */
  float IMU_STATIONARY_ACCEL_THRESHOLD;

  /**
   * IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT default is 5, min/max 0/100
   * IMU stsationary detection vibration harmonic rejection - number of harmonics to remove from metric calculation
   */
  int32_t IMU_STATIONARY_VIBRATION_HARMONIC_REMOVAL_COUNT;

  /**
   * IMU_STATIONARY_CALIBRATION_START_DELAY default is 15, min/max 0/100
   * IMU calibration stationary start count - 100ms blocks
   */
  int32_t IMU_STATIONARY_CALIBRATION_START_DELAY;

  /**
   * IMU_STATIONARY_CALIBRATION_END_DELAY default is 12, min/max 0/100
   * IMU calibration stationary end delay - 'initial motion protection factor'
   */
  int32_t IMU_STATIONARY_CALIBRATION_END_DELAY;

  /**
   * GPS_OUT_PORT default is 33992, min/max 0/65535
   * GPS position data sent to this UDP port
   */
  int32_t GPS_OUT_PORT;

  /**
   * TARGET_PARAM_UPDATE_TIMEOUT_s default is 5, min/max 0/3000
   * Timeout for updating ranging target parameters
   * with information transmitted over the air
   * 0 - Disabled (Target parameters will never be updated)
   */
  int32_t TARGET_PARAM_UPDATE_TIMEOUT_s;

  /**
   * LOCATE_RPS_MODE default is 1, min/max 0/255
   * Locate RPS Ranging mode
   */
  int32_t LOCATE_RPS_MODE;

  /**
   * LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps default is 0.0, min/max -50000000.0/50000000.0
   * RPS Local ACK response delay adjustment, in picoseconds (locally induced propagation delay factor)
   * This is currently set to -1.7ns which is the default Mining OBU integrated antenna calibration factor.
   *Cohda_RPS.LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps = -1700.0;-50e6,50e6
   * Zero by default for now, must be set based on hardware installation
   */
  float LOCATE_RPS_ACK_RESPONSE_DELAY_ADJUSTMENT_ps;

  /**
   * LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE default is 1, min/max 0/65535
   * Delay variance
   */
  int32_t LOCATE_RPS_ACK_RESPONSE_DELAY_VARIANCE;

  /**
   * LOCATE_POSOUTPUT_PORT default is 33994, min/max 0/65535
   * Locate output service UDP port number
   */
  int32_t LOCATE_POSOUTPUT_PORT;

  /**
   * EXTERNAL_INPUT_PORT default is 3232, min/max 0/65535
   * External input source port number
   */
  int32_t EXTERNAL_INPUT_PORT;

  /**
   * EXTERNAL_INPUT_TIMEOUT_ms default is 200, min/max 200/2000
   * External input timeout in ms
   */
  int32_t EXTERNAL_INPUT_TIMEOUT_ms;

  /**
   * TM_LOCATE_SERVICE_pPSID default is 0xe000001ful, min/max 0x0ul/0xeffffffful
   * The p-Encoded form of the PSID. See IEEE1609.12.
   * Eg, V2XLocate PSID is 0x20-40-9F, with a p-encoded form of 0pE0-00-00-1F
   */
  uint32_t TM_LOCATE_SERVICE_pPSID;

  /**
   * TM_LOCATE_SERVICE_PSID default is 0x20409ful, min/max 0x0ul/0xeffffffful
   * The Hex value of the PSID.
   * Eg, V2XLocate PSID is 0x20-40-9F
   */
  uint32_t TM_LOCATE_SERVICE_PSID;

  /**
   * RM_TAG_PROBE_BURST_COUNT default is 1, min/max 1/10
   * Per-tag probe burst length - number of pkts per PROBE_PERIOD
   */
  int32_t RM_TAG_PROBE_BURST_COUNT;

  /**
   * RM_TAG_PROBE_PERIOD_ms default is 500, min/max 10/10000
   * Ranging manager tag probe period
   */
  int32_t RM_TAG_PROBE_PERIOD_ms;

  /**
   * RM_TARGET_RSSI_LIMIT_dBm default is -100, min/max -200/100
   * Ranging manager - will only range if target rx power is
   *  greater than this threshold.
   */
  int32_t RM_TARGET_RSSI_LIMIT_dBm;

  /**
   * RM_ANTENNA_1_HEADING default is 0, min/max 0/360
   * Boresight direction of Antenna 1
   */
  int32_t RM_ANTENNA_1_HEADING;

  /**
   * RM_ANTENNA_2_HEADING default is 0, min/max 0/360
   * Boresight direction of Antenna 2
   * Must be the same as RM_ANTENNA_1_HEADING or +180 degrees
   */
  int32_t RM_ANTENNA_2_HEADING;

  /**
   * RM_DIRECTIONAL_RSSI_DELTA_dBm default is 4, min/max 1/20
   * RSSI difference required to make a firm azimuth assertion on the higher-powered antenna.
   */
  int32_t RM_DIRECTIONAL_RSSI_DELTA_dBm;

  /**
   * LOCATE_PROXIMITY_UPDATE_PERIOD_s default is 0.2, min/max 0.1/100.0
   * Update period in seconds, ProxNotif messages will be generated at this rate
   */
  float LOCATE_PROXIMITY_UPDATE_PERIOD_s;

  /**
   * LOCATE_PROXIMITY_DEVICE_PERIOD_s default is 5.0, min/max 0.1/100.0
   * Device details output period in seconds. ProxDeviceInfo will be generated at this rate
   */
  float LOCATE_PROXIMITY_DEVICE_PERIOD_s;

  /**
   * LOCATE_PROXIMITY_BAND0_LIMIT_m default is 0.0, min/max 0.0/1000.0
   * Proximity range band limits
   */
  float LOCATE_PROXIMITY_BAND0_LIMIT_m;

  /**
   * LOCATE_PROXIMITY_BAND1_LIMIT_m default is 30.0, min/max 0.0/1000.0
   */
  float LOCATE_PROXIMITY_BAND1_LIMIT_m;

  /**
   * LOCATE_PROXIMITY_BAND2_LIMIT_m default is 60.0, min/max 0.0/1000.0
   */
  float LOCATE_PROXIMITY_BAND2_LIMIT_m;

  /**
   * PAM_STATUS_OUTPUT_PORT default is 33994, min/max 0/65535
   * PAM Status output is sent to this port, set to zero to disable. Default to 33994 - port used by udp->websocket forwarder
   */
  int32_t PAM_STATUS_OUTPUT_PORT;

  /**
   * PAM_STATUS_OUTPUT_PORT_ALT default is 0, min/max 0/65535
   * Alternate proximity API output port (eg, set to localhost)
   */
  int32_t PAM_STATUS_OUTPUT_PORT_ALT;

  /**
   * PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES default is 16384, min/max 128/65535
   * PAM Status output ProxDeviceInfo message maximum number bytes per message
   */
  int32_t PAM_STATUS_OUTPUT_MAX_MSG_SIZE_BYTES;

  /**
   * POS_STATUS_OUTPUT_PORT default is 33994, min/max 0/65535
   *###########################################################
   * Internal debug
   *###########################################################
   * Positioning debug status I/O
   */
  int32_t POS_STATUS_OUTPUT_PORT;

  /**
   * MULTI_DEVICE_ROLE default is 0, min/max 0/2
   *###########################################################
   * Multiple OBU device mode - multiple OBUs on one vehicle
   *###########################################################
   *
   * Multi-device mode role.
   * 0 = Stand-alone mode (multi-device mode disabled)
   * 1 = Multi-device MASTER mode
   * 2 = Multi-device SLAVE mode
   */
  int32_t MULTI_DEVICE_ROLE;

  /**
   * MULTI_DEVICE_MASTER_PORT default is 33991, min/max 0/65535
   * Multi-device mode - master UDP port number
   */
  int32_t MULTI_DEVICE_MASTER_PORT;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0 default is 0, min/max 0/3
   * Association relationship
   * 0 = CONTAINED_BY = Associated device is contained BY the advertising device.
   * 1 = CONTAINS = Associated device contains the advertising device.
   * 2 = PEER = Associated device is a peer to the advertising device.
   * 3 = RESERVED = unused, reserved for future use.
   */
  int32_t ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_0;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1 default is 0, min/max 0/3
   */
  int32_t ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_1;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2 default is 0, min/max 0/3
   */
  int32_t ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_2;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3 default is 0, min/max 0/3
   */
  int32_t ASSOCIATED_DEVICE_ASSOCIATION_RELATIONSHIP_3;

  /**
   * RPS_AP_MODE_ENABLE default is false
   * Add configuration item for top-level RPS operating mode;
   * 0 == RPS (new)
   * 1 == Access Point Probe mode
   */
  bool RPS_AP_MODE_ENABLE;

  /**
   * DUMMY_BEACON_GENERATE default is false
   * When set to 1 RPS should generate a basic 802.11a BEACON frame
   * instead of an RPS_ANNOUNCE frame - so we can test with MK5 units in 10MHz mode.
   * Default = 0
   * ENABLE for RSU, DISABLE for OBU
   */
  bool DUMMY_BEACON_GENERATE;

  /**
   * RPS_ANNOUNCE_ENABLE default is true
   * Enable generation of RPS_ANNOUNCE frames (when in RPS mode)
   */
  bool RPS_ANNOUNCE_ENABLE;

  /**
   * ENABLE default is false
   * RPS enabled?
   */
  bool ENABLE;

  /**
   * RAW_RANGING_ENABLE default is false
   * Enable the raw ranging data output interface
   */
  bool RAW_RANGING_ENABLE;

  /**
   * RAW_RANGING_LOG_ENABLE default is true
   * External positioning service external interface pkt logging
   * 0=False, 1=True (Enable/Disable rpsextpos.pcap)
   */
  bool RAW_RANGING_LOG_ENABLE;

  /**
   * LOCATE_TUNNEL_ZERO_UPDATE_STATIONARY default is false
   * Do not update tracking filter when stationary (based on inertial sensors)
   * Not recommended for production use at the moment.
   */
  bool LOCATE_TUNNEL_ZERO_UPDATE_STATIONARY;

  /**
   * LOCATE_TUNNEL_IMU_CONTINUOUS_CALIBRATION default is false
   * If not set, will only perform start-up calibration
   */
  bool LOCATE_TUNNEL_IMU_CONTINUOUS_CALIBRATION;

  /**
   * TX_ENABLE default is true
   * RPS transmit processing enabled?
   */
  bool TX_ENABLE;

  /**
   * RX_ENABLE default is true
   * RPS receive processing enabled?
   */
  bool RX_ENABLE;

  /**
   * RPS_RADIO_NUM default is false
   * Radio number on which to operate
   */
  bool RPS_RADIO_NUM;

  /**
   * RPS_LOCATE_SYNC_TO_TOP default is false
   * When in 1609 V2XLocate mode, synchronise to the top of the 100ms 1609 channel switch period.
   */
  bool RPS_LOCATE_SYNC_TO_TOP;

  /**
   * RPS_STA_PROBE_USE_RTSCTS default is false
   * When set non-zero, will result in RTS/CTS being used for all probe transmission requests
   * This allows 2 ack-turn-around time measures to be made for each probe.
   */
  bool RPS_STA_PROBE_USE_RTSCTS;

  /**
   * RPS_STA_PROBE_DISABLE default is false
   * Disable ranging probe generation. Used for 'silent' RSU stations.
   * Will broadcast positioning service availability but not make ranging measurements.
   */
  bool RPS_STA_PROBE_DISABLE;

  /**
   * RPS_STA_PROBE_NORETRIES default is true
   * Disable retries on probe transmissions. This will ensure we only transmit a probe ONCE before giving up.
   */
  bool RPS_STA_PROBE_NORETRIES;

  /**
   * RPS_ABS_POSITIONING_DISABLED default is true
   *#############################################################################
   * RPS Absolute Positioning Service configuration
   *#############################################################################
   * Set to disable absolute positioning updates
   * NOTE NOTE NOTE CURRENTLY DISABLED BY DEFAULT
   */
  bool RPS_ABS_POSITIONING_DISABLED;

  /**
   * RPS_ABS_POS_USE_STA_ADVERTISED_POSITIONS default is false
   * If NOT set, reference Stations for absolute positioning will always use the location
   * specified in the mine map configuration files, and NOT the location advertised
   * by the RSU itself. Set to 1, the STA advertised position will be used.
   */
  bool RPS_ABS_POS_USE_STA_ADVERTISED_POSITIONS;

  /**
   * LOCATE_TUNNEL_DEBUG_SOLUTION_OUTPUT_ENABLE default is false
   * Debug purposes - enable multiple candidate solution position output interface.
   */
  bool LOCATE_TUNNEL_DEBUG_SOLUTION_OUTPUT_ENABLE;

  /**
   * LOCATE_CLOUD_RANGING_INPUT_ENABLE default is false
   *#############################################################################
   * Locate Cloud Service Configuration
   *#############################################################################
   * Enable the Locate Cloud UDP ranging input port
   */
  bool LOCATE_CLOUD_RANGING_INPUT_ENABLE;

  /**
   * LOCATE_CLOUD_RANGING_INPUT_LOG_ENABLE default is false
   * Locate Cloud packet logging
   */
  bool LOCATE_CLOUD_RANGING_INPUT_LOG_ENABLE;

  /**
   * LLC_LOG_ENABLE default is false
   * Enable LLC event logging (subset of llc events)
   * 0=False, 1=True (Enable/Disable llc.pcap)
   */
  bool LLC_LOG_ENABLE;

  /**
   * LLC_LOG_ALL default is false
   * Enable logging of all LLC events
   * 0=False, 1=True (Enable/Disable llc.pcap)
   */
  bool LLC_LOG_ALL;

  /**
   * LOCATE_REPLAY_REALTIME default is true
   * Maximum buffer size in llc.pcap
   *Cohda_RPS.LLC_LOG_BUFFER_MAX = 5000;0,5000
   * Perform locate replay in real-time, otherwise will run at full-speed.
   */
  bool LOCATE_REPLAY_REALTIME;

  /**
   * LLC_FORWARD_ENABLE default is false
   *#############################################################################
   * Forwarding of raw LLC events
   *#############################################################################
   * Enable/disable LLC event forwarding via UDP
   * 0=disable, 1=enable
   */
  bool LLC_FORWARD_ENABLE;

  /**
   * RPS_LOG_ENABLE default is false
   *#############################################################################
   * RPS output logging to log file rps.pcap
   *#############################################################################
   * 0=False, 1=True (Enable/Disable rps.pcap)
   */
  bool RPS_LOG_ENABLE;

  /**
   * SITE_POSITION_IS_FIXED default is false
   * Location
   */
  bool SITE_POSITION_IS_FIXED;

  /**
   * SITE_POSITION_WGS84_USE_GPS default is false
   * Use the local GPS to get WGS84 position
   */
  bool SITE_POSITION_WGS84_USE_GPS;

  /**
   * RPS_API_TEST_ENABLED default is false
   *#############################################################################
   * Built-in API self-test mode configuration. NOT FOR NORMAL USE.
   *#############################################################################
   * Enable the built-in API test module for real-time system test
   */
  bool RPS_API_TEST_ENABLED;

  /**
   * RM_FTM_REDPINE_TAG_EXPERIMENTAL_CHANEST_REQUEST default is false
   * Request channel estimates when doing channel state requests, should be set to 0 for normal operation
   */
  bool RM_FTM_REDPINE_TAG_EXPERIMENTAL_CHANEST_REQUEST;

  /**
   * RM_FTM_REDPINE_TAG_PROBE_FAULTY_FIRMWARE default is false
   * Short-term, enable probing to faulty tag firmware (eg, 8.3.6)
   */
  bool RM_FTM_REDPINE_TAG_PROBE_FAULTY_FIRMWARE;

  /**
   * RM_DR_ENABLE default is false
   * Enable Distributed Ranging
   */
  bool RM_DR_ENABLE;

  /**
   * UBX_ENABLE default is false
   *#########################################################
   * UBX Integration configuration - IMU and GPS location
   *#########################################################
   * UBX internal support mode enable
   */
  bool UBX_ENABLE;

  /**
   * UBX_PCAP_LOG_ENABLE default is false
   * UBX ADR speed updates enable
   * Log UBX UDP data to the raw-ranging pcap log-file.
   */
  bool UBX_PCAP_LOG_ENABLE;

  /**
   * IMU_ATTITUDE_ESTIMATION_ENABLE default is false
   * Enable attitude estimation calculation
   */
  bool IMU_ATTITUDE_ESTIMATION_ENABLE;

  /**
   * GPS_OUT_ENABLE default is false
   * Enable the GPS position output interface
   */
  bool GPS_OUT_ENABLE;

  /**
   * GPS_OUT_UBX_DEBUG default is false
   * GPS raw UBX debug data message enable
   */
  bool GPS_OUT_UBX_DEBUG;

  /**
   * USE_IEEE1609_WSAS default is false
   * Use IEEE1609 WSA's for RPS Target management
   * 1 - Use IEEE1609 WSA's
   * 0 - Use RPS annoucenments
   */
  bool USE_IEEE1609_WSAS;

  /**
   * LOCATE_POSOUTPUT_ENABLE default is false
   * Locate output service, UDP output enable
   */
  bool LOCATE_POSOUTPUT_ENABLE;

  /**
   * LOCATE_POSOUTPUT_LOG_ENABLE default is false
   * Locate output service PVT log enable
   */
  bool LOCATE_POSOUTPUT_LOG_ENABLE;

  /**
   * RPS_EXIT_SEND_NO_FIX_TO_LPH default is false
   *#########################################################
   * Output to LPH
   *#########################################################
   */
  bool RPS_EXIT_SEND_NO_FIX_TO_LPH;

  /**
   * EXTERNAL_INPUT_ENABLE default is false
   *###########################################################
   * External Input handling
   *###########################################################
   * Enable external inputs to RPS system
   */
  bool EXTERNAL_INPUT_ENABLE;

  /**
   * EXTERNAL_INPUT_TYPE default is false
   * External input type
   * 0 = VSTATE
   * 1 = GPS
   */
  bool EXTERNAL_INPUT_TYPE;

  /**
   * LOCATE_VEHICLE_DIRECTION_FROM_IMU default is false
   *###########################################################
   * Vehicle state sensor data configuration.
   *###########################################################
   * Enable if system should determine vehicle direction from IMU
   */
  bool LOCATE_VEHICLE_DIRECTION_FROM_IMU;

  /**
   * TM_USE_RPS_ANNOUCEMENTS default is true
   *###########################################################
   * RPS Target management
   *###########################################################
   * Use devices broadcasting RPS annoucement frames as ranging targets
   */
  bool TM_USE_RPS_ANNOUCEMENTS;

  /**
   * TM_USE_BEACONS default is false
   * Use devices broadcasting 802.11 beacon frames
   */
  bool TM_USE_BEACONS;

  /**
   * TM_USE_TAG_PROBES default is true
   * Use devices advertising Cohda Locate Tag Presence via Probe Request frames
   */
  bool TM_USE_TAG_PROBES;

  /**
   * TM_USE_IEEE1609_WSAS default is false
   * Use devices broadcasting IEEE1609 WSA's with the Cohda V2X-Locate
   * PSID as ranging targets
   */
  bool TM_USE_IEEE1609_WSAS;

  /**
   * TM_USE_ETSI_SAEM default is false
   * Use ETSI SAEMs for RPS Target management
   * 1 - Use ETSI SA
   * 0 - Use RPS annoucenments
   */
  bool TM_USE_ETSI_SAEM;

  /**
   * ETSI_DUAL_RADIO_MODE default is false
   * Dual Radio mode for ETSI where RPS operates on SCH on radio B while
   * all ETSI messages are transmitted and received on CCH on radio A
   * 1 = Dual Radio Mode, RPS on SCH
   * 0 = Single radio mode. RPS on CCH, together with all other ETSI messages
   */
  bool ETSI_DUAL_RADIO_MODE;

  /**
   * TM_TRUST_UNKNOWN_DEVICES default is true
   * Use unknown devices that either broadcast RPS announcements or
   * IEEE1609 WSA's with the Cohda V2X-Locate PSID as ranging targets
   */
  bool TM_TRUST_UNKNOWN_DEVICES;

  /**
   * RM_TAG_RX_SYNCHRONOUS_PROBE_ENABLE default is false
   * Ranging manager synchronous probe enable
   */
  bool RM_TAG_RX_SYNCHRONOUS_PROBE_ENABLE;

  /**
   * RM_DIRECTIONAL_ANTENNAS default is false
   * Enables directional patch antenna configuration with 2 antennas aimed in opposite directions.
   */
  bool RM_DIRECTIONAL_ANTENNAS;

  /**
   * LOCATE_PROXIMITY_AWARENESS_ENABLE default is false
   *###########################################################
   * Locate Proximity awareness module
   *###########################################################
   * Enable/Disable the proximity awareness module
   */
  bool LOCATE_PROXIMITY_AWARENESS_ENABLE;

  /**
   * LOCATE_PROXIMITY_DIRECTION_FILTERING default is true
   * Enables direction filtering.
   */
  bool LOCATE_PROXIMITY_DIRECTION_FILTERING;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_TYPE_0 default is false
   * Association type
   * 0 = MANUAL = Manually configured association (eg via a HMI)
   * 1 = AUTOMATIC = Automatically determined association by some automatic mechanism.
   */
  bool ASSOCIATED_DEVICE_ASSOCIATION_TYPE_0;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_TYPE_1 default is false
   */
  bool ASSOCIATED_DEVICE_ASSOCIATION_TYPE_1;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_TYPE_2 default is false
   */
  bool ASSOCIATED_DEVICE_ASSOCIATION_TYPE_2;

  /**
   * ASSOCIATED_DEVICE_ASSOCIATION_TYPE_3 default is false
   */
  bool ASSOCIATED_DEVICE_ASSOCIATION_TYPE_3;
} tdefault_stack_Cohda_RPS;

#define default_stack_Cohda_RPS_NUM_SUB (0)
#define default_stack_Cohda_RPS_NUM_FLD (207)


#define default_stack_Cohda_LTE_DebugLevel_PARAM "Cohda_LTE.DebugLevel"
#define default_stack_Cohda_LTE_DebugLevel_MIN -1
#define default_stack_Cohda_LTE_DebugLevel_DEF -1
#define default_stack_Cohda_LTE_DebugLevel_MAX 255

#define default_stack_Cohda_LTE_ENABLE_PARAM "Cohda_LTE.ENABLE"
#define default_stack_Cohda_LTE_ENABLE_DEF false

#define default_stack_Cohda_LTE_TX_HostName_PARAM "Cohda_LTE.TX_HostName"
#define default_stack_Cohda_LTE_TX_HostName_DEF ""

#define default_stack_Cohda_LTE_TX_Port_PARAM "Cohda_LTE.TX_Port"
#define default_stack_Cohda_LTE_TX_Port_MIN 0
#define default_stack_Cohda_LTE_TX_Port_DEF 30334
#define default_stack_Cohda_LTE_TX_Port_MAX 65535

#define default_stack_Cohda_LTE_BidiTxPort_PARAM "Cohda_LTE.BidiTxPort"
#define default_stack_Cohda_LTE_BidiTxPort_DEF false

#define default_stack_Cohda_LTE_RX_Port1_PARAM "Cohda_LTE.RX_Port1"
#define default_stack_Cohda_LTE_RX_Port1_MIN -1
#define default_stack_Cohda_LTE_RX_Port1_DEF -1
#define default_stack_Cohda_LTE_RX_Port1_MAX 65535

#define default_stack_Cohda_LTE_RX_Port2_PARAM "Cohda_LTE.RX_Port2"
#define default_stack_Cohda_LTE_RX_Port2_MIN -1
#define default_stack_Cohda_LTE_RX_Port2_DEF -1
#define default_stack_Cohda_LTE_RX_Port2_MAX 65535

typedef struct default_stack_Cohda_LTE
{
  /**
   * TX_HostName default is ""
   * Where to send encapsulated BTPs (blank = disabled)
   */
  const char * TX_HostName;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                                LTE                                     *
   ***************************************************************************
   * Telstra LTE demo config
   */
  int32_t DebugLevel;

  /**
   * TX_Port default is 30334, min/max 0/65535
   * Port to send encapsulated BTPs to
   */
  int32_t TX_Port;

  /**
   * RX_Port1 default is -1, min/max -1/65535
   * Enable UDP listener (-1 = disabled)
   */
  int32_t RX_Port1;

  /**
   * RX_Port2 default is -1, min/max -1/65535
   * Enable UDP listener (-1 = disabled)
   */
  int32_t RX_Port2;

  /**
   * ENABLE default is false
   */
  bool ENABLE;

  /**
   * BidiTxPort default is false
   * Enable Tx port to be used for Rx (necessary for NAT fw)
   */
  bool BidiTxPort;
} tdefault_stack_Cohda_LTE;

#define default_stack_Cohda_LTE_NUM_SUB (0)
#define default_stack_Cohda_LTE_NUM_FLD (7)


#define default_stack_Cohda_Stack_DebugLevel_PARAM "Cohda_Stack.DebugLevel"
#define default_stack_Cohda_Stack_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_DebugLevel_MAX 255


#define default_stack_Cohda_Stack_net_its_DebugLevel_PARAM "Cohda_Stack.net_its.DebugLevel"
#define default_stack_Cohda_Stack_net_its_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_net_its_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_net_its_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_its_etsi_3gpp_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_3gpp.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_3gpp_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_3gpp_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_3gpp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_its_etsi_3gpp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_3gpp;

#define default_stack_Cohda_Stacknet_its_etsi_3gpp_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_its_etsi_3gpp_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_btp_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_btp.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_btp_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_btp_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_btp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_its_etsi_btp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_btp;

#define default_stack_Cohda_Stacknet_its_etsi_btp_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_its_etsi_btp_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_dcc_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_dcc.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_dcc_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_dcc_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_dcc_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_dcc.etsi_dcc_api.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api;

#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_dcc.etsi_dcc_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl;

#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_dcc.etsi_dcc_mgmt.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt;

#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_dcc.etsi_dcc_stats.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats;

#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_etsi_dcc
{
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api etsi_dcc_api;

  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl etsi_dcc_ctrl;

  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt etsi_dcc_mgmt;

  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats etsi_dcc_stats;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_dcc;

#define default_stack_Cohda_Stacknet_its_etsi_dcc_NUM_SUB (4)
#define default_stack_Cohda_Stacknet_its_etsi_dcc_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_g5_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_g5_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_g5_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_g5_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_lib.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_mon.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_rx_replay.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_g5.etsi_g5_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx;

#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_etsi_g5
{
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl etsi_g5_ctrl;

  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib etsi_g5_lib;

  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon etsi_g5_mon;

  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay etsi_g5_rx_replay;

  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx etsi_g5_rx;

  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx etsi_g5_tx;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_g5;

#define default_stack_Cohda_Stacknet_its_etsi_g5_NUM_SUB (6)
#define default_stack_Cohda_Stacknet_its_etsi_g5_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_gn_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_gn_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_gn_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_gn_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_buffer.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_lib.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_neighbour.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_periodic.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_thr.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn.etsi_gn_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx;

#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_etsi_gn
{
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer etsi_gn_buffer;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib etsi_gn_lib;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour etsi_gn_neighbour;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic etsi_gn_periodic;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx etsi_gn_rx;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr etsi_gn_thr;

  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx etsi_gn_tx;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_gn;

#define default_stack_Cohda_Stacknet_its_etsi_gn_NUM_SUB (7)
#define default_stack_Cohda_Stacknet_its_etsi_gn_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_gn6_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_gn6.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_gn6_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_gn6_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_gn6_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_its_etsi_gn6
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_gn6;

#define default_stack_Cohda_Stacknet_its_etsi_gn6_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_its_etsi_gn6_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_etsi_pc5_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_pc5.DebugLevel"
#define default_stack_Cohda_Stacknet_its_etsi_pc5_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_etsi_pc5_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_etsi_pc5_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_pc5.etsi_pc5_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl;

#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_pc5.etsi_pc5_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx;

#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_DebugLevel_PARAM "Cohda_Stack.net_its.etsi_pc5.etsi_pc5_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx;

#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_etsi_pc5
{
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl etsi_pc5_ctrl;

  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx etsi_pc5_tx;

  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx etsi_pc5_rx;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_etsi_pc5;

#define default_stack_Cohda_Stacknet_its_etsi_pc5_NUM_SUB (3)
#define default_stack_Cohda_Stacknet_its_etsi_pc5_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_libc2xsec_DebugLevel_PARAM "Cohda_Stack.net_its.libc2xsec.DebugLevel"
#define default_stack_Cohda_Stacknet_its_libc2xsec_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_libc2xsec_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_libc2xsec_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_DebugLevel_PARAM "Cohda_Stack.net_its.libc2xsec.cohda_sec.DebugLevel"
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec;

#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_DebugLevel_PARAM "Cohda_Stack.net_its.libc2xsec.cohda_sec_aerolink.DebugLevel"
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink;

#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_libc2xsec
{
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec cohda_sec;

  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink cohda_sec_aerolink;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_libc2xsec;

#define default_stack_Cohda_Stacknet_its_libc2xsec_NUM_SUB (2)
#define default_stack_Cohda_Stacknet_its_libc2xsec_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_libitsnet_DebugLevel_PARAM "Cohda_Stack.net_its.libitsnet.DebugLevel"
#define default_stack_Cohda_Stacknet_its_libitsnet_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_libitsnet_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_libitsnet_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_DebugLevel_PARAM "Cohda_Stack.net_its.libitsnet.libitsnet_mgmt.DebugLevel"
#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_DebugLevel_PARAM "Cohda_Stack.net_its.libitsnet.libitsnet_mgmt.log.DebugLevel"
#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log;

#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt
{
  tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log log;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt;

#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_NUM_SUB (1)
#define default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_its_libitsnet
{
  tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt libitsnet_mgmt;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_libitsnet;

#define default_stack_Cohda_Stacknet_its_libitsnet_NUM_SUB (1)
#define default_stack_Cohda_Stacknet_its_libitsnet_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_its_udp_btp_DebugLevel_PARAM "Cohda_Stack.net_its.udp_btp.DebugLevel"
#define default_stack_Cohda_Stacknet_its_udp_btp_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_its_udp_btp_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_its_udp_btp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_its_udp_btp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_its_udp_btp;

#define default_stack_Cohda_Stacknet_its_udp_btp_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_its_udp_btp_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_net_its
{
  tdefault_stack_Cohda_Stacknet_its_etsi_3gpp etsi_3gpp;

  tdefault_stack_Cohda_Stacknet_its_etsi_btp etsi_btp;

  tdefault_stack_Cohda_Stacknet_its_etsi_dcc etsi_dcc;

  tdefault_stack_Cohda_Stacknet_its_etsi_g5 etsi_g5;

  tdefault_stack_Cohda_Stacknet_its_etsi_gn etsi_gn;

  tdefault_stack_Cohda_Stacknet_its_etsi_gn6 etsi_gn6;

  tdefault_stack_Cohda_Stacknet_its_etsi_pc5 etsi_pc5;

  tdefault_stack_Cohda_Stacknet_its_libc2xsec libc2xsec;

  tdefault_stack_Cohda_Stacknet_its_libitsnet libitsnet;

  tdefault_stack_Cohda_Stacknet_its_udp_btp udp_btp;

  /**
   * DebugLevel default is -1, min/max -1/255
   * fine-grained debug for NET_ITS
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_net_its;

#define default_stack_Cohda_Stack_net_its_NUM_SUB (10)
#define default_stack_Cohda_Stack_net_its_NUM_FLD (1)


#define default_stack_Cohda_Stack_fac_its_DebugLevel_PARAM "Cohda_Stack.fac_its.DebugLevel"
#define default_stack_Cohda_Stack_fac_its_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_fac_its_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_fac_its_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_its_etsi_uppertester_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_uppertester_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_uppertester_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_uppertester_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_btp.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_cam.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_denm.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_gn.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_gn6.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_ivi.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_msg.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_spatmap.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_srmssm.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_uppertester.etsi_ut_udp_rx_thr.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr;

#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_its_etsi_uppertester
{
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp etsi_ut_btp;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam etsi_ut_cam;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm etsi_ut_denm;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn etsi_ut_gn;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 etsi_ut_gn6;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi etsi_ut_ivi;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg etsi_ut_msg;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap etsi_ut_spatmap;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm etsi_ut_srmssm;

  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr etsi_ut_udp_rx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                             ITS Upper Tester                           *
   ***************************************************************************
   * *****************************************************************************
   * * Cohda: Upper Tester for ETSI Conformance testing
   * *****************************************************************************
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_uppertester;

#define default_stack_Cohda_Stackfac_its_etsi_uppertester_NUM_SUB (10)
#define default_stack_Cohda_Stackfac_its_etsi_uppertester_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_00002_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_00002_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_00002_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_00002_to_pc_DEF 99
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_00002_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0001_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_0001_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0001_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0001_to_pc_DEF 95
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0001_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0005_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_0005_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0005_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0005_to_pc_DEF 90
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_0005_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_002_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_002_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_002_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_002_to_pc_DEF 80
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_002_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_01_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_01_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_01_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_01_to_pc_DEF 75
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_01_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_1_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_0_1_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_1_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_1_to_pc_DEF 50
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_0_1_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_unavailable_to_pc_PARAM "Cohda_Stack.fac_its.etsi_util.Conf_unavailable_to_pc"
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_unavailable_to_pc_MIN 0
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_unavailable_to_pc_DEF 25
#define default_stack_Cohda_Stackfac_its_etsi_util_Conf_unavailable_to_pc_MAX 100

#define default_stack_Cohda_Stackfac_its_etsi_util_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_util.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_util_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_util_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_util_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_util
{
  /**
   * Conf_0_00002_to_pc default is 99, min/max 0/100
   */
  int32_t Conf_0_00002_to_pc;

  /**
   * Conf_0_0001_to_pc default is 95, min/max 0/100
   */
  int32_t Conf_0_0001_to_pc;

  /**
   * Conf_0_0005_to_pc default is 90, min/max 0/100
   */
  int32_t Conf_0_0005_to_pc;

  /**
   * Conf_0_002_to_pc default is 80, min/max 0/100
   */
  int32_t Conf_0_002_to_pc;

  /**
   * Conf_0_01_to_pc default is 75, min/max 0/100
   */
  int32_t Conf_0_01_to_pc;

  /**
   * Conf_0_1_to_pc default is 50, min/max 0/100
   */
  int32_t Conf_0_1_to_pc;

  /**
   * Conf_unavailable_to_pc default is 25, min/max 0/100
   */
  int32_t Conf_unavailable_to_pc;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_util;

#define default_stack_Cohda_Stackfac_its_etsi_util_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_util_NUM_FLD (8)


#define default_stack_Cohda_Stackfac_its_etsi_cam_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_cam.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_cam_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_cam_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_cam_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_cam
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_cam;

#define default_stack_Cohda_Stackfac_its_etsi_cam_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_cam_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_cpm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_cpm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_cpm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_cpm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_cpm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_cpm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_cpm;

#define default_stack_Cohda_Stackfac_its_etsi_cpm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_cpm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_denm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_denm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_denm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_denm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_denm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_denm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_denm;

#define default_stack_Cohda_Stackfac_its_etsi_denm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_denm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_evcsn_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_evcsn.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_evcsn_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_evcsn_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_evcsn_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_evcsn
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_evcsn;

#define default_stack_Cohda_Stackfac_its_etsi_evcsn_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_evcsn_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_imzm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_imzm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_imzm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_imzm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_imzm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_imzm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_imzm;

#define default_stack_Cohda_Stackfac_its_etsi_imzm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_imzm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_ivi_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_ivi.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_ivi_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_ivi_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_ivi_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_ivi
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_ivi;

#define default_stack_Cohda_Stackfac_its_etsi_ivi_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_ivi_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_map_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_map.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_map_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_map_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_map_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_map
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_map;

#define default_stack_Cohda_Stackfac_its_etsi_map_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_map_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_mcdm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_mcdm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_mcdm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_mcdm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_mcdm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_mcdm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_mcdm;

#define default_stack_Cohda_Stackfac_its_etsi_mcdm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_mcdm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_msg_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_msg.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_msg_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_msg_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_msg_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_msg
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_msg;

#define default_stack_Cohda_Stackfac_its_etsi_msg_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_msg_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_pmm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_pmm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_pmm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_pmm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_pmm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_pmm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_pmm;

#define default_stack_Cohda_Stackfac_its_etsi_pmm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_pmm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_rtcm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_rtcm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_rtcm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_rtcm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_rtcm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_rtcm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_rtcm;

#define default_stack_Cohda_Stackfac_its_etsi_rtcm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_rtcm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_sa_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_sa.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_sa_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_sa_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_sa_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_sa
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_sa;

#define default_stack_Cohda_Stackfac_its_etsi_sa_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_sa_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_spat_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_spat.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_spat_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_spat_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_spat_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_spat
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_spat;

#define default_stack_Cohda_Stackfac_its_etsi_spat_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_spat_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_srmssm_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_srmssm.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_srmssm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_srmssm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_srmssm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_srmssm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_srmssm;

#define default_stack_Cohda_Stackfac_its_etsi_srmssm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_srmssm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_toll_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_toll.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_toll_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_toll_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_toll_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_toll
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_toll;

#define default_stack_Cohda_Stackfac_its_etsi_toll_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_toll_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_trx_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_trx.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_trx_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_trx_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_trx_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_trx.etsi_fac_c2c.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c;

#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_trx.etsi_trx_action.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action;

#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_trx.etsi_trx_thr.DebugLevel"
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr;

#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_its_etsi_trx
{
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c etsi_fac_c2c;

  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action etsi_trx_action;

  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr etsi_trx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_trx;

#define default_stack_Cohda_Stackfac_its_etsi_trx_NUM_SUB (3)
#define default_stack_Cohda_Stackfac_its_etsi_trx_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_etsi_vam_DebugLevel_PARAM "Cohda_Stack.fac_its.etsi_vam.DebugLevel"
#define default_stack_Cohda_Stackfac_its_etsi_vam_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_etsi_vam_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_etsi_vam_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_its_etsi_vam
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_etsi_vam;

#define default_stack_Cohda_Stackfac_its_etsi_vam_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_its_etsi_vam_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_its_libitsfacilities_DebugLevel_PARAM "Cohda_Stack.fac_its.libitsfacilities.DebugLevel"
#define default_stack_Cohda_Stackfac_its_libitsfacilities_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_its_libitsfacilities_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_its_libitsfacilities_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_DebugLevel_PARAM "Cohda_Stack.fac_its.libitsfacilities.libitsfac_log.DebugLevel"
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log;

#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_DebugLevel_PARAM "Cohda_Stack.fac_its.libitsfacilities.libitsfac_mgmt.DebugLevel"
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt;

#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_its_libitsfacilities
{
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log libitsfac_log;

  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt libitsfac_mgmt;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_its_libitsfacilities;

#define default_stack_Cohda_Stackfac_its_libitsfacilities_NUM_SUB (2)
#define default_stack_Cohda_Stackfac_its_libitsfacilities_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_fac_its
{
  tdefault_stack_Cohda_Stackfac_its_etsi_uppertester etsi_uppertester;

  tdefault_stack_Cohda_Stackfac_its_etsi_util etsi_util;

  tdefault_stack_Cohda_Stackfac_its_etsi_cam etsi_cam;

  tdefault_stack_Cohda_Stackfac_its_etsi_cpm etsi_cpm;

  tdefault_stack_Cohda_Stackfac_its_etsi_denm etsi_denm;

  tdefault_stack_Cohda_Stackfac_its_etsi_evcsn etsi_evcsn;

  tdefault_stack_Cohda_Stackfac_its_etsi_imzm etsi_imzm;

  tdefault_stack_Cohda_Stackfac_its_etsi_ivi etsi_ivi;

  tdefault_stack_Cohda_Stackfac_its_etsi_map etsi_map;

  tdefault_stack_Cohda_Stackfac_its_etsi_mcdm etsi_mcdm;

  tdefault_stack_Cohda_Stackfac_its_etsi_msg etsi_msg;

  tdefault_stack_Cohda_Stackfac_its_etsi_pmm etsi_pmm;

  tdefault_stack_Cohda_Stackfac_its_etsi_rtcm etsi_rtcm;

  tdefault_stack_Cohda_Stackfac_its_etsi_sa etsi_sa;

  tdefault_stack_Cohda_Stackfac_its_etsi_spat etsi_spat;

  tdefault_stack_Cohda_Stackfac_its_etsi_srmssm etsi_srmssm;

  tdefault_stack_Cohda_Stackfac_its_etsi_toll etsi_toll;

  tdefault_stack_Cohda_Stackfac_its_etsi_trx etsi_trx;

  tdefault_stack_Cohda_Stackfac_its_etsi_vam etsi_vam;

  tdefault_stack_Cohda_Stackfac_its_libitsfacilities libitsfacilities;

  /**
   * DebugLevel default is -1, min/max -1/255
   * fine-grained debug for FAC_ITS
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_fac_its;

#define default_stack_Cohda_Stack_fac_its_NUM_SUB (20)
#define default_stack_Cohda_Stack_fac_its_NUM_FLD (1)


#define default_stack_Cohda_Stack_plat_DebugLevel_PARAM "Cohda_Stack.plat.DebugLevel"
#define default_stack_Cohda_Stack_plat_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_plat_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_plat_DebugLevel_MAX 255

#define default_stack_Cohda_Stack_plat_PIDFile_PARAM "Cohda_Stack.plat.PIDFile"
#define default_stack_Cohda_Stack_plat_PIDFile_DEF "/run/cohda.pid"

#define default_stack_Cohda_Stack_plat_CoreDump_Pattern_PARAM "Cohda_Stack.plat.CoreDump_Pattern"
#define default_stack_Cohda_Stack_plat_CoreDump_Pattern_DEF ""


#define default_stack_Cohda_Stackplat_persistence_DebugLevel_PARAM "Cohda_Stack.plat.persistence.DebugLevel"
#define default_stack_Cohda_Stackplat_persistence_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplat_persistence_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplat_persistence_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplat_persistence
{
  /**
   * DebugLevel default is -1, min/max -1/255
   ******************************************************************************
   **         Data Persistence
   ******************************************************************************
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplat_persistence;

#define default_stack_Cohda_Stackplat_persistence_NUM_SUB (0)
#define default_stack_Cohda_Stackplat_persistence_NUM_FLD (1)


#define default_stack_Cohda_Stackplat_libplat_DebugLevel_PARAM "Cohda_Stack.plat.libplat.DebugLevel"
#define default_stack_Cohda_Stackplat_libplat_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplat_libplat_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplat_libplat_DebugLevel_MAX 255


#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_DebugLevel_PARAM "Cohda_Stack.plat.libplat.libplat_mgmt.DebugLevel"
#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlibplat_libplat_mgmt
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt;

#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlibplat_libplat_mgmt_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackplat_libplat
{
  tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt libplat_mgmt;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplat_libplat;

#define default_stack_Cohda_Stackplat_libplat_NUM_SUB (1)
#define default_stack_Cohda_Stackplat_libplat_NUM_FLD (1)



#define default_stack_Cohda_Stackplatlog_log_DebugLevel_PARAM "Cohda_Stack.plat.log.log.DebugLevel"
#define default_stack_Cohda_Stackplatlog_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_log;

#define default_stack_Cohda_Stackplatlog_log_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_log_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_log_thr_DebugLevel_PARAM "Cohda_Stack.plat.log.log_thr.DebugLevel"
#define default_stack_Cohda_Stackplatlog_log_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_log_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_log_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_log_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_log_thr;

#define default_stack_Cohda_Stackplatlog_log_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_log_thr_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_log_udp_DebugLevel_PARAM "Cohda_Stack.plat.log.log_udp.DebugLevel"
#define default_stack_Cohda_Stackplatlog_log_udp_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_log_udp_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_log_udp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_log_udp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_log_udp;

#define default_stack_Cohda_Stackplatlog_log_udp_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_log_udp_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_pcap_log_DebugLevel_PARAM "Cohda_Stack.plat.log.pcap_log.DebugLevel"
#define default_stack_Cohda_Stackplatlog_pcap_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_pcap_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_pcap_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_pcap_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_pcap_log;

#define default_stack_Cohda_Stackplatlog_pcap_log_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_pcap_log_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_pcap_raw_DebugLevel_PARAM "Cohda_Stack.plat.log.pcap_raw.DebugLevel"
#define default_stack_Cohda_Stackplatlog_pcap_raw_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_pcap_raw_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_pcap_raw_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_pcap_raw
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_pcap_raw;

#define default_stack_Cohda_Stackplatlog_pcap_raw_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_pcap_raw_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_sys_log_DebugLevel_PARAM "Cohda_Stack.plat.log.sys_log.DebugLevel"
#define default_stack_Cohda_Stackplatlog_sys_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_sys_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_sys_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_sys_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_sys_log;

#define default_stack_Cohda_Stackplatlog_sys_log_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_sys_log_NUM_FLD (1)


#define default_stack_Cohda_Stackplatlog_tcpdump_log_DebugLevel_PARAM "Cohda_Stack.plat.log.tcpdump_log.DebugLevel"
#define default_stack_Cohda_Stackplatlog_tcpdump_log_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatlog_tcpdump_log_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatlog_tcpdump_log_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatlog_tcpdump_log
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatlog_tcpdump_log;

#define default_stack_Cohda_Stackplatlog_tcpdump_log_NUM_SUB (0)
#define default_stack_Cohda_Stackplatlog_tcpdump_log_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackplat_log
{
  tdefault_stack_Cohda_Stackplatlog_log log;

  tdefault_stack_Cohda_Stackplatlog_log_thr log_thr;

  tdefault_stack_Cohda_Stackplatlog_log_udp log_udp;

  tdefault_stack_Cohda_Stackplatlog_pcap_log pcap_log;

  tdefault_stack_Cohda_Stackplatlog_pcap_raw pcap_raw;

  tdefault_stack_Cohda_Stackplatlog_sys_log sys_log;

  tdefault_stack_Cohda_Stackplatlog_tcpdump_log tcpdump_log;
} tdefault_stack_Cohda_Stackplat_log;

#define default_stack_Cohda_Stackplat_log_NUM_SUB (7)
#define default_stack_Cohda_Stackplat_log_NUM_FLD (0)


#define default_stack_Cohda_Stackplat_plugin_DebugLevel_PARAM "Cohda_Stack.plat.plugin.DebugLevel"
#define default_stack_Cohda_Stackplat_plugin_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplat_plugin_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplat_plugin_DebugLevel_MAX 255


#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_DebugLevel_PARAM "Cohda_Stack.plat.plugin.v2xlib_plugin.DebugLevel"
#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatplugin_v2xlib_plugin
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin;

#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_NUM_SUB (0)
#define default_stack_Cohda_Stackplatplugin_v2xlib_plugin_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackplat_plugin
{
  tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin v2xlib_plugin;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplat_plugin;

#define default_stack_Cohda_Stackplat_plugin_NUM_SUB (1)
#define default_stack_Cohda_Stackplat_plugin_NUM_FLD (1)


#define default_stack_Cohda_Stackplat_util_DebugLevel_PARAM "Cohda_Stack.plat.util.DebugLevel"
#define default_stack_Cohda_Stackplat_util_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplat_util_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplat_util_DebugLevel_MAX 255


#define default_stack_Cohda_Stackplatutil_Inhibit_DebugLevel_PARAM "Cohda_Stack.plat.util.Inhibit.DebugLevel"
#define default_stack_Cohda_Stackplatutil_Inhibit_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatutil_Inhibit_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatutil_Inhibit_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatutil_Inhibit
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatutil_Inhibit;

#define default_stack_Cohda_Stackplatutil_Inhibit_NUM_SUB (0)
#define default_stack_Cohda_Stackplatutil_Inhibit_NUM_FLD (1)


#define default_stack_Cohda_Stackplatutil_PacketBuffer_DebugLevel_PARAM "Cohda_Stack.plat.util.PacketBuffer.DebugLevel"
#define default_stack_Cohda_Stackplatutil_PacketBuffer_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatutil_PacketBuffer_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatutil_PacketBuffer_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatutil_PacketBuffer
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatutil_PacketBuffer;

#define default_stack_Cohda_Stackplatutil_PacketBuffer_NUM_SUB (0)
#define default_stack_Cohda_Stackplatutil_PacketBuffer_NUM_FLD (1)


#define default_stack_Cohda_Stackplatutil_util_DebugLevel_PARAM "Cohda_Stack.plat.util.util.DebugLevel"
#define default_stack_Cohda_Stackplatutil_util_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatutil_util_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatutil_util_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatutil_util
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatutil_util;

#define default_stack_Cohda_Stackplatutil_util_NUM_SUB (0)
#define default_stack_Cohda_Stackplatutil_util_NUM_FLD (1)


#define default_stack_Cohda_Stackplatutil_thread_DebugLevel_PARAM "Cohda_Stack.plat.util.thread.DebugLevel"
#define default_stack_Cohda_Stackplatutil_thread_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatutil_thread_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatutil_thread_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatutil_thread
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatutil_thread;

#define default_stack_Cohda_Stackplatutil_thread_NUM_SUB (0)
#define default_stack_Cohda_Stackplatutil_thread_NUM_FLD (1)


#define default_stack_Cohda_Stackplatutil_worker_DebugLevel_PARAM "Cohda_Stack.plat.util.worker.DebugLevel"
#define default_stack_Cohda_Stackplatutil_worker_DebugLevel_MIN -1
#define default_stack_Cohda_Stackplatutil_worker_DebugLevel_DEF -1
#define default_stack_Cohda_Stackplatutil_worker_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackplatutil_worker
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplatutil_worker;

#define default_stack_Cohda_Stackplatutil_worker_NUM_SUB (0)
#define default_stack_Cohda_Stackplatutil_worker_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackplat_util
{
  tdefault_stack_Cohda_Stackplatutil_Inhibit Inhibit;

  tdefault_stack_Cohda_Stackplatutil_PacketBuffer PacketBuffer;

  tdefault_stack_Cohda_Stackplatutil_util util;

  tdefault_stack_Cohda_Stackplatutil_thread thread;

  tdefault_stack_Cohda_Stackplatutil_worker worker;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackplat_util;

#define default_stack_Cohda_Stackplat_util_NUM_SUB (5)
#define default_stack_Cohda_Stackplat_util_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_plat
{
  tdefault_stack_Cohda_Stackplat_persistence persistence;

  tdefault_stack_Cohda_Stackplat_libplat libplat;

  tdefault_stack_Cohda_Stackplat_log log;

  tdefault_stack_Cohda_Stackplat_plugin plugin;

  tdefault_stack_Cohda_Stackplat_util util;

  /**
   * PIDFile default is "/run/cohda.pid"
   * PID file
   */
  const char * PIDFile;

  /**
   * CoreDump_Pattern default is ""
   * Empty means don't change the system core pattern.
   * Non-empty string will enable ulimit and be used to set the
   * system core pattern.
   * (http://man7.org/linux/man-pages/man5/core.5.html).
   */
  const char * CoreDump_Pattern;

  /**
   * DebugLevel default is -1, min/max -1/255
   * PLAT
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_plat;

#define default_stack_Cohda_Stack_plat_NUM_SUB (5)
#define default_stack_Cohda_Stack_plat_NUM_FLD (3)


#define default_stack_Cohda_Stack_dump_stats_getrusage_PARAM "Cohda_Stack.dump_stats.getrusage"
#define default_stack_Cohda_Stack_dump_stats_getrusage_DEF false

typedef struct default_stack_Cohda_Stack_dump_stats
{
  /**
   * getrusage default is false
   * optionally dump statistics on exit
   */
  bool getrusage;
} tdefault_stack_Cohda_Stack_dump_stats;

#define default_stack_Cohda_Stack_dump_stats_NUM_SUB (0)
#define default_stack_Cohda_Stack_dump_stats_NUM_FLD (1)


#define default_stack_Cohda_Stack_interface_DebugLevel_PARAM "Cohda_Stack.interface.DebugLevel"
#define default_stack_Cohda_Stack_interface_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_interface_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_interface_DebugLevel_MAX 255


#define default_stack_Cohda_Stackinterface_aerolink_scms_DebugLevel_PARAM "Cohda_Stack.interface.aerolink_scms.DebugLevel"
#define default_stack_Cohda_Stackinterface_aerolink_scms_DebugLevel_MIN -1
#define default_stack_Cohda_Stackinterface_aerolink_scms_DebugLevel_DEF -1
#define default_stack_Cohda_Stackinterface_aerolink_scms_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackinterface_aerolink_scms
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackinterface_aerolink_scms;

#define default_stack_Cohda_Stackinterface_aerolink_scms_NUM_SUB (0)
#define default_stack_Cohda_Stackinterface_aerolink_scms_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_interface
{
  tdefault_stack_Cohda_Stackinterface_aerolink_scms aerolink_scms;

  /**
   * DebugLevel default is -1, min/max -1/255
   * fine-grained debug for INTERFACE
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_interface;

#define default_stack_Cohda_Stack_interface_NUM_SUB (1)
#define default_stack_Cohda_Stack_interface_NUM_FLD (1)


#define default_stack_Cohda_Stack_fac_1609_DebugLevel_PARAM "Cohda_Stack.fac_1609.DebugLevel"
#define default_stack_Cohda_Stack_fac_1609_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_fac_1609_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_fac_1609_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609_dot2_DebugLevel_PARAM "Cohda_Stack.fac_1609.dot2.DebugLevel"
#define default_stack_Cohda_Stackfac_1609_dot2_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609_dot2_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609_dot2_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609dot2_dot2_DebugLevel_PARAM "Cohda_Stack.fac_1609.dot2.dot2.DebugLevel"
#define default_stack_Cohda_Stackfac_1609dot2_dot2_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609dot2_dot2_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609dot2_dot2_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609dot2_dot2
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609dot2_dot2;

#define default_stack_Cohda_Stackfac_1609dot2_dot2_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609dot2_dot2_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_DebugLevel_PARAM "Cohda_Stack.fac_1609.dot2.dot2_idchange.DebugLevel"
#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609dot2_dot2_idchange
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange;

#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_1609_dot2
{
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2 dot2;

  tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange dot2_idchange;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609_dot2;

#define default_stack_Cohda_Stackfac_1609_dot2_NUM_SUB (2)
#define default_stack_Cohda_Stackfac_1609_dot2_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609_j2735_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.DebugLevel"
#define default_stack_Cohda_Stackfac_1609_j2735_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609_j2735_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609_j2735_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.J2735_BSM.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_J2735_BSM
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM;

#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_common.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_common
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_common_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_dot2.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_dot2
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_full_position_vector.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_map.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_map
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_map_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_message.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_message
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_message_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_probe_data_management.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_probe_vehicle_data.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_road_side_alert.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_snapshot.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_spat.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_spat
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_spat_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_vehicle_safetyextension.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j2735_vehicle_status.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status;

#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2735.j3224_sdsm.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm;

#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_1609_j2735
{
  tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM J2735_BSM;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common j2735_common;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 j2735_dot2;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector j2735_full_position_vector;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map j2735_map;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message j2735_message;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management j2735_probe_data_management;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data j2735_probe_vehicle_data;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert j2735_road_side_alert;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot j2735_snapshot;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat j2735_spat;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension j2735_vehicle_safetyextension;

  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status j2735_vehicle_status;

  tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm j3224_sdsm;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609_j2735;

#define default_stack_Cohda_Stackfac_1609_j2735_NUM_SUB (14)
#define default_stack_Cohda_Stackfac_1609_j2735_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609_j2945cc_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2945cc.DebugLevel"
#define default_stack_Cohda_Stackfac_1609_j2945cc_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609_j2945cc_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609_j2945cc_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_DebugLevel_PARAM "Cohda_Stack.fac_1609.j2945cc.j2945cc.DebugLevel"
#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609j2945cc_j2945cc
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc;

#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_1609_j2945cc
{
  tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc j2945cc;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609_j2945cc;

#define default_stack_Cohda_Stackfac_1609_j2945cc_NUM_SUB (1)
#define default_stack_Cohda_Stackfac_1609_j2945cc_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609_p1609_tx_DebugLevel_PARAM "Cohda_Stack.fac_1609.p1609_tx.DebugLevel"
#define default_stack_Cohda_Stackfac_1609_p1609_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609_p1609_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609_p1609_tx_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_DebugLevel_PARAM "Cohda_Stack.fac_1609.p1609_tx.p1609_fac_veh_ctrl.DebugLevel"
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl;

#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_DebugLevel_PARAM "Cohda_Stack.fac_1609.p1609_tx.p1609_tx_msg.DebugLevel"
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg;

#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_DebugLevel_PARAM "Cohda_Stack.fac_1609.p1609_tx.p1609_tx_replay.DebugLevel"
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay;

#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_DebugLevel_PARAM "Cohda_Stack.fac_1609.p1609_tx.p1609_tx_thr.DebugLevel"
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr;

#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_1609_p1609_tx
{
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl p1609_fac_veh_ctrl;

  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg p1609_tx_msg;

  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay p1609_tx_replay;

  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr p1609_tx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609_p1609_tx;

#define default_stack_Cohda_Stackfac_1609_p1609_tx_NUM_SUB (4)
#define default_stack_Cohda_Stackfac_1609_p1609_tx_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_1609_time_DebugLevel_PARAM "Cohda_Stack.fac_1609.time.DebugLevel"
#define default_stack_Cohda_Stackfac_1609_time_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609_time_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609_time_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_1609time_time_thr_DebugLevel_PARAM "Cohda_Stack.fac_1609.time.time_thr.DebugLevel"
#define default_stack_Cohda_Stackfac_1609time_time_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_1609time_time_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_1609time_time_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_1609time_time_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609time_time_thr;

#define default_stack_Cohda_Stackfac_1609time_time_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_1609time_time_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_1609_time
{
  tdefault_stack_Cohda_Stackfac_1609time_time_thr time_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_1609_time;

#define default_stack_Cohda_Stackfac_1609_time_NUM_SUB (1)
#define default_stack_Cohda_Stackfac_1609_time_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_fac_1609
{
  tdefault_stack_Cohda_Stackfac_1609_dot2 dot2;

  tdefault_stack_Cohda_Stackfac_1609_j2735 j2735;

  tdefault_stack_Cohda_Stackfac_1609_j2945cc j2945cc;

  tdefault_stack_Cohda_Stackfac_1609_p1609_tx p1609_tx;

  tdefault_stack_Cohda_Stackfac_1609_time time;

  /**
   * DebugLevel default is -1, min/max -1/255
   * FAC-1609
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_fac_1609;

#define default_stack_Cohda_Stack_fac_1609_NUM_SUB (5)
#define default_stack_Cohda_Stack_fac_1609_NUM_FLD (1)


#define default_stack_Cohda_Stack_net_1609_DebugLevel_PARAM "Cohda_Stack.net_1609.DebugLevel"
#define default_stack_Cohda_Stack_net_1609_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_net_1609_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_net_1609_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_1609_dot3_DebugLevel_PARAM "Cohda_Stack.net_1609.dot3.DebugLevel"
#define default_stack_Cohda_Stacknet_1609_dot3_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609_dot3_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609_dot3_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_1609dot3_wsmp_DebugLevel_PARAM "Cohda_Stack.net_1609.dot3.wsmp.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot3_wsmp_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot3_wsmp_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot3_wsmp_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_DebugLevel_PARAM "Cohda_Stack.net_1609.dot3.wsmp.dot3_wsmp.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp;

#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_DebugLevel_PARAM "Cohda_Stack.net_1609.dot3.wsmp.dot3_wsmp_proto.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto;

#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_1609dot3_wsmp
{
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp dot3_wsmp;

  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto dot3_wsmp_proto;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot3_wsmp;

#define default_stack_Cohda_Stacknet_1609dot3_wsmp_NUM_SUB (2)
#define default_stack_Cohda_Stacknet_1609dot3_wsmp_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_1609_dot3
{
  tdefault_stack_Cohda_Stacknet_1609dot3_wsmp wsmp;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609_dot3;

#define default_stack_Cohda_Stacknet_1609_dot3_NUM_SUB (1)
#define default_stack_Cohda_Stacknet_1609_dot3_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609_dot4_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.DebugLevel"
#define default_stack_Cohda_Stacknet_1609_dot4_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609_dot4_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609_dot4_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_1609dot4_wmac_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4_wmac_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4_wmac_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4_wmac_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_atk_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_atk_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_atk_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_data_netdev.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_eth_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_eth_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_eth_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_llc_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_llc_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_llc_tsf.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_llc_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_mgmt_netdev.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_qti_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_qti_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_qti_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_raw_netdev.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_sync_netdev.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_timing.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_wmac.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_wmac_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_wmac_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_DebugLevel_PARAM "Cohda_Stack.net_1609.dot4.wmac.dot4_wmac_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx;

#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_1609dot4_wmac
{
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl dot4_atk_ctrl;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx dot4_atk_rx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx dot4_atk_tx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev dot4_data_netdev;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl dot4_eth_ctrl;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx dot4_eth_rx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx dot4_eth_tx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl dot4_llc_ctrl;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx dot4_llc_rx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf dot4_llc_tsf;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx dot4_llc_tx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev dot4_mgmt_netdev;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl dot4_qti_ctrl;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx dot4_qti_rx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx dot4_qti_tx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev dot4_raw_netdev;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev dot4_sync_netdev;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing dot4_timing;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac dot4_wmac;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl dot4_wmac_ctrl;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx dot4_wmac_rx;

  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx dot4_wmac_tx;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609dot4_wmac;

#define default_stack_Cohda_Stacknet_1609dot4_wmac_NUM_SUB (22)
#define default_stack_Cohda_Stacknet_1609dot4_wmac_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_1609_dot4
{
  tdefault_stack_Cohda_Stacknet_1609dot4_wmac wmac;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_1609_dot4;

#define default_stack_Cohda_Stacknet_1609_dot4_NUM_SUB (1)
#define default_stack_Cohda_Stacknet_1609_dot4_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_net_1609
{
  tdefault_stack_Cohda_Stacknet_1609_dot3 dot3;

  tdefault_stack_Cohda_Stacknet_1609_dot4 dot4;

  /**
   * DebugLevel default is -1, min/max -1/255
   * NET-1609
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_net_1609;

#define default_stack_Cohda_Stack_net_1609_NUM_SUB (2)
#define default_stack_Cohda_Stack_net_1609_NUM_FLD (1)


#define default_stack_Cohda_Stack_fac_cn_DebugLevel_PARAM "Cohda_Stack.fac_cn.DebugLevel"
#define default_stack_Cohda_Stack_fac_cn_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_fac_cn_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_fac_cn_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_cn_libcnfac_DebugLevel_PARAM "Cohda_Stack.fac_cn.libcnfac.DebugLevel"
#define default_stack_Cohda_Stackfac_cn_libcnfac_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cn_libcnfac_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cn_libcnfac_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_cn_libcnfac
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cn_libcnfac;

#define default_stack_Cohda_Stackfac_cn_libcnfac_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_cn_libcnfac_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_cn_saec_bsm_DebugLevel_PARAM "Cohda_Stack.fac_cn.saec_bsm.DebugLevel"
#define default_stack_Cohda_Stackfac_cn_saec_bsm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cn_saec_bsm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cn_saec_bsm_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_DebugLevel_PARAM "Cohda_Stack.fac_cn.saec_bsm.saec_bsm.DebugLevel"
#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm;

#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_cn_saec_bsm
{
  tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm saec_bsm;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cn_saec_bsm;

#define default_stack_Cohda_Stackfac_cn_saec_bsm_NUM_SUB (1)
#define default_stack_Cohda_Stackfac_cn_saec_bsm_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_cn_saec_trx_DebugLevel_PARAM "Cohda_Stack.fac_cn.saec_trx.DebugLevel"
#define default_stack_Cohda_Stackfac_cn_saec_trx_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cn_saec_trx_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cn_saec_trx_DebugLevel_MAX 255


#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_DebugLevel_PARAM "Cohda_Stack.fac_cn.saec_trx.saec_trx_action.DebugLevel"
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action;

#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_DebugLevel_PARAM "Cohda_Stack.fac_cn.saec_trx.saec_trx_thr.DebugLevel"
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr;

#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stackfac_cn_saec_trx
{
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action saec_trx_action;

  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr saec_trx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cn_saec_trx;

#define default_stack_Cohda_Stackfac_cn_saec_trx_NUM_SUB (2)
#define default_stack_Cohda_Stackfac_cn_saec_trx_NUM_FLD (1)


#define default_stack_Cohda_Stackfac_cn_libsaecsec_DebugLevel_PARAM "Cohda_Stack.fac_cn.libsaecsec.DebugLevel"
#define default_stack_Cohda_Stackfac_cn_libsaecsec_DebugLevel_MIN -1
#define default_stack_Cohda_Stackfac_cn_libsaecsec_DebugLevel_DEF -1
#define default_stack_Cohda_Stackfac_cn_libsaecsec_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stackfac_cn_libsaecsec
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stackfac_cn_libsaecsec;

#define default_stack_Cohda_Stackfac_cn_libsaecsec_NUM_SUB (0)
#define default_stack_Cohda_Stackfac_cn_libsaecsec_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_fac_cn
{
  tdefault_stack_Cohda_Stackfac_cn_libcnfac libcnfac;

  tdefault_stack_Cohda_Stackfac_cn_saec_bsm saec_bsm;

  tdefault_stack_Cohda_Stackfac_cn_saec_trx saec_trx;

  tdefault_stack_Cohda_Stackfac_cn_libsaecsec libsaecsec;

  /**
   * DebugLevel default is -1, min/max -1/255
   * FAC-CN
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_fac_cn;

#define default_stack_Cohda_Stack_fac_cn_NUM_SUB (4)
#define default_stack_Cohda_Stack_fac_cn_NUM_FLD (1)


#define default_stack_Cohda_Stack_net_cn_DebugLevel_PARAM "Cohda_Stack.net_cn.DebugLevel"
#define default_stack_Cohda_Stack_net_cn_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_net_cn_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_net_cn_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_cn_libcnnet_DebugLevel_PARAM "Cohda_Stack.net_cn.libcnnet.DebugLevel"
#define default_stack_Cohda_Stacknet_cn_libcnnet_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cn_libcnnet_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cn_libcnnet_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_DebugLevel_PARAM "Cohda_Stack.net_cn.libcnnet.libcnnet_mgmt.DebugLevel"
#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt;

#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_cn_libcnnet
{
  tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt libcnnet_mgmt;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cn_libcnnet;

#define default_stack_Cohda_Stacknet_cn_libcnnet_NUM_SUB (1)
#define default_stack_Cohda_Stacknet_cn_libcnnet_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_cn_saec_pc5_DebugLevel_PARAM "Cohda_Stack.net_cn.saec_pc5.DebugLevel"
#define default_stack_Cohda_Stacknet_cn_saec_pc5_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cn_saec_pc5_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cn_saec_pc5_DebugLevel_MAX 255


#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_DebugLevel_PARAM "Cohda_Stack.net_cn.saec_pc5.saec_pc5_qti_ctrl.DebugLevel"
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl;

#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_DebugLevel_PARAM "Cohda_Stack.net_cn.saec_pc5.saec_pc5_qti_rx.DebugLevel"
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx;

#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_DebugLevel_PARAM "Cohda_Stack.net_cn.saec_pc5.saec_pc5_qti_tx.DebugLevel"
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx;

#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_NUM_SUB (0)
#define default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacknet_cn_saec_pc5
{
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl saec_pc5_qti_ctrl;

  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx saec_pc5_qti_rx;

  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx saec_pc5_qti_tx;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacknet_cn_saec_pc5;

#define default_stack_Cohda_Stacknet_cn_saec_pc5_NUM_SUB (3)
#define default_stack_Cohda_Stacknet_cn_saec_pc5_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_net_cn
{
  tdefault_stack_Cohda_Stacknet_cn_libcnnet libcnnet;

  tdefault_stack_Cohda_Stacknet_cn_saec_pc5 saec_pc5;

  /**
   * DebugLevel default is -1, min/max -1/255
   * NET-CN
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_net_cn;

#define default_stack_Cohda_Stack_net_cn_NUM_SUB (2)
#define default_stack_Cohda_Stack_net_cn_NUM_FLD (1)


#define default_stack_Cohda_Stack_sensors_DebugLevel_PARAM "Cohda_Stack.sensors.DebugLevel"
#define default_stack_Cohda_Stack_sensors_DebugLevel_MIN -1
#define default_stack_Cohda_Stack_sensors_DebugLevel_DEF -1
#define default_stack_Cohda_Stack_sensors_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensors_can_ipc_DebugLevel_PARAM "Cohda_Stack.sensors.can_ipc.DebugLevel"
#define default_stack_Cohda_Stacksensors_can_ipc_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_can_ipc_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_can_ipc_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_DebugLevel_PARAM "Cohda_Stack.sensors.can_ipc.can_ipc.DebugLevel"
#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorscan_ipc_can_ipc
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc;

#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorscan_ipc_can_ipc_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_can_ipc
{
  tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc can_ipc;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_can_ipc;

#define default_stack_Cohda_Stacksensors_can_ipc_NUM_SUB (1)
#define default_stack_Cohda_Stacksensors_can_ipc_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_can_rx_DebugLevel_PARAM "Cohda_Stack.sensors.can_rx.DebugLevel"
#define default_stack_Cohda_Stacksensors_can_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_can_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_can_rx_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_DebugLevel_PARAM "Cohda_Stack.sensors.can_rx.can_rx_thr.DebugLevel"
#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorscan_rx_can_rx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr;

#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_can_rx
{
  tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr can_rx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_can_rx;

#define default_stack_Cohda_Stacksensors_can_rx_NUM_SUB (1)
#define default_stack_Cohda_Stacksensors_can_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_can_vsc3_DebugLevel_PARAM "Cohda_Stack.sensors.can_vsc3.DebugLevel"
#define default_stack_Cohda_Stacksensors_can_vsc3_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_can_vsc3_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_can_vsc3_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_DebugLevel_PARAM "Cohda_Stack.sensors.can_vsc3.can_vsc3.DebugLevel"
#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3;

#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_DebugLevel_PARAM "Cohda_Stack.sensors.can_vsc3.vsc3obe.DebugLevel"
#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe;

#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_can_vsc3
{
  tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 can_vsc3;

  tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe vsc3obe;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_can_vsc3;

#define default_stack_Cohda_Stacksensors_can_vsc3_NUM_SUB (2)
#define default_stack_Cohda_Stacksensors_can_vsc3_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_gps_rx_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.DebugLevel"
#define default_stack_Cohda_Stacksensors_gps_rx_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_gps_rx_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_gps_rx_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_fake.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_fixed.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_gpsd.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_qti.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_replay.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_DebugLevel_PARAM "Cohda_Stack.sensors.gps_rx.gps_rx_thr.DebugLevel"
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr;

#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_gps_rx
{
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake gps_rx_fake;

  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed gps_rx_fixed;

  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd gps_rx_gpsd;

  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti gps_rx_qti;

  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay gps_rx_replay;

  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr gps_rx_thr;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_gps_rx;

#define default_stack_Cohda_Stacksensors_gps_rx_NUM_SUB (6)
#define default_stack_Cohda_Stacksensors_gps_rx_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_tim_DebugLevel_PARAM "Cohda_Stack.sensors.tim.DebugLevel"
#define default_stack_Cohda_Stacksensors_tim_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_tim_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_tim_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorstim_tim_DebugLevel_PARAM "Cohda_Stack.sensors.tim.tim.DebugLevel"
#define default_stack_Cohda_Stacksensorstim_tim_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorstim_tim_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorstim_tim_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorstim_tim
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorstim_tim;

#define default_stack_Cohda_Stacksensorstim_tim_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorstim_tim_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorstim_tim_region_DebugLevel_PARAM "Cohda_Stack.sensors.tim.tim_region.DebugLevel"
#define default_stack_Cohda_Stacksensorstim_tim_region_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorstim_tim_region_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorstim_tim_region_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorstim_tim_region
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorstim_tim_region;

#define default_stack_Cohda_Stacksensorstim_tim_region_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorstim_tim_region_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_tim
{
  tdefault_stack_Cohda_Stacksensorstim_tim tim;

  tdefault_stack_Cohda_Stacksensorstim_tim_region tim_region;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_tim;

#define default_stack_Cohda_Stacksensors_tim_NUM_SUB (2)
#define default_stack_Cohda_Stacksensors_tim_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_ivi_DebugLevel_PARAM "Cohda_Stack.sensors.ivi.DebugLevel"
#define default_stack_Cohda_Stacksensors_ivi_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_ivi_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_ivi_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorsivi_ivi_DebugLevel_PARAM "Cohda_Stack.sensors.ivi.ivi.DebugLevel"
#define default_stack_Cohda_Stacksensorsivi_ivi_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsivi_ivi_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsivi_ivi_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsivi_ivi
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsivi_ivi;

#define default_stack_Cohda_Stacksensorsivi_ivi_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsivi_ivi_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_ivi
{
  tdefault_stack_Cohda_Stacksensorsivi_ivi ivi;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_ivi;

#define default_stack_Cohda_Stacksensors_ivi_NUM_SUB (1)
#define default_stack_Cohda_Stacksensors_ivi_NUM_FLD (1)


#define default_stack_Cohda_Stacksensors_rsicn_DebugLevel_PARAM "Cohda_Stack.sensors.rsicn.DebugLevel"
#define default_stack_Cohda_Stacksensors_rsicn_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensors_rsicn_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensors_rsicn_DebugLevel_MAX 255


#define default_stack_Cohda_Stacksensorsrsicn_rsicn_DebugLevel_PARAM "Cohda_Stack.sensors.rsicn.rsicn.DebugLevel"
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsrsicn_rsicn
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsrsicn_rsicn;

#define default_stack_Cohda_Stacksensorsrsicn_rsicn_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_NUM_FLD (1)


#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_DebugLevel_PARAM "Cohda_Stack.sensors.rsicn.rsicn_region.DebugLevel"
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_DebugLevel_MIN -1
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_DebugLevel_DEF -1
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_DebugLevel_MAX 255

typedef struct default_stack_Cohda_Stacksensorsrsicn_rsicn_region
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region;

#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_NUM_SUB (0)
#define default_stack_Cohda_Stacksensorsrsicn_rsicn_region_NUM_FLD (1)

typedef struct default_stack_Cohda_Stacksensors_rsicn
{
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn rsicn;

  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region rsicn_region;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stacksensors_rsicn;

#define default_stack_Cohda_Stacksensors_rsicn_NUM_SUB (2)
#define default_stack_Cohda_Stacksensors_rsicn_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack_sensors
{
  tdefault_stack_Cohda_Stacksensors_can_ipc can_ipc;

  tdefault_stack_Cohda_Stacksensors_can_rx can_rx;

  tdefault_stack_Cohda_Stacksensors_can_vsc3 can_vsc3;

  tdefault_stack_Cohda_Stacksensors_gps_rx gps_rx;

  tdefault_stack_Cohda_Stacksensors_tim tim;

  tdefault_stack_Cohda_Stacksensors_ivi ivi;

  tdefault_stack_Cohda_Stacksensors_rsicn rsicn;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack_sensors;

#define default_stack_Cohda_Stack_sensors_NUM_SUB (7)
#define default_stack_Cohda_Stack_sensors_NUM_FLD (1)

typedef struct default_stack_Cohda_Stack
{
  tdefault_stack_Cohda_Stack_net_its net_its;

  tdefault_stack_Cohda_Stack_fac_its fac_its;

  tdefault_stack_Cohda_Stack_plat plat;

  tdefault_stack_Cohda_Stack_dump_stats dump_stats;

  tdefault_stack_Cohda_Stack_interface interface;

  tdefault_stack_Cohda_Stack_fac_1609 fac_1609;

  tdefault_stack_Cohda_Stack_net_1609 net_1609;

  tdefault_stack_Cohda_Stack_fac_cn fac_cn;

  tdefault_stack_Cohda_Stack_net_cn net_cn;

  tdefault_stack_Cohda_Stack_sensors sensors;

  /**
   * DebugLevel default is -1, min/max -1/255
   * stack debug level for the stack modules to inherit
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_Stack;

#define default_stack_Cohda_Stack_NUM_SUB (10)
#define default_stack_Cohda_Stack_NUM_FLD (1)


#define default_stack_Cohda_SPATMAP_DebugLevel_PARAM "Cohda_SPATMAP.DebugLevel"
#define default_stack_Cohda_SPATMAP_DebugLevel_MIN -1
#define default_stack_Cohda_SPATMAP_DebugLevel_DEF -1
#define default_stack_Cohda_SPATMAP_DebugLevel_MAX 255

#define default_stack_Cohda_SPATMAP_RxNormalInterval_ms_PARAM "Cohda_SPATMAP.RxNormalInterval_ms"
#define default_stack_Cohda_SPATMAP_RxNormalInterval_ms_MIN 50
#define default_stack_Cohda_SPATMAP_RxNormalInterval_ms_DEF 250
#define default_stack_Cohda_SPATMAP_RxNormalInterval_ms_MAX 2000

#define default_stack_Cohda_SPATMAP_RxFastInterval_ms_PARAM "Cohda_SPATMAP.RxFastInterval_ms"
#define default_stack_Cohda_SPATMAP_RxFastInterval_ms_MIN 50
#define default_stack_Cohda_SPATMAP_RxFastInterval_ms_DEF 100
#define default_stack_Cohda_SPATMAP_RxFastInterval_ms_MAX 2000

#define default_stack_Cohda_SPATMAP_MaxDistanceInRange_m_PARAM "Cohda_SPATMAP.MaxDistanceInRange_m"
#define default_stack_Cohda_SPATMAP_MaxDistanceInRange_m_MIN 100
#define default_stack_Cohda_SPATMAP_MaxDistanceInRange_m_DEF 500
#define default_stack_Cohda_SPATMAP_MaxDistanceInRange_m_MAX 10000

#define default_stack_Cohda_SPATMAP_MinDistanceInRange_m_PARAM "Cohda_SPATMAP.MinDistanceInRange_m"
#define default_stack_Cohda_SPATMAP_MinDistanceInRange_m_MIN 0
#define default_stack_Cohda_SPATMAP_MinDistanceInRange_m_DEF 0
#define default_stack_Cohda_SPATMAP_MinDistanceInRange_m_MAX 100

#define default_stack_Cohda_SPATMAP_MaxNumIntersections_PARAM "Cohda_SPATMAP.MaxNumIntersections"
#define default_stack_Cohda_SPATMAP_MaxNumIntersections_MIN 1
#define default_stack_Cohda_SPATMAP_MaxNumIntersections_DEF 8
#define default_stack_Cohda_SPATMAP_MaxNumIntersections_MAX 100

#define default_stack_Cohda_SPATMAP_TurningAngleLimit_d_PARAM "Cohda_SPATMAP.TurningAngleLimit_d"
#define default_stack_Cohda_SPATMAP_TurningAngleLimit_d_MIN 0
#define default_stack_Cohda_SPATMAP_TurningAngleLimit_d_DEF 60
#define default_stack_Cohda_SPATMAP_TurningAngleLimit_d_MAX 1024

#define default_stack_Cohda_SPATMAP_BoundingBoxTolerance_PARAM "Cohda_SPATMAP.BoundingBoxTolerance"
#define default_stack_Cohda_SPATMAP_BoundingBoxTolerance_MIN 0.0
#define default_stack_Cohda_SPATMAP_BoundingBoxTolerance_DEF 1.0
#define default_stack_Cohda_SPATMAP_BoundingBoxTolerance_MAX 99.9

#define default_stack_Cohda_SPATMAP_AlignmentThreshold_d_PARAM "Cohda_SPATMAP.AlignmentThreshold_d"
#define default_stack_Cohda_SPATMAP_AlignmentThreshold_d_MIN 0
#define default_stack_Cohda_SPATMAP_AlignmentThreshold_d_DEF 90
#define default_stack_Cohda_SPATMAP_AlignmentThreshold_d_MAX 180

#define default_stack_Cohda_SPATMAP_ReplacementPolicy_PARAM "Cohda_SPATMAP.ReplacementPolicy"
#define default_stack_Cohda_SPATMAP_ReplacementPolicy_DEF true

#define default_stack_Cohda_SPATMAP_MinSpeed_kph_PARAM "Cohda_SPATMAP.MinSpeed_kph"
#define default_stack_Cohda_SPATMAP_MinSpeed_kph_MIN 0
#define default_stack_Cohda_SPATMAP_MinSpeed_kph_DEF 0
#define default_stack_Cohda_SPATMAP_MinSpeed_kph_MAX 100

#define default_stack_Cohda_SPATMAP_MaxIntersectionAge_ms_PARAM "Cohda_SPATMAP.MaxIntersectionAge_ms"
#define default_stack_Cohda_SPATMAP_MaxIntersectionAge_ms_MIN 0
#define default_stack_Cohda_SPATMAP_MaxIntersectionAge_ms_DEF 10000
#define default_stack_Cohda_SPATMAP_MaxIntersectionAge_ms_MAX 65536

#define default_stack_Cohda_SPATMAP_MaxBehindDist_PARAM "Cohda_SPATMAP.MaxBehindDist"
#define default_stack_Cohda_SPATMAP_MaxBehindDist_MIN 0
#define default_stack_Cohda_SPATMAP_MaxBehindDist_DEF 100
#define default_stack_Cohda_SPATMAP_MaxBehindDist_MAX 2000

#define default_stack_Cohda_SPATMAP_TimeMarkScheduling_PARAM "Cohda_SPATMAP.TimeMarkScheduling"
#define default_stack_Cohda_SPATMAP_TimeMarkScheduling_DEF false

#define default_stack_Cohda_SPATMAP_EnforcePhaseCheck_PARAM "Cohda_SPATMAP.EnforcePhaseCheck"
#define default_stack_Cohda_SPATMAP_EnforcePhaseCheck_DEF true

#define default_stack_Cohda_SPATMAP_ConfidenceMeasure_PARAM "Cohda_SPATMAP.ConfidenceMeasure"
#define default_stack_Cohda_SPATMAP_ConfidenceMeasure_DEF false

#define default_stack_Cohda_SPATMAP_ConfidenceThresh_pc_PARAM "Cohda_SPATMAP.ConfidenceThresh_pc"
#define default_stack_Cohda_SPATMAP_ConfidenceThresh_pc_MIN -1
#define default_stack_Cohda_SPATMAP_ConfidenceThresh_pc_DEF 25
#define default_stack_Cohda_SPATMAP_ConfidenceThresh_pc_MAX 99

#define default_stack_Cohda_SPATMAP_LaneWidth_m_PARAM "Cohda_SPATMAP.LaneWidth_m"
#define default_stack_Cohda_SPATMAP_LaneWidth_m_MIN 1.0
#define default_stack_Cohda_SPATMAP_LaneWidth_m_DEF 3.6
#define default_stack_Cohda_SPATMAP_LaneWidth_m_MAX 8.0

#define default_stack_Cohda_SPATMAP_PreferSuppliedApproachID_PARAM "Cohda_SPATMAP.PreferSuppliedApproachID"
#define default_stack_Cohda_SPATMAP_PreferSuppliedApproachID_DEF true

#define default_stack_Cohda_SPATMAP_SchedulerPolicy_PARAM "Cohda_SPATMAP.SchedulerPolicy"
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_MIN 0
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_DEF 1
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_MAX 2
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_SCHED_OTHER (0)
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_SCHED_FIFO (1)
#define default_stack_Cohda_SPATMAP_SchedulerPolicy_SCHED_RR (2)

#define default_stack_Cohda_SPATMAP_SchedulerPriority_pc_PARAM "Cohda_SPATMAP.SchedulerPriority_pc"
#define default_stack_Cohda_SPATMAP_SchedulerPriority_pc_MIN 0
#define default_stack_Cohda_SPATMAP_SchedulerPriority_pc_DEF 0
#define default_stack_Cohda_SPATMAP_SchedulerPriority_pc_MAX 100


#define default_stack_Cohda_SPATMAP_spat_cn_rx_DebugLevel_PARAM "Cohda_SPATMAP.spat_cn_rx.DebugLevel"
#define default_stack_Cohda_SPATMAP_spat_cn_rx_DebugLevel_MIN -1
#define default_stack_Cohda_SPATMAP_spat_cn_rx_DebugLevel_DEF -1
#define default_stack_Cohda_SPATMAP_spat_cn_rx_DebugLevel_MAX 255

#define default_stack_Cohda_SPATMAP_spat_cn_rx_EnforcePhaseCheck_PARAM "Cohda_SPATMAP.spat_cn_rx.EnforcePhaseCheck"
#define default_stack_Cohda_SPATMAP_spat_cn_rx_EnforcePhaseCheck_DEF false

typedef struct default_stack_Cohda_SPATMAP_spat_cn_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;

  /**
   * EnforcePhaseCheck default is false
   * 0 = Don't require SPAT information to return an intersection placement
   * 1 = Require SPAT information associated with Map data to return intersection placement and phase state
   */
  bool EnforcePhaseCheck;
} tdefault_stack_Cohda_SPATMAP_spat_cn_rx;

#define default_stack_Cohda_SPATMAP_spat_cn_rx_NUM_SUB (0)
#define default_stack_Cohda_SPATMAP_spat_cn_rx_NUM_FLD (2)


#define default_stack_Cohda_SPATMAP_spat_rx_DebugLevel_PARAM "Cohda_SPATMAP.spat_rx.DebugLevel"
#define default_stack_Cohda_SPATMAP_spat_rx_DebugLevel_MIN -1
#define default_stack_Cohda_SPATMAP_spat_rx_DebugLevel_DEF -1
#define default_stack_Cohda_SPATMAP_spat_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_SPATMAP_spat_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_SPATMAP_spat_rx;

#define default_stack_Cohda_SPATMAP_spat_rx_NUM_SUB (0)
#define default_stack_Cohda_SPATMAP_spat_rx_NUM_FLD (1)


#define default_stack_Cohda_SPATMAP_spat_utils_DebugLevel_PARAM "Cohda_SPATMAP.spat_utils.DebugLevel"
#define default_stack_Cohda_SPATMAP_spat_utils_DebugLevel_MIN -1
#define default_stack_Cohda_SPATMAP_spat_utils_DebugLevel_DEF -1
#define default_stack_Cohda_SPATMAP_spat_utils_DebugLevel_MAX 255

typedef struct default_stack_Cohda_SPATMAP_spat_utils
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_SPATMAP_spat_utils;

#define default_stack_Cohda_SPATMAP_spat_utils_NUM_SUB (0)
#define default_stack_Cohda_SPATMAP_spat_utils_NUM_FLD (1)

typedef struct default_stack_Cohda_SPATMAP
{
  tdefault_stack_Cohda_SPATMAP_spat_cn_rx spat_cn_rx;

  tdefault_stack_Cohda_SPATMAP_spat_rx spat_rx;

  tdefault_stack_Cohda_SPATMAP_spat_utils spat_utils;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                      SPaT/Map Configuration Items                      *
   ***************************************************************************
   * if != -1, override debug level for SPAT/MAP module only
   */
  int32_t DebugLevel;

  /**
   * RxNormalInterval_ms default is 250, min/max 50/2000
   * Periodic evaluation interval if no intersections are relevant (in ms)
   */
  int32_t RxNormalInterval_ms;

  /**
   * RxFastInterval_ms default is 100, min/max 50/2000
   * Periodic evaluation interval once an intersections is relevant (in ms)
   */
  int32_t RxFastInterval_ms;

  /**
   * MaxDistanceInRange_m default is 500, min/max 100/10000
   * Max distance, in meters, between vehicle and RSU to be considered in range
   */
  int32_t MaxDistanceInRange_m;

  /**
   * MinDistanceInRange_m default is 0, min/max 0/100
   * Min distance, in meters, between vehicle and RSU to be considered in range
   */
  int32_t MinDistanceInRange_m;

  /**
   * MaxNumIntersections default is 8, min/max 1/100
   * Maximum number of relevant intersections stored locally
   */
  int32_t MaxNumIntersections;

  /**
   * TurningAngleLimit_d default is 60, min/max 0/1024
   * Absolute angle limit greater than it, vehicle is considered turning lft/rt
   */
  int32_t TurningAngleLimit_d;

  /**
   * BoundingBoxTolerance default is 1.0, min/max 0.0/99.9
   * Factor used to determine lane bounding box width, where bounding box width
   * is equal to lane width multiplied by this factor (default is 1.0)
   */
  float BoundingBoxTolerance;

  /**
   * AlignmentThreshold_d default is 90, min/max 0/180
   * Angle (in degrees) greater than which, vehicle heading is not considered
   * aligned with approach, lane, or intersection bearing (i.e. not heading to)
   */
  int32_t AlignmentThreshold_d;

  /**
   * MinSpeed_kph default is 0, min/max 0/100
   * Minimum speed for vehicle travelling to start periodic evaluation
   */
  int32_t MinSpeed_kph;

  /**
   * MaxIntersectionAge_ms default is 10000, min/max 0/65536
   * Max age (in ms) for intersection to be timedout if not received anymore
   * If set to 0, this function is disabled and intersection never times out
   */
  int32_t MaxIntersectionAge_ms;

  /**
   * MaxBehindDist default is 100, min/max 0/2000
   * Max distance behind vehicle to consider intersection still valid
   * If set to 0, this function is disabled
   */
  int32_t MaxBehindDist;

  /**
   * ConfidenceThresh_pc default is 25, min/max -1/99
   * Acceptable confidence value for lane match
   * -1 allows even 0 confidence lanes (legacy behaviour)
   */
  int32_t ConfidenceThresh_pc;

  /**
   * LaneWidth_m default is 3.6, min/max 1.0/8.0
   * lane width for lane match error estimation
   */
  float LaneWidth_m;

  /**
   * SchedulerPolicy default is 1, min/max 0/2
   * Worker thread policy
   * -   0 = SCHED_OTHER (no priorities)
   * -   1 = SCHED_FIFO  (strict)
   * -   2 = SCHED_RR    (FIFO + timeslice limits)
   */
  int32_t SchedulerPolicy;

  /**
   * SchedulerPriority_pc default is 0, min/max 0/100
   * % of available priority within the scheduler
   */
  int32_t SchedulerPriority_pc;

  /**
   * ReplacementPolicy default is true
   * Replacement policy for new intersection in case storage limit reached
   * 0 = Oldest entry replaced first
   * 1 = Least relevant entry repalced first
   */
  bool ReplacementPolicy;

  /**
   * TimeMarkScheduling default is false
   * Define TimeChangeDetails as absolute or relative time to change
   * 0 = Absolute value (tenths of a second in the current or next hour)
   * 1 = Relative value (remaining tenths of seconds from now)
   */
  bool TimeMarkScheduling;

  /**
   * EnforcePhaseCheck default is true
   * 0 = Don't require SPAT information to return an intersection placement
   * 1 = Require SPAT information associated with Map data to return intersection placement and phase state
   */
  bool EnforcePhaseCheck;

  /**
   * ConfidenceMeasure default is false
   * 0 = Use linear distance separation as confidence measure
   * 1 = Use Gaussian distribution centred at the GPS Lat/Lon and use
   *     the standard deviation error of Lat/Lon to determine confidence
   *     of lane match given the GPS error.
   */
  bool ConfidenceMeasure;

  /**
   * PreferSuppliedApproachID default is true
   * 0 = Approach ID always computed from average lane bearing
   * 1 = Approach IDs from received MAP if available, else compute from average lane bearing
   */
  bool PreferSuppliedApproachID;
} tdefault_stack_Cohda_SPATMAP;

#define default_stack_Cohda_SPATMAP_NUM_SUB (3)
#define default_stack_Cohda_SPATMAP_NUM_FLD (21)


#define default_stack_Cohda_TC_DebugLevel_PARAM "Cohda_TC.DebugLevel"
#define default_stack_Cohda_TC_DebugLevel_MIN -1
#define default_stack_Cohda_TC_DebugLevel_DEF -1
#define default_stack_Cohda_TC_DebugLevel_MAX 255

#define default_stack_Cohda_TC_schedulerPolicy_PARAM "Cohda_TC.schedulerPolicy"
#define default_stack_Cohda_TC_schedulerPolicy_MIN -1
#define default_stack_Cohda_TC_schedulerPolicy_DEF 1
#define default_stack_Cohda_TC_schedulerPolicy_MAX 2

#define default_stack_Cohda_TC_schedulerPriority_pc_PARAM "Cohda_TC.schedulerPriority_pc"
#define default_stack_Cohda_TC_schedulerPriority_pc_MIN 0
#define default_stack_Cohda_TC_schedulerPriority_pc_DEF 20
#define default_stack_Cohda_TC_schedulerPriority_pc_MAX 100

#define default_stack_Cohda_TC_MaxRemoteAge_ms_PARAM "Cohda_TC.MaxRemoteAge_ms"
#define default_stack_Cohda_TC_MaxRemoteAge_ms_MIN 0
#define default_stack_Cohda_TC_MaxRemoteAge_ms_DEF 5000
#define default_stack_Cohda_TC_MaxRemoteAge_ms_MAX 50000

#define default_stack_Cohda_TC_maxRange_m_PARAM "Cohda_TC.maxRange_m"
#define default_stack_Cohda_TC_maxRange_m_MIN 0
#define default_stack_Cohda_TC_maxRange_m_DEF 700
#define default_stack_Cohda_TC_maxRange_m_MAX 10000

#define default_stack_Cohda_TC_sameElevMode_PARAM "Cohda_TC.sameElevMode"
#define default_stack_Cohda_TC_sameElevMode_MIN 0
#define default_stack_Cohda_TC_sameElevMode_DEF 1
#define default_stack_Cohda_TC_sameElevMode_MAX 2

#define default_stack_Cohda_TC_sameElevLimitMin_cm_PARAM "Cohda_TC.sameElevLimitMin_cm"
#define default_stack_Cohda_TC_sameElevLimitMin_cm_MIN 0
#define default_stack_Cohda_TC_sameElevLimitMin_cm_DEF 450
#define default_stack_Cohda_TC_sameElevLimitMin_cm_MAX 60000

#define default_stack_Cohda_TC_sameElevLimitMax_cm_PARAM "Cohda_TC.sameElevLimitMax_cm"
#define default_stack_Cohda_TC_sameElevLimitMax_cm_MIN 0
#define default_stack_Cohda_TC_sameElevLimitMax_cm_DEF 1000
#define default_stack_Cohda_TC_sameElevLimitMax_cm_MAX 60000

#define default_stack_Cohda_TC_ElevationHysteresisMin_eighthdeg_PARAM "Cohda_TC.ElevationHysteresisMin_eighthdeg"
#define default_stack_Cohda_TC_ElevationHysteresisMin_eighthdeg_MIN 0
#define default_stack_Cohda_TC_ElevationHysteresisMin_eighthdeg_DEF 25
#define default_stack_Cohda_TC_ElevationHysteresisMin_eighthdeg_MAX 376

#define default_stack_Cohda_TC_ElevationHysteresisMax_eighthdeg_PARAM "Cohda_TC.ElevationHysteresisMax_eighthdeg"
#define default_stack_Cohda_TC_ElevationHysteresisMax_eighthdeg_MIN 0
#define default_stack_Cohda_TC_ElevationHysteresisMax_eighthdeg_DEF 54
#define default_stack_Cohda_TC_ElevationHysteresisMax_eighthdeg_MAX 450

#define default_stack_Cohda_TC_Sanity_Latitude_m_PARAM "Cohda_TC.Sanity_Latitude_m"
#define default_stack_Cohda_TC_Sanity_Latitude_m_MIN 0
#define default_stack_Cohda_TC_Sanity_Latitude_m_DEF 2000
#define default_stack_Cohda_TC_Sanity_Latitude_m_MAX 10000

#define default_stack_Cohda_TC_Sanity_Longitude_m_PARAM "Cohda_TC.Sanity_Longitude_m"
#define default_stack_Cohda_TC_Sanity_Longitude_m_MIN 0
#define default_stack_Cohda_TC_Sanity_Longitude_m_DEF 2000
#define default_stack_Cohda_TC_Sanity_Longitude_m_MAX 10000

#define default_stack_Cohda_TC_sameHeadingLimit_deg_PARAM "Cohda_TC.sameHeadingLimit_deg"
#define default_stack_Cohda_TC_sameHeadingLimit_deg_MIN 0
#define default_stack_Cohda_TC_sameHeadingLimit_deg_DEF 30
#define default_stack_Cohda_TC_sameHeadingLimit_deg_MAX 90

#define default_stack_Cohda_TC_oppositeHeadingLimit_deg_PARAM "Cohda_TC.oppositeHeadingLimit_deg"
#define default_stack_Cohda_TC_oppositeHeadingLimit_deg_MIN 0
#define default_stack_Cohda_TC_oppositeHeadingLimit_deg_DEF 20
#define default_stack_Cohda_TC_oppositeHeadingLimit_deg_MAX 90

#define default_stack_Cohda_TC_safeSpeed_mps_PARAM "Cohda_TC.safeSpeed_mps"
#define default_stack_Cohda_TC_safeSpeed_mps_MIN 0.0
#define default_stack_Cohda_TC_safeSpeed_mps_DEF 7.0
#define default_stack_Cohda_TC_safeSpeed_mps_MAX 99.9

#define default_stack_Cohda_TC_RELATIVE_SPEED_CLOSING_PARAM "Cohda_TC.RELATIVE_SPEED_CLOSING"
#define default_stack_Cohda_TC_RELATIVE_SPEED_CLOSING_MIN -99.9
#define default_stack_Cohda_TC_RELATIVE_SPEED_CLOSING_DEF -1.0
#define default_stack_Cohda_TC_RELATIVE_SPEED_CLOSING_MAX 99.9

#define default_stack_Cohda_TC_RELATIVE_SPEED_RECEDING_PARAM "Cohda_TC.RELATIVE_SPEED_RECEDING"
#define default_stack_Cohda_TC_RELATIVE_SPEED_RECEDING_MIN -99.9
#define default_stack_Cohda_TC_RELATIVE_SPEED_RECEDING_DEF 1.8
#define default_stack_Cohda_TC_RELATIVE_SPEED_RECEDING_MAX 99.9

#define default_stack_Cohda_TC_rearBoreSightLimit_deg_PARAM "Cohda_TC.rearBoreSightLimit_deg"
#define default_stack_Cohda_TC_rearBoreSightLimit_deg_MIN 90
#define default_stack_Cohda_TC_rearBoreSightLimit_deg_DEF 120
#define default_stack_Cohda_TC_rearBoreSightLimit_deg_MAX 180

#define default_stack_Cohda_TC_fwdBoreSightLimit_deg_PARAM "Cohda_TC.fwdBoreSightLimit_deg"
#define default_stack_Cohda_TC_fwdBoreSightLimit_deg_MIN 0
#define default_stack_Cohda_TC_fwdBoreSightLimit_deg_DEF 60
#define default_stack_Cohda_TC_fwdBoreSightLimit_deg_MAX 90

#define default_stack_Cohda_TC_laneWidth_mm_PARAM "Cohda_TC.laneWidth_mm"
#define default_stack_Cohda_TC_laneWidth_mm_MIN 1000
#define default_stack_Cohda_TC_laneWidth_mm_DEF 3600
#define default_stack_Cohda_TC_laneWidth_mm_MAX 8000

#define default_stack_Cohda_TC_adjLaneWidth_mm_PARAM "Cohda_TC.adjLaneWidth_mm"
#define default_stack_Cohda_TC_adjLaneWidth_mm_MIN 1000
#define default_stack_Cohda_TC_adjLaneWidth_mm_DEF 3600
#define default_stack_Cohda_TC_adjLaneWidth_mm_MAX 8000

#define default_stack_Cohda_TC_parallelLimit_deg_PARAM "Cohda_TC.parallelLimit_deg"
#define default_stack_Cohda_TC_parallelLimit_deg_MIN 0
#define default_stack_Cohda_TC_parallelLimit_deg_DEF 3
#define default_stack_Cohda_TC_parallelLimit_deg_MAX 15

#define default_stack_Cohda_TC_curveMinConf_pc_PARAM "Cohda_TC.curveMinConf_pc"
#define default_stack_Cohda_TC_curveMinConf_pc_MIN 0
#define default_stack_Cohda_TC_curveMinConf_pc_DEF 85
#define default_stack_Cohda_TC_curveMinConf_pc_MAX 100

#define default_stack_Cohda_TC_curveMinRadius_m_PARAM "Cohda_TC.curveMinRadius_m"
#define default_stack_Cohda_TC_curveMinRadius_m_MIN 0
#define default_stack_Cohda_TC_curveMinRadius_m_DEF 50
#define default_stack_Cohda_TC_curveMinRadius_m_MAX 10000

#define default_stack_Cohda_TC_curveMaxRadius_m_PARAM "Cohda_TC.curveMaxRadius_m"
#define default_stack_Cohda_TC_curveMaxRadius_m_MIN 0
#define default_stack_Cohda_TC_curveMaxRadius_m_DEF 1800
#define default_stack_Cohda_TC_curveMaxRadius_m_MAX 10000

#define default_stack_Cohda_TC_phLonSepLimit_percent_PARAM "Cohda_TC.phLonSepLimit_percent"
#define default_stack_Cohda_TC_phLonSepLimit_percent_MIN 0
#define default_stack_Cohda_TC_phLonSepLimit_percent_DEF 25
#define default_stack_Cohda_TC_phLonSepLimit_percent_MAX 100

#define default_stack_Cohda_TC_laneChangeSpeedMax_mps_PARAM "Cohda_TC.laneChangeSpeedMax_mps"
#define default_stack_Cohda_TC_laneChangeSpeedMax_mps_MIN 0.0
#define default_stack_Cohda_TC_laneChangeSpeedMax_mps_DEF 0.0
#define default_stack_Cohda_TC_laneChangeSpeedMax_mps_MAX 20.0

#define default_stack_Cohda_TC_laneChangeRadiusMax_m_PARAM "Cohda_TC.laneChangeRadiusMax_m"
#define default_stack_Cohda_TC_laneChangeRadiusMax_m_MIN 5
#define default_stack_Cohda_TC_laneChangeRadiusMax_m_DEF 1500
#define default_stack_Cohda_TC_laneChangeRadiusMax_m_MAX 4000

#define default_stack_Cohda_TC_pathIsStraightAngularThreshold_deg_PARAM "Cohda_TC.pathIsStraightAngularThreshold_deg"
#define default_stack_Cohda_TC_pathIsStraightAngularThreshold_deg_MIN 0
#define default_stack_Cohda_TC_pathIsStraightAngularThreshold_deg_DEF 3
#define default_stack_Cohda_TC_pathIsStraightAngularThreshold_deg_MAX 90

#define default_stack_Cohda_TC_MaxSanityAge_ms_PARAM "Cohda_TC.MaxSanityAge_ms"
#define default_stack_Cohda_TC_MaxSanityAge_ms_MIN -5000
#define default_stack_Cohda_TC_MaxSanityAge_ms_DEF -2000
#define default_stack_Cohda_TC_MaxSanityAge_ms_MAX 0

#define default_stack_Cohda_TC_TTC_ACCEL_MIN_PARAM "Cohda_TC.TTC_ACCEL_MIN"
#define default_stack_Cohda_TC_TTC_ACCEL_MIN_MIN -99.9
#define default_stack_Cohda_TC_TTC_ACCEL_MIN_DEF 0.2
#define default_stack_Cohda_TC_TTC_ACCEL_MIN_MAX 99.9

#define default_stack_Cohda_TC_TTC_SPEED_MIN_PARAM "Cohda_TC.TTC_SPEED_MIN"
#define default_stack_Cohda_TC_TTC_SPEED_MIN_MIN -99.9
#define default_stack_Cohda_TC_TTC_SPEED_MIN_DEF 0.9
#define default_stack_Cohda_TC_TTC_SPEED_MIN_MAX 99.9

#define default_stack_Cohda_TC_ADVANCE_TIME_MAX_PARAM "Cohda_TC.ADVANCE_TIME_MAX"
#define default_stack_Cohda_TC_ADVANCE_TIME_MAX_MIN 0
#define default_stack_Cohda_TC_ADVANCE_TIME_MAX_DEF 750
#define default_stack_Cohda_TC_ADVANCE_TIME_MAX_MAX 1000

#define default_stack_Cohda_TC_ADVANCE_TIME_MIN_PARAM "Cohda_TC.ADVANCE_TIME_MIN"
#define default_stack_Cohda_TC_ADVANCE_TIME_MIN_MIN 0
#define default_stack_Cohda_TC_ADVANCE_TIME_MIN_DEF 150
#define default_stack_Cohda_TC_ADVANCE_TIME_MIN_MAX 1000


#define default_stack_Cohda_TC_TC_DebugLevel_PARAM "Cohda_TC.TC.DebugLevel"
#define default_stack_Cohda_TC_TC_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC;

#define default_stack_Cohda_TC_TC_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_Classify_DebugLevel_PARAM "Cohda_TC.TC_Classify.DebugLevel"
#define default_stack_Cohda_TC_TC_Classify_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_Classify_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_Classify_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_Classify
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_Classify;

#define default_stack_Cohda_TC_TC_Classify_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_Classify_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_ETSI_DebugLevel_PARAM "Cohda_TC.TC_ETSI.DebugLevel"
#define default_stack_Cohda_TC_TC_ETSI_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_ETSI_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_ETSI_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_ETSI
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_ETSI;

#define default_stack_Cohda_TC_TC_ETSI_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_ETSI_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_Ext_DebugLevel_PARAM "Cohda_TC.TC_Ext.DebugLevel"
#define default_stack_Cohda_TC_TC_Ext_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_Ext_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_Ext_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_Ext
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_Ext;

#define default_stack_Cohda_TC_TC_Ext_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_Ext_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_J2735_DebugLevel_PARAM "Cohda_TC.TC_J2735.DebugLevel"
#define default_stack_Cohda_TC_TC_J2735_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_J2735_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_J2735_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_J2735
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_J2735;

#define default_stack_Cohda_TC_TC_J2735_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_J2735_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_SAEC_DebugLevel_PARAM "Cohda_TC.TC_SAEC.DebugLevel"
#define default_stack_Cohda_TC_TC_SAEC_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_SAEC_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_SAEC_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_SAEC
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_SAEC;

#define default_stack_Cohda_TC_TC_SAEC_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_SAEC_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_J3224_DebugLevel_PARAM "Cohda_TC.TC_J3224.DebugLevel"
#define default_stack_Cohda_TC_TC_J3224_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_J3224_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_J3224_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_J3224
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_J3224;

#define default_stack_Cohda_TC_TC_J3224_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_J3224_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_Remote_DebugLevel_PARAM "Cohda_TC.TC_Remote.DebugLevel"
#define default_stack_Cohda_TC_TC_Remote_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_Remote_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_Remote_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_Remote
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_Remote;

#define default_stack_Cohda_TC_TC_Remote_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_Remote_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_Thread_DebugLevel_PARAM "Cohda_TC.TC_Thread.DebugLevel"
#define default_stack_Cohda_TC_TC_Thread_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_Thread_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_Thread_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_Thread
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_Thread;

#define default_stack_Cohda_TC_TC_Thread_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_Thread_NUM_FLD (1)


#define default_stack_Cohda_TC_TC_Util_DebugLevel_PARAM "Cohda_TC.TC_Util.DebugLevel"
#define default_stack_Cohda_TC_TC_Util_DebugLevel_MIN -1
#define default_stack_Cohda_TC_TC_Util_DebugLevel_DEF -1
#define default_stack_Cohda_TC_TC_Util_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TC_TC_Util
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TC_TC_Util;

#define default_stack_Cohda_TC_TC_Util_NUM_SUB (0)
#define default_stack_Cohda_TC_TC_Util_NUM_FLD (1)

typedef struct default_stack_Cohda_TC
{
  tdefault_stack_Cohda_TC_TC TC;

  tdefault_stack_Cohda_TC_TC_Classify TC_Classify;

  tdefault_stack_Cohda_TC_TC_ETSI TC_ETSI;

  tdefault_stack_Cohda_TC_TC_Ext TC_Ext;

  tdefault_stack_Cohda_TC_TC_J2735 TC_J2735;

  tdefault_stack_Cohda_TC_TC_SAEC TC_SAEC;

  tdefault_stack_Cohda_TC_TC_J3224 TC_J3224;

  tdefault_stack_Cohda_TC_TC_Remote TC_Remote;

  tdefault_stack_Cohda_TC_TC_Thread TC_Thread;

  tdefault_stack_Cohda_TC_TC_Util TC_Util;

  /**
   * DebugLevel default is -1, min/max -1/255
   **                                 TC                                     *
   ***************************************************************************
   ***************************************************************************
   **                  Stack module TC                                       *
   ***************************************************************************
   * if != -1, override debug level for TC module only
   */
  int32_t DebugLevel;

  /**
   * schedulerPolicy default is 1, min/max -1/2
   *  0 = SCHED_OTHER (no priorities)
   *  1 = SCHED_FIFO  (strict)
   *  2 = SCHED_RR    (FIFO + timeslice limits)
   */
  int32_t schedulerPolicy;

  /**
   * schedulerPriority_pc default is 20, min/max 0/100
   * priotity %
   */
  int32_t schedulerPriority_pc;

  /**
   * MaxRemoteAge_ms default is 5000, min/max 0/50000
   * maximum age before remotes are purged
   */
  int32_t MaxRemoteAge_ms;

  /**
   * maxRange_m default is 700, min/max 0/10000
   * Range beyond which RVs are considered safe [m]
   */
  int32_t maxRange_m;

  /**
   * sameElevMode default is 1, min/max 0/2
   * How to classify the relative RV/HV elevation
   * 0 - absolute
   * 1 - adjusted absolute
   * 2 - absolute + slope
   */
  int32_t sameElevMode;

  /**
   * sameElevLimitMin_cm default is 450, min/max 0/60000
   * Elevation difference limit to use when travelling on a flat gradient [cm]
   */
  int32_t sameElevLimitMin_cm;

  /**
   * sameElevLimitMax_cm default is 1000, min/max 0/60000
   * Expanded elevation difference limit to use when travelling on a gradient [cm]
   */
  int32_t sameElevLimitMax_cm;

  /**
   * ElevationHysteresisMin_eighthdeg default is 25, min/max 0/376
   * Normal evelation check (not open up) hysteresis [0.125 degree]
   */
  int32_t ElevationHysteresisMin_eighthdeg;

  /**
   * ElevationHysteresisMax_eighthdeg default is 54, min/max 0/450
   * Open up elevation check hysteresis [0.125 degree]
   */
  int32_t ElevationHysteresisMax_eighthdeg;

  /**
   * Sanity_Latitude_m default is 2000, min/max 0/10000
   * Sanity check distance for latitude
   */
  int32_t Sanity_Latitude_m;

  /**
   * Sanity_Longitude_m default is 2000, min/max 0/10000
   * Sanity check distance for latitude
   */
  int32_t Sanity_Longitude_m;

  /**
   * sameHeadingLimit_deg default is 30, min/max 0/90
   * Limit of heading difference within which RV is considered 'same direction' [degrees]
   */
  int32_t sameHeadingLimit_deg;

  /**
   * oppositeHeadingLimit_deg default is 20, min/max 0/90
   * Limit of heading difference above which RV is considered 'opposite direction' [180 - degrees]
   */
  int32_t oppositeHeadingLimit_deg;

  /**
   * safeSpeed_mps default is 7.0, min/max 0.0/99.9
   * Speed below which the HV has no ability to react to alerts [m/s]
   */
  float safeSpeed_mps;

  /**
   * RELATIVE_SPEED_CLOSING default is -1.0, min/max -99.9/99.9
   * relative HV/RV speed below which vehicles are deemed to be approaching [mps]
   */
  float RELATIVE_SPEED_CLOSING;

  /**
   * RELATIVE_SPEED_RECEDING default is 1.8, min/max -99.9/99.9
   * relative HV/RV speed above which vehicles are deemed to be receeding [mps]
   */
  float RELATIVE_SPEED_RECEDING;

  /**
   * rearBoreSightLimit_deg default is 120, min/max 90/180
   * abs(Azimuth) range above which RV is considered 'behind'
   */
  int32_t rearBoreSightLimit_deg;

  /**
   * fwdBoreSightLimit_deg default is 60, min/max 0/90
   * abs(Azimuth) range below which RV is considered 'ahead'
   * At 11.3 degrees fwdBoreSight, 3m lane width, HV can see RV 4 lanes away (12m
   * lat offset) when RV longitudinal separation is 60m 'ahead'.
   * At 6.8 degrees fwdBoreSight, 3m lane width, HV can see RV 4 lanes away (12m
   * lat offset) when RV longitudinal separation is 100m 'ahead'.
   * When it's set too high, HV will treat RV in another street before intersection
   * as ahead and not doing intersecting check. When too low, RV on curve within
   * same lane will not be treated as ahead.
   */
  int32_t fwdBoreSightLimit_deg;

  /**
   * laneWidth_mm default is 3600, min/max 1000/8000
   * Lane width [mm], AKA host lane width
   */
  int32_t laneWidth_mm;

  /**
   * adjLaneWidth_mm default is 3600, min/max 1000/8000
   * Adjacent lane width [mm]
   */
  int32_t adjLaneWidth_mm;

  /**
   * parallelLimit_deg default is 3, min/max 0/15
   * Small intersecting angle below which RVs are considered parallel
   */
  int32_t parallelLimit_deg;

  /**
   * curveMinConf_pc default is 85, min/max 0/100
   * Minimum confidence required for PP to be trusted [%]
   */
  int32_t curveMinConf_pc;

  /**
   * curveMinRadius_m default is 50, min/max 0/10000
   * Minimum PP curve radius [m]
   */
  int32_t curveMinRadius_m;

  /**
   * curveMaxRadius_m default is 1800, min/max 0/10000
   * Maximum PP curve radius before considered straight [m]
   */
  int32_t curveMaxRadius_m;

  /**
   * phLonSepLimit_percent default is 25, min/max 0/100
   * If RV is moving (or no event flags):
   * If RV is moving (or no event flags):
   * For PH matching's determination of LonSep in case of divergence:
   * If the LonOffset1 and LonOffset2 values differ by less than x%
   * then they are equally weighted otherwise the shorter is used
   */
  int32_t phLonSepLimit_percent;

  /**
   * laneChangeSpeedMax_mps default is 0.0, min/max 0.0/20.0
   * RV Speed below which the RV might be changing lanes [m/s]
   */
  float laneChangeSpeedMax_mps;

  /**
   * laneChangeRadiusMax_m default is 1500, min/max 5/4000
   * HV Curvature Radius above which the RV might be changing lanes [m]
   */
  int32_t laneChangeRadiusMax_m;

  /**
   * pathIsStraightAngularThreshold_deg default is 3, min/max 0/90
   * Maximum relative heading difference on a straight path [deg]
   */
  int32_t pathIsStraightAngularThreshold_deg;

  /**
   * MaxSanityAge_ms default is -2000, min/max -5000/0
   * maximum sanity time diff
   */
  int32_t MaxSanityAge_ms;

  /**
   * TTC_ACCEL_MIN default is 0.2, min/max -99.9/99.9
   * Minimum approach acceleration required to do full quadratic solution [m/s/s]
   */
  float TTC_ACCEL_MIN;

  /**
   * TTC_SPEED_MIN default is 0.9, min/max -99.9/99.9
   * Minimum approach speed required for TTC [m/s]
   */
  float TTC_SPEED_MIN;

  /**
   * ADVANCE_TIME_MAX default is 750, min/max 0/1000
   * Threshold for TC vector advance
   * Time difference above which RV's are not advanced [ms]
   */
  int32_t ADVANCE_TIME_MAX;

  /**
   * ADVANCE_TIME_MIN default is 150, min/max 0/1000
   * Time difference below which RV's are not advanced [ms]
   */
  int32_t ADVANCE_TIME_MIN;
} tdefault_stack_Cohda_TC;

#define default_stack_Cohda_TC_NUM_SUB (10)
#define default_stack_Cohda_TC_NUM_FLD (34)


#define default_stack_Cohda_LDM_DebugLevel_PARAM "Cohda_LDM.DebugLevel"
#define default_stack_Cohda_LDM_DebugLevel_MIN -1
#define default_stack_Cohda_LDM_DebugLevel_DEF -1
#define default_stack_Cohda_LDM_DebugLevel_MAX 255

#define default_stack_Cohda_LDM_DataBaseName_PARAM "Cohda_LDM.DataBaseName"
#define default_stack_Cohda_LDM_DataBaseName_DEF "ldm.db"

#define default_stack_Cohda_LDM_DataBaseBackup_PARAM "Cohda_LDM.DataBaseBackup"
#define default_stack_Cohda_LDM_DataBaseBackup_MIN 0
#define default_stack_Cohda_LDM_DataBaseBackup_DEF 1
#define default_stack_Cohda_LDM_DataBaseBackup_MAX 2
#define default_stack_Cohda_LDM_DataBaseBackup_NoBackup (0)
#define default_stack_Cohda_LDM_DataBaseBackup_Backup (1)
#define default_stack_Cohda_LDM_DataBaseBackup_BackupOnline (2)

#define default_stack_Cohda_LDM_DataBaseBackupOnlineStep_PARAM "Cohda_LDM.DataBaseBackupOnlineStep"
#define default_stack_Cohda_LDM_DataBaseBackupOnlineStep_MIN 1
#define default_stack_Cohda_LDM_DataBaseBackupOnlineStep_DEF 512
#define default_stack_Cohda_LDM_DataBaseBackupOnlineStep_MAX 65535

#define default_stack_Cohda_LDM_DataBaseBackupOnlineInterval_ms_PARAM "Cohda_LDM.DataBaseBackupOnlineInterval_ms"
#define default_stack_Cohda_LDM_DataBaseBackupOnlineInterval_ms_MIN 1
#define default_stack_Cohda_LDM_DataBaseBackupOnlineInterval_ms_DEF 50
#define default_stack_Cohda_LDM_DataBaseBackupOnlineInterval_ms_MAX 65535

#define default_stack_Cohda_LDM_FallbackName_PARAM "Cohda_LDM.FallbackName"
#define default_stack_Cohda_LDM_FallbackName_DEF ""

#define default_stack_Cohda_LDM_QueryInterval_ms_PARAM "Cohda_LDM.QueryInterval_ms"
#define default_stack_Cohda_LDM_QueryInterval_ms_MIN 1000
#define default_stack_Cohda_LDM_QueryInterval_ms_DEF 2003
#define default_stack_Cohda_LDM_QueryInterval_ms_MAX 10000

#define default_stack_Cohda_LDM_ExpiryCheckInterval_ms_PARAM "Cohda_LDM.ExpiryCheckInterval_ms"
#define default_stack_Cohda_LDM_ExpiryCheckInterval_ms_MIN 1000
#define default_stack_Cohda_LDM_ExpiryCheckInterval_ms_DEF 10007
#define default_stack_Cohda_LDM_ExpiryCheckInterval_ms_MAX 1000000


#define default_stack_Cohda_LDM_ldm_DebugLevel_PARAM "Cohda_LDM.ldm.DebugLevel"
#define default_stack_Cohda_LDM_ldm_DebugLevel_MIN -1
#define default_stack_Cohda_LDM_ldm_DebugLevel_DEF -1
#define default_stack_Cohda_LDM_ldm_DebugLevel_MAX 255

typedef struct default_stack_Cohda_LDM_ldm
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_LDM_ldm;

#define default_stack_Cohda_LDM_ldm_NUM_SUB (0)
#define default_stack_Cohda_LDM_ldm_NUM_FLD (1)


#define default_stack_Cohda_LDM_ldm_online_backup_DebugLevel_PARAM "Cohda_LDM.ldm_online_backup.DebugLevel"
#define default_stack_Cohda_LDM_ldm_online_backup_DebugLevel_MIN -1
#define default_stack_Cohda_LDM_ldm_online_backup_DebugLevel_DEF -1
#define default_stack_Cohda_LDM_ldm_online_backup_DebugLevel_MAX 255

#define default_stack_Cohda_LDM_ldm_online_backup_BackupFilename_PARAM "Cohda_LDM.ldm_online_backup.BackupFilename"
#define default_stack_Cohda_LDM_ldm_online_backup_BackupFilename_DEF "/tmp/ldm.online.db"

typedef struct default_stack_Cohda_LDM_ldm_online_backup
{
  /**
   * BackupFilename default is "/tmp/ldm.online.db"
   * where the online module shoudl store a backup.
   */
  const char * BackupFilename;

  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_LDM_ldm_online_backup;

#define default_stack_Cohda_LDM_ldm_online_backup_NUM_SUB (0)
#define default_stack_Cohda_LDM_ldm_online_backup_NUM_FLD (2)


#define default_stack_Cohda_LDM_ldm_sql_DebugLevel_PARAM "Cohda_LDM.ldm_sql.DebugLevel"
#define default_stack_Cohda_LDM_ldm_sql_DebugLevel_MIN -1
#define default_stack_Cohda_LDM_ldm_sql_DebugLevel_DEF -1
#define default_stack_Cohda_LDM_ldm_sql_DebugLevel_MAX 255

typedef struct default_stack_Cohda_LDM_ldm_sql
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_LDM_ldm_sql;

#define default_stack_Cohda_LDM_ldm_sql_NUM_SUB (0)
#define default_stack_Cohda_LDM_ldm_sql_NUM_FLD (1)


#define default_stack_Cohda_LDM_ldm_thread_DebugLevel_PARAM "Cohda_LDM.ldm_thread.DebugLevel"
#define default_stack_Cohda_LDM_ldm_thread_DebugLevel_MIN -1
#define default_stack_Cohda_LDM_ldm_thread_DebugLevel_DEF -1
#define default_stack_Cohda_LDM_ldm_thread_DebugLevel_MAX 255

typedef struct default_stack_Cohda_LDM_ldm_thread
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_LDM_ldm_thread;

#define default_stack_Cohda_LDM_ldm_thread_NUM_SUB (0)
#define default_stack_Cohda_LDM_ldm_thread_NUM_FLD (1)

typedef struct default_stack_Cohda_LDM
{
  tdefault_stack_Cohda_LDM_ldm ldm;

  tdefault_stack_Cohda_LDM_ldm_online_backup ldm_online_backup;

  tdefault_stack_Cohda_LDM_ldm_sql ldm_sql;

  tdefault_stack_Cohda_LDM_ldm_thread ldm_thread;

  /**
   * DataBaseName default is "ldm.db"
   * Name and path of LDM database
   */
  const char * DataBaseName;

  /**
   * FallbackName default is ""
   * Name and path of fallback (factory) LDM database. Empty means none
   */
  const char * FallbackName;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                          LDM (Local Dynamic Map)                       *
   ***************************************************************************
   ******************************************************************************
   **         LDM (Local Dynamic Map)
   ******************************************************************************
   */
  int32_t DebugLevel;

  /**
   * DataBaseBackup default is 1, min/max 0/2
   * -  0 = NoBackup (Do not backup LDM at power cycle)
   * -  1 = Backup (LDM at power cycle)
   * -  2 = BackupOnline (Can be invoked for online backup in an LDM background thread)
   * Backup mechanism of LDM
   */
  int32_t DataBaseBackup;

  /**
   * DataBaseBackupOnlineStep default is 512, min/max 1/65535
   * Backup step when LDM is backed up online
   */
  int32_t DataBaseBackupOnlineStep;

  /**
   * DataBaseBackupOnlineInterval_ms default is 50, min/max 1/65535
   * Sleep interval between online backup steps
   */
  int32_t DataBaseBackupOnlineInterval_ms;

  /**
   * QueryInterval_ms default is 2003, min/max 1000/10000
   * Periodic bounding box query interval (in ms)
   */
  int32_t QueryInterval_ms;

  /**
   * ExpiryCheckInterval_ms default is 10007, min/max 1000/1000000
   * Periodic LDM expiry items check interval (in ms)
   */
  int32_t ExpiryCheckInterval_ms;
} tdefault_stack_Cohda_LDM;

#define default_stack_Cohda_LDM_NUM_SUB (4)
#define default_stack_Cohda_LDM_NUM_FLD (8)


#define default_stack_Cohda_App_UAVD_DebugLevel_PARAM "Cohda_App_UAVD.DebugLevel"
#define default_stack_Cohda_App_UAVD_DebugLevel_MIN -1
#define default_stack_Cohda_App_UAVD_DebugLevel_DEF -1
#define default_stack_Cohda_App_UAVD_DebugLevel_MAX 255

#define default_stack_Cohda_App_UAVD_ENABLE_PARAM "Cohda_App_UAVD.ENABLE"
#define default_stack_Cohda_App_UAVD_ENABLE_DEF false

#define default_stack_Cohda_App_UAVD_REC_SEVERITY_MAX_PARAM "Cohda_App_UAVD.REC_SEVERITY_MAX"
#define default_stack_Cohda_App_UAVD_REC_SEVERITY_MAX_MIN 0
#define default_stack_Cohda_App_UAVD_REC_SEVERITY_MAX_DEF 245
#define default_stack_Cohda_App_UAVD_REC_SEVERITY_MAX_MAX 255

#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ALL_PARAM "Cohda_App_UAVD.CLASSIF_MASK_ALL"
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ALL_MIN 0x0ul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ALL_DEF 0x55ul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ALL_MAX 0xfffful

#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ANY_PARAM "Cohda_App_UAVD.CLASSIF_MASK_ANY"
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ANY_MIN 0x0ul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ANY_DEF 0x300ul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_ANY_MAX 0xfffful

#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_NOT_PARAM "Cohda_App_UAVD.CLASSIF_MASK_NOT"
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_NOT_MIN 0x0ul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_NOT_DEF 0xc08aul
#define default_stack_Cohda_App_UAVD_CLASSIF_MASK_NOT_MAX 0xfffful

#define default_stack_Cohda_App_UAVD_DET_AREA_LATITUDE_DEG_PARAM "Cohda_App_UAVD.DET_AREA_LATITUDE_DEG"
#define default_stack_Cohda_App_UAVD_DET_AREA_LATITUDE_DEG_MIN -90.0
#define default_stack_Cohda_App_UAVD_DET_AREA_LATITUDE_DEG_DEF 0.0
#define default_stack_Cohda_App_UAVD_DET_AREA_LATITUDE_DEG_MAX 90.0

#define default_stack_Cohda_App_UAVD_DET_AREA_LONGITUDE_DEG_PARAM "Cohda_App_UAVD.DET_AREA_LONGITUDE_DEG"
#define default_stack_Cohda_App_UAVD_DET_AREA_LONGITUDE_DEG_MIN -180.0
#define default_stack_Cohda_App_UAVD_DET_AREA_LONGITUDE_DEG_DEF 0.0
#define default_stack_Cohda_App_UAVD_DET_AREA_LONGITUDE_DEG_MAX 180.0

#define default_stack_Cohda_App_UAVD_DET_AREA_LENGTH_MM_PARAM "Cohda_App_UAVD.DET_AREA_LENGTH_MM"
#define default_stack_Cohda_App_UAVD_DET_AREA_LENGTH_MM_MIN 0
#define default_stack_Cohda_App_UAVD_DET_AREA_LENGTH_MM_DEF 0
#define default_stack_Cohda_App_UAVD_DET_AREA_LENGTH_MM_MAX 50000

#define default_stack_Cohda_App_UAVD_DET_AREA_WIDTH_MM_PARAM "Cohda_App_UAVD.DET_AREA_WIDTH_MM"
#define default_stack_Cohda_App_UAVD_DET_AREA_WIDTH_MM_MIN 0
#define default_stack_Cohda_App_UAVD_DET_AREA_WIDTH_MM_DEF 0
#define default_stack_Cohda_App_UAVD_DET_AREA_WIDTH_MM_MAX 50000

#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_PARAM "Cohda_App_UAVD.DET_AREA_ORIENTATION"
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_MIN 0
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_DEF 0
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_MAX 360

#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_ERROR_PARAM "Cohda_App_UAVD.DET_AREA_ORIENTATION_ERROR"
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_ERROR_MIN 0
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_ERROR_DEF 0
#define default_stack_Cohda_App_UAVD_DET_AREA_ORIENTATION_ERROR_MAX 360

#define default_stack_Cohda_App_UAVD_RV_HEADING_TOLERANCE_PARAM "Cohda_App_UAVD.RV_HEADING_TOLERANCE"
#define default_stack_Cohda_App_UAVD_RV_HEADING_TOLERANCE_MIN 0
#define default_stack_Cohda_App_UAVD_RV_HEADING_TOLERANCE_DEF 0
#define default_stack_Cohda_App_UAVD_RV_HEADING_TOLERANCE_MAX 360

#define default_stack_Cohda_App_UAVD_ALERT_DISTANCE_MAX_PARAM "Cohda_App_UAVD.ALERT_DISTANCE_MAX"
#define default_stack_Cohda_App_UAVD_ALERT_DISTANCE_MAX_MIN 0
#define default_stack_Cohda_App_UAVD_ALERT_DISTANCE_MAX_DEF 0
#define default_stack_Cohda_App_UAVD_ALERT_DISTANCE_MAX_MAX 1000

#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_MSB_PARAM "Cohda_App_UAVD.AUTH_OBAHNBUS_HASHID_MSB"
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_MSB_MIN 0x0ul
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_MSB_DEF 0xe708c597ul
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_MSB_MAX 0xfffffffful

#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_LSB_PARAM "Cohda_App_UAVD.AUTH_OBAHNBUS_HASHID_LSB"
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_LSB_MIN 0x0ul
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_LSB_DEF 0xb8d7a875ul
#define default_stack_Cohda_App_UAVD_AUTH_OBAHNBUS_HASHID_LSB_MAX 0xfffffffful

typedef struct default_stack_Cohda_App_UAVD
{
  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                               UAVD                                     *
   ***************************************************************************
   * if != -1, override debug level for UAVD module only
   */
  int32_t DebugLevel;

  /**
   * REC_SEVERITY_MAX default is 245, min/max 0/255
   * UAVD severity max (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MAX;

  /**
   * CLASSIF_MASK_ALL default is 0x55ul, min/max 0x0ul/0xfffful
   * UAVD: All of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_SAME_ELEVATION | TC_CLASSIF_SIMILAR_DIRECTION |
   * TC_CLASSIF_CLOSING | TC_CLASSIF_IS_AHEAD
   */
  uint32_t CLASSIF_MASK_ALL;

  /**
   * CLASSIF_MASK_ANY default is 0x300ul, min/max 0x0ul/0xfffful
   * UAVD: Any (at least one)) of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_SAME_LANE | TC_CLASSIF_NEAR_LANE
   */
  uint32_t CLASSIF_MASK_ANY;

  /**
   * CLASSIF_MASK_NOT default is 0xc08aul, min/max 0x0ul/0xfffful
   * UAVD: None of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_DIFF_ELEVATION | TC_CLASSIF_IS_BEHIND |
   * TC_CLASSIF_OPPOSITE_DIRECTION | TC_CLASSIF_XSING
   */
  uint32_t CLASSIF_MASK_NOT;

  /**
   * DET_AREA_LATITUDE_DEG default is 0.0, min/max -90.0/90.0
   * Detection area coordinates
   * UAVD Detection area Latitude
   */
  float DET_AREA_LATITUDE_DEG;

  /**
   * DET_AREA_LONGITUDE_DEG default is 0.0, min/max -180.0/180.0
   * UAVD Detection area Longitude
   */
  float DET_AREA_LONGITUDE_DEG;

  /**
   * DET_AREA_LENGTH_MM default is 0, min/max 0/50000
   * UAVD Detection area length
   */
  int32_t DET_AREA_LENGTH_MM;

  /**
   * DET_AREA_WIDTH_MM default is 0, min/max 0/50000
   * UAVD Detection area width
   */
  int32_t DET_AREA_WIDTH_MM;

  /**
   * DET_AREA_ORIENTATION default is 0, min/max 0/360
   * UAVD Detection area Orientation
   */
  int32_t DET_AREA_ORIENTATION;

  /**
   * DET_AREA_ORIENTATION_ERROR default is 0, min/max 0/360
   * UAVD Detection area Orientation error
   */
  int32_t DET_AREA_ORIENTATION_ERROR;

  /**
   * RV_HEADING_TOLERANCE default is 0, min/max 0/360
   * UAVD RV Heading Tolerance
   */
  int32_t RV_HEADING_TOLERANCE;

  /**
   * ALERT_DISTANCE_MAX default is 0, min/max 0/1000
   * Distance to detection above UAVD alerts are not raised [m]
   */
  int32_t ALERT_DISTANCE_MAX;

  /**
   * AUTH_OBAHNBUS_HASHID_MSB default is 0xe708c597ul, min/max 0x0ul/0xfffffffful
   * HASHID for Authorized OBAHN buses
   */
  uint32_t AUTH_OBAHNBUS_HASHID_MSB;

  /**
   * AUTH_OBAHNBUS_HASHID_LSB default is 0xb8d7a875ul, min/max 0x0ul/0xfffffffful
   */
  uint32_t AUTH_OBAHNBUS_HASHID_LSB;

  /**
   * ENABLE default is false
   * UAVD enabled?
   */
  bool ENABLE;
} tdefault_stack_Cohda_App_UAVD;

#define default_stack_Cohda_App_UAVD_NUM_SUB (0)
#define default_stack_Cohda_App_UAVD_NUM_FLD (16)


#define default_stack_Cohda_App_VTRW_DebugLevel_PARAM "Cohda_App_VTRW.DebugLevel"
#define default_stack_Cohda_App_VTRW_DebugLevel_MIN -1
#define default_stack_Cohda_App_VTRW_DebugLevel_DEF -1
#define default_stack_Cohda_App_VTRW_DebugLevel_MAX 255

#define default_stack_Cohda_App_VTRW_ENABLE_PARAM "Cohda_App_VTRW.ENABLE"
#define default_stack_Cohda_App_VTRW_ENABLE_DEF false

#define default_stack_Cohda_App_VTRW_REC_ENABLE_PARAM "Cohda_App_VTRW.REC_ENABLE"
#define default_stack_Cohda_App_VTRW_REC_ENABLE_DEF false

#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MAX_PARAM "Cohda_App_VTRW.REC_SEVERITY_MAX"
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MAX_MIN 0
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MAX_DEF 220
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MAX_MAX 255

#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MIN_PARAM "Cohda_App_VTRW.REC_SEVERITY_MIN"
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MIN_MIN 0
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MIN_DEF 170
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MIN_MAX 255

#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MED_PARAM "Cohda_App_VTRW.REC_SEVERITY_MED"
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MED_MIN 0
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MED_DEF 200
#define default_stack_Cohda_App_VTRW_REC_SEVERITY_MED_MAX 255

#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ALL_PARAM "Cohda_App_VTRW.CLASSIF_MASK_ALL"
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ALL_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ALL_DEF 0x0ul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ALL_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ANY_PARAM "Cohda_App_VTRW.CLASSIF_MASK_ANY"
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ANY_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ANY_DEF 0x0ul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_ANY_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_NOT_PARAM "Cohda_App_VTRW.CLASSIF_MASK_NOT"
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_NOT_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_NOT_DEF 0xaul
#define default_stack_Cohda_App_VTRW_CLASSIF_MASK_NOT_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_Turn_Direction_PARAM "Cohda_App_VTRW.Turn_Direction"
#define default_stack_Cohda_App_VTRW_Turn_Direction_DEF false

#define default_stack_Cohda_App_VTRW_TURN_SIGNALS_PARAM "Cohda_App_VTRW.TURN_SIGNALS"
#define default_stack_Cohda_App_VTRW_TURN_SIGNALS_DEF false

#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Time_PARAM "Cohda_App_VTRW.Behind_Check_Max_Time"
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Time_MIN 0
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Time_DEF 10
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Time_MAX 120

#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Distance_PARAM "Cohda_App_VTRW.Behind_Check_Max_Distance"
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Distance_MIN 0.0
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Distance_DEF 15.0
#define default_stack_Cohda_App_VTRW_Behind_Check_Max_Distance_MAX 99.0

#define default_stack_Cohda_App_VTRW_REC_HV_SPEED_MAX_PARAM "Cohda_App_VTRW.REC_HV_SPEED_MAX"
#define default_stack_Cohda_App_VTRW_REC_HV_SPEED_MAX_MIN 0.0
#define default_stack_Cohda_App_VTRW_REC_HV_SPEED_MAX_DEF 8.0
#define default_stack_Cohda_App_VTRW_REC_HV_SPEED_MAX_MAX 99.99

#define default_stack_Cohda_App_VTRW_REC_RV_SPEED_MAX_PARAM "Cohda_App_VTRW.REC_RV_SPEED_MAX"
#define default_stack_Cohda_App_VTRW_REC_RV_SPEED_MAX_MIN 0.0
#define default_stack_Cohda_App_VTRW_REC_RV_SPEED_MAX_DEF 12.0
#define default_stack_Cohda_App_VTRW_REC_RV_SPEED_MAX_MAX 99.99

#define default_stack_Cohda_App_VTRW_REC_RV_DECEL_MIN_PARAM "Cohda_App_VTRW.REC_RV_DECEL_MIN"
#define default_stack_Cohda_App_VTRW_REC_RV_DECEL_MIN_MIN 0.0
#define default_stack_Cohda_App_VTRW_REC_RV_DECEL_MIN_DEF 1.0
#define default_stack_Cohda_App_VTRW_REC_RV_DECEL_MIN_MAX 99.99

#define default_stack_Cohda_App_VTRW_REC_RV_MAX_AHEAD_PARAM "Cohda_App_VTRW.REC_RV_MAX_AHEAD"
#define default_stack_Cohda_App_VTRW_REC_RV_MAX_AHEAD_MIN 0.0
#define default_stack_Cohda_App_VTRW_REC_RV_MAX_AHEAD_DEF 10.0
#define default_stack_Cohda_App_VTRW_REC_RV_MAX_AHEAD_MAX 99.99

#define default_stack_Cohda_App_VTRW_REC_HEADING_MATCH_PARAM "Cohda_App_VTRW.REC_HEADING_MATCH"
#define default_stack_Cohda_App_VTRW_REC_HEADING_MATCH_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_REC_HEADING_MATCH_DEF 0xc0000003ul
#define default_stack_Cohda_App_VTRW_REC_HEADING_MATCH_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_REC_ENTRY_DISTANCE_PARAM "Cohda_App_VTRW.REC_ENTRY_DISTANCE"
#define default_stack_Cohda_App_VTRW_REC_ENTRY_DISTANCE_MIN 0
#define default_stack_Cohda_App_VTRW_REC_ENTRY_DISTANCE_DEF 100
#define default_stack_Cohda_App_VTRW_REC_ENTRY_DISTANCE_MAX 65535

#define default_stack_Cohda_App_VTRW_REC_ENTRY_TIME_PARAM "Cohda_App_VTRW.REC_ENTRY_TIME"
#define default_stack_Cohda_App_VTRW_REC_ENTRY_TIME_MIN 0
#define default_stack_Cohda_App_VTRW_REC_ENTRY_TIME_DEF 5000
#define default_stack_Cohda_App_VTRW_REC_ENTRY_TIME_MAX 65535

#define default_stack_Cohda_App_VTRW_REC_EXIT_TIME_PARAM "Cohda_App_VTRW.REC_EXIT_TIME"
#define default_stack_Cohda_App_VTRW_REC_EXIT_TIME_MIN 0
#define default_stack_Cohda_App_VTRW_REC_EXIT_TIME_DEF 200
#define default_stack_Cohda_App_VTRW_REC_EXIT_TIME_MAX 65535

#define default_stack_Cohda_App_VTRW_INSIDE_BUS_ZONE_PARAM "Cohda_App_VTRW.INSIDE_BUS_ZONE"
#define default_stack_Cohda_App_VTRW_INSIDE_BUS_ZONE_DEF false

#define default_stack_Cohda_App_VTRW_HZ_Width_PARAM "Cohda_App_VTRW.HZ_Width"
#define default_stack_Cohda_App_VTRW_HZ_Width_MIN 0
#define default_stack_Cohda_App_VTRW_HZ_Width_DEF 255
#define default_stack_Cohda_App_VTRW_HZ_Width_MAX 1000

#define default_stack_Cohda_App_VTRW_HZ_LongitudinalExtension_PARAM "Cohda_App_VTRW.HZ_LongitudinalExtension"
#define default_stack_Cohda_App_VTRW_HZ_LongitudinalExtension_MIN 0
#define default_stack_Cohda_App_VTRW_HZ_LongitudinalExtension_DEF 255
#define default_stack_Cohda_App_VTRW_HZ_LongitudinalExtension_MAX 1000

#define default_stack_Cohda_App_VTRW_HV_INHIBIT_MASK_PARAM "Cohda_App_VTRW.HV_INHIBIT_MASK"
#define default_stack_Cohda_App_VTRW_HV_INHIBIT_MASK_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_HV_INHIBIT_MASK_DEF 0x0ul
#define default_stack_Cohda_App_VTRW_HV_INHIBIT_MASK_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_RV_INHIBIT_MASK_PARAM "Cohda_App_VTRW.RV_INHIBIT_MASK"
#define default_stack_Cohda_App_VTRW_RV_INHIBIT_MASK_MIN 0x0ul
#define default_stack_Cohda_App_VTRW_RV_INHIBIT_MASK_DEF 0x0ul
#define default_stack_Cohda_App_VTRW_RV_INHIBIT_MASK_MAX 0xfffffffful

#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MIN_PARAM "Cohda_App_VTRW.INHIBIT_SPEED_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MIN_MIN 0.0
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MIN_DEF 0.0
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MIN_MAX 99.99

#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MAX_PARAM "Cohda_App_VTRW.INHIBIT_SPEED_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MAX_MIN 0.0
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MAX_DEF 99.9
#define default_stack_Cohda_App_VTRW_INHIBIT_SPEED_MAX_MAX 99.99

#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MIN_PARAM "Cohda_App_VTRW.INHIBIT_YAW_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MIN_MIN -360
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MIN_MAX 360

#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MAX_PARAM "Cohda_App_VTRW.INHIBIT_YAW_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MAX_MIN -360
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MAX_DEF 10
#define default_stack_Cohda_App_VTRW_INHIBIT_YAW_MAX_MAX 360

#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MIN_PARAM "Cohda_App_VTRW.INHIBIT_STEER_ANGLE_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MIN_MIN -1024
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MIN_MAX 1024

#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MAX_PARAM "Cohda_App_VTRW.INHIBIT_STEER_ANGLE_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MAX_MIN -1024
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MAX_DEF 1024
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_ANGLE_MAX_MAX 1024

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MIN_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MIN_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MIN_MAX 100

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MAX_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MAX_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MAX_DEF 100
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_MAX_MAX 100

#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MIN_PARAM "Cohda_App_VTRW.INHIBIT_THROTTLE_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MIN_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MIN_MAX 100

#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MAX_PARAM "Cohda_App_VTRW.INHIBIT_THROTTLE_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MAX_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MAX_DEF 100
#define default_stack_Cohda_App_VTRW_INHIBIT_THROTTLE_MAX_MAX 100

#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MIN_PARAM "Cohda_App_VTRW.INHIBIT_LONACCEL_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MIN_MIN -99.9
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MIN_DEF -0.35
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MIN_MAX 99.9

#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MAX_PARAM "Cohda_App_VTRW.INHIBIT_LONACCEL_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MAX_MIN -99.9
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MAX_DEF 99.9
#define default_stack_Cohda_App_VTRW_INHIBIT_LONACCEL_MAX_MAX 99.9

#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MIN_PARAM "Cohda_App_VTRW.INHIBIT_STEER_RATE_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MIN_MIN -360
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MIN_MAX 360

#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MAX_PARAM "Cohda_App_VTRW.INHIBIT_STEER_RATE_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MAX_MIN -360
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MAX_DEF 360
#define default_stack_Cohda_App_VTRW_INHIBIT_STEER_RATE_MAX_MAX 360

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MIN_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_RATE_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MIN_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MIN_MAX 10000

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MAX_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_RATE_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MAX_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MAX_DEF 10000
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_RATE_MAX_MAX 10000

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MIN_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_KPA_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MIN_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MIN_MAX 19125

#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MAX_PARAM "Cohda_App_VTRW.INHIBIT_BRAKE_KPA_MAX"
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MAX_MIN 0
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MAX_DEF 19125
#define default_stack_Cohda_App_VTRW_INHIBIT_BRAKE_KPA_MAX_MAX 19125

#define default_stack_Cohda_App_VTRW_INHIBIT_LATOFFSET_MIN_PARAM "Cohda_App_VTRW.INHIBIT_LATOFFSET_MIN"
#define default_stack_Cohda_App_VTRW_INHIBIT_LATOFFSET_MIN_MIN -10000
#define default_stack_Cohda_App_VTRW_INHIBIT_LATOFFSET_MIN_DEF 0
#define default_stack_Cohda_App_VTRW_INHIBIT_LATOFFSET_MIN_MAX 10000


#define default_stack_Cohda_App_VTRW_Rx_DebugLevel_PARAM "Cohda_App_VTRW.Rx.DebugLevel"
#define default_stack_Cohda_App_VTRW_Rx_DebugLevel_MIN -1
#define default_stack_Cohda_App_VTRW_Rx_DebugLevel_DEF -1
#define default_stack_Cohda_App_VTRW_Rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_App_VTRW_Rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_App_VTRW_Rx;

#define default_stack_Cohda_App_VTRW_Rx_NUM_SUB (0)
#define default_stack_Cohda_App_VTRW_Rx_NUM_FLD (1)

typedef struct default_stack_Cohda_App_VTRW
{
  tdefault_stack_Cohda_App_VTRW_Rx Rx;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                                VTRW                                    *
   ***************************************************************************
   *## VTRW tuneable parameters
   * if != -1, override debug level for VTRW module only
   */
  int32_t DebugLevel;

  /**
   * REC_SEVERITY_MAX default is 220, min/max 0/255
   * VTRW severity max (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MAX;

  /**
   * REC_SEVERITY_MIN default is 170, min/max 0/255
   * VTRW severity min (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MIN;

  /**
   * REC_SEVERITY_MED default is 200, min/max 0/255
   * VTRW medium severity (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MED;

  /**
   * CLASSIF_MASK_ALL default is 0x0ul, min/max 0x0ul/0xfffffffful
   * VTRW: All of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_SIMILAR_DIRECTION
   */
  uint32_t CLASSIF_MASK_ALL;

  /**
   * CLASSIF_MASK_ANY default is 0x0ul, min/max 0x0ul/0xfffffffful
   * VTRW: Any (at least one) of these TC classification flags must be set for RV to be eligible for evaluation
   */
  uint32_t CLASSIF_MASK_ANY;

  /**
   * CLASSIF_MASK_NOT default is 0xaul, min/max 0x0ul/0xfffffffful
   * VTRW: None of these TC classification flags must be set for RV to be eligible for evaluation
   */
  uint32_t CLASSIF_MASK_NOT;

  /**
   * Behind_Check_Max_Time default is 10, min/max 0/120
   * VTRW Maximum time to check for an RV having been behind the HV [s]
   */
  int32_t Behind_Check_Max_Time;

  /**
   * Behind_Check_Max_Distance default is 15.0, min/max 0.0/99.0
   * VTRW Maximum distance to check for an RV having been behind the HV [m]
   */
  float Behind_Check_Max_Distance;

  /**
   * REC_HV_SPEED_MAX default is 8.0, min/max 0.0/99.99
   * VTRW maximum HV speed [m/s]
   */
  float REC_HV_SPEED_MAX;

  /**
   * REC_RV_SPEED_MAX default is 12.0, min/max 0.0/99.99
   * VTRW maximum RV speed [m/s]
   */
  float REC_RV_SPEED_MAX;

  /**
   * REC_RV_DECEL_MIN default is 1.0, min/max 0.0/99.99
   * VTRW minimum logitudinal deceleration to produce warning [m/s^2]
   */
  float REC_RV_DECEL_MIN;

  /**
   * REC_RV_MAX_AHEAD default is 10.0, min/max 0.0/99.99
   * VTRW maximum distance for an RV turning ahead of the HV to generate a warning [m]
   */
  float REC_RV_MAX_AHEAD;

  /**
   * REC_HEADING_MATCH default is 0xc0000003ul, min/max 0x0ul/0xfffffffful
   * VTRW heading diff mask required to alert [bit flags]
   * -22.50 <= degrees <= 22.50
   */
  uint32_t REC_HEADING_MATCH;

  /**
   * REC_ENTRY_DISTANCE default is 100, min/max 0/65535
   * VTRW maximum range [m] to bounding box
   */
  int32_t REC_ENTRY_DISTANCE;

  /**
   * REC_ENTRY_TIME default is 5000, min/max 0/65535
   * VTRW time to enter the bounding box required to alert [ms]
   */
  int32_t REC_ENTRY_TIME;

  /**
   * REC_EXIT_TIME default is 200, min/max 0/65535
   * VTRW time to exit the bounding box required to supress the alert [ms]
   */
  int32_t REC_EXIT_TIME;

  /**
   * HZ_Width default is 255, min/max 0/1000
   */
  int32_t HZ_Width;

  /**
   * HZ_LongitudinalExtension default is 255, min/max 0/1000
   */
  int32_t HZ_LongitudinalExtension;

  /**
   * HV_INHIBIT_MASK default is 0x0ul, min/max 0x0ul/0xfffffffful
   * HV alert inhibit checks to do. See @ref eTAInhibitMask
   */
  uint32_t HV_INHIBIT_MASK;

  /**
   * RV_INHIBIT_MASK default is 0x0ul, min/max 0x0ul/0xfffffffful
   * RV alert inhibit checks to do. See @ref eTAInhibitMask
   * TA_INHIBIT_NONE
   */
  uint32_t RV_INHIBIT_MASK;

  /**
   * INHIBIT_SPEED_MIN default is 0.0, min/max 0.0/99.99
   * Speed [m/s] below which to optionally inhibit VTRW alerts
   */
  float INHIBIT_SPEED_MIN;

  /**
   * INHIBIT_SPEED_MAX default is 99.9, min/max 0.0/99.99
   * Speed [m/s] above which to optionally inhibit VTRW alerts
   */
  float INHIBIT_SPEED_MAX;

  /**
   * INHIBIT_YAW_MIN default is 0, min/max -360/360
   * Yaw rate [deg/s] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_YAW_MIN;

  /**
   * INHIBIT_YAW_MAX default is 10, min/max -360/360
   * Yaw rate [deg/s] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_YAW_MAX;

  /**
   * INHIBIT_STEER_ANGLE_MIN default is 0, min/max -1024/1024
   * Absolute steering wheel angle [deg] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_STEER_ANGLE_MIN;

  /**
   * INHIBIT_STEER_ANGLE_MAX default is 1024, min/max -1024/1024
   * Absolute steering wheel angle [deg] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_STEER_ANGLE_MAX;

  /**
   * INHIBIT_BRAKE_MIN default is 0, min/max 0/100
   * Brake pedal angle [%] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_MIN;

  /**
   * INHIBIT_BRAKE_MAX default is 100, min/max 0/100
   * Brake pedal angle [%] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_MAX;

  /**
   * INHIBIT_THROTTLE_MIN default is 0, min/max 0/100
   * Throttle position [%] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_THROTTLE_MIN;

  /**
   * INHIBIT_THROTTLE_MAX default is 100, min/max 0/100
   * Throttle position [%] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_THROTTLE_MAX;

  /**
   * INHIBIT_LONACCEL_MIN default is -0.35, min/max -99.9/99.9
   * Longitudinal acceleration [m/s/s] below which to optionally inhibit VTRW alerts
   */
  float INHIBIT_LONACCEL_MIN;

  /**
   * INHIBIT_LONACCEL_MAX default is 99.9, min/max -99.9/99.9
   * Longitudinal acceleration [m/s/s] above which to optionally inhibit VTRW alerts
   */
  float INHIBIT_LONACCEL_MAX;

  /**
   * INHIBIT_STEER_RATE_MIN default is 0, min/max -360/360
   * Absolute steering wheel angle change [deg/s] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_STEER_RATE_MIN;

  /**
   * INHIBIT_STEER_RATE_MAX default is 360, min/max -360/360
   * Absolute steering wheel angle change [deg/s] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_STEER_RATE_MAX;

  /**
   * INHIBIT_BRAKE_RATE_MIN default is 0, min/max 0/10000
   * Brake pedal angle change [%/s] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_RATE_MIN;

  /**
   * INHIBIT_BRAKE_RATE_MAX default is 10000, min/max 0/10000
   * Brake pedal angle change [%/s] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_RATE_MAX;

  /**
   * INHIBIT_BRAKE_KPA_MIN default is 0, min/max 0/19125
   * Brake pedal pressure [kPa] below which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_KPA_MIN;

  /**
   * INHIBIT_BRAKE_KPA_MAX default is 19125, min/max 0/19125
   * Brake pedal pressure [kPa] above which to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_BRAKE_KPA_MAX;

  /**
   * INHIBIT_LATOFFSET_MIN default is 0, min/max -10000/10000
   * RV lane offset [cm] below which (along with steering angle or indicators) to optionally inhibit VTRW alerts
   */
  int32_t INHIBIT_LATOFFSET_MIN;

  /**
   * ENABLE default is false
   * VTRW enabled?
   */
  bool ENABLE;

  /**
   * REC_ENABLE default is false
   * VTRW receive functionality enabled?
   */
  bool REC_ENABLE;

  /**
   * Turn_Direction default is false
   * VTRW turn direction 0 - Right (NA/EU/CH), 1 - Left (UK/JP/AU)
   */
  bool Turn_Direction;

  /**
   * TURN_SIGNALS default is false
   * Whether HV must have indicators on
   */
  bool TURN_SIGNALS;

  /**
   * INSIDE_BUS_ZONE default is false
   * Whether HV must be inside a bus zone
   */
  bool INSIDE_BUS_ZONE;
} tdefault_stack_Cohda_App_VTRW;

#define default_stack_Cohda_App_VTRW_NUM_SUB (1)
#define default_stack_Cohda_App_VTRW_NUM_FLD (45)


#define default_stack_Cohda_App_PCW_DebugLevel_PARAM "Cohda_App_PCW.DebugLevel"
#define default_stack_Cohda_App_PCW_DebugLevel_MIN -1
#define default_stack_Cohda_App_PCW_DebugLevel_DEF -1
#define default_stack_Cohda_App_PCW_DebugLevel_MAX 255

#define default_stack_Cohda_App_PCW_ENABLE_PARAM "Cohda_App_PCW.ENABLE"
#define default_stack_Cohda_App_PCW_ENABLE_DEF false

#define default_stack_Cohda_App_PCW_KinematicSource_PARAM "Cohda_App_PCW.KinematicSource"
#define default_stack_Cohda_App_PCW_KinematicSource_MIN 0
#define default_stack_Cohda_App_PCW_KinematicSource_DEF 1
#define default_stack_Cohda_App_PCW_KinematicSource_MAX 2
#define default_stack_Cohda_App_PCW_KinematicSource_None (0)
#define default_stack_Cohda_App_PCW_KinematicSource_TC (1)
#define default_stack_Cohda_App_PCW_KinematicSource_RPS (2)

#define default_stack_Cohda_App_PCW_ALERT_SEVERITY_PARAM "Cohda_App_PCW.ALERT_SEVERITY"
#define default_stack_Cohda_App_PCW_ALERT_SEVERITY_MIN 0
#define default_stack_Cohda_App_PCW_ALERT_SEVERITY_DEF 150
#define default_stack_Cohda_App_PCW_ALERT_SEVERITY_MAX 255

#define default_stack_Cohda_App_PCW_ALARM_SEVERITY_PARAM "Cohda_App_PCW.ALARM_SEVERITY"
#define default_stack_Cohda_App_PCW_ALARM_SEVERITY_MIN 0
#define default_stack_Cohda_App_PCW_ALARM_SEVERITY_DEF 200
#define default_stack_Cohda_App_PCW_ALARM_SEVERITY_MAX 255

#define default_stack_Cohda_App_PCW_STOP_SEVERITY_PARAM "Cohda_App_PCW.STOP_SEVERITY"
#define default_stack_Cohda_App_PCW_STOP_SEVERITY_MIN 0
#define default_stack_Cohda_App_PCW_STOP_SEVERITY_DEF 250
#define default_stack_Cohda_App_PCW_STOP_SEVERITY_MAX 255

#define default_stack_Cohda_App_PCW_SEVERITY_MAX_PARAM "Cohda_App_PCW.SEVERITY_MAX"
#define default_stack_Cohda_App_PCW_SEVERITY_MAX_MIN 0
#define default_stack_Cohda_App_PCW_SEVERITY_MAX_DEF 250
#define default_stack_Cohda_App_PCW_SEVERITY_MAX_MAX 255

#define default_stack_Cohda_App_PCW_MAX_RV_DISTANCE_m_PARAM "Cohda_App_PCW.MAX_RV_DISTANCE_m"
#define default_stack_Cohda_App_PCW_MAX_RV_DISTANCE_m_MIN 0
#define default_stack_Cohda_App_PCW_MAX_RV_DISTANCE_m_DEF 250
#define default_stack_Cohda_App_PCW_MAX_RV_DISTANCE_m_MAX 10000

#define default_stack_Cohda_App_PCW_VehicleTypes_PARAM "Cohda_App_PCW.VehicleTypes"
#define default_stack_Cohda_App_PCW_VehicleTypes_DEF "193,194,195,196,197,161,162,225,226,128"

#define default_stack_Cohda_App_PCW_HV_Type0_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type0_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type0_InteractionTypes_DEF "0,0,0,0,0,1,1,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type1_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type1_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type1_InteractionTypes_DEF "0,0,0,0,0,1,1,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type2_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type2_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type2_InteractionTypes_DEF "0,0,0,0,0,1,1,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type3_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type3_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type3_InteractionTypes_DEF "0,0,0,0,0,1,1,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type4_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type4_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type4_InteractionTypes_DEF "0,0,0,0,0,1,1,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type5_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type5_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type5_InteractionTypes_DEF "1,1,1,1,1,0,0,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type6_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type6_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type6_InteractionTypes_DEF "1,1,1,1,1,0,0,2,2,2"

#define default_stack_Cohda_App_PCW_HV_Type7_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type7_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type7_InteractionTypes_DEF "2,2,2,2,2,2,2,3,3,3"

#define default_stack_Cohda_App_PCW_HV_Type8_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type8_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type8_InteractionTypes_DEF "2,2,2,2,2,2,2,3,3,3"

#define default_stack_Cohda_App_PCW_HV_Type9_InteractionTypes_PARAM "Cohda_App_PCW.HV_Type9_InteractionTypes"
#define default_stack_Cohda_App_PCW_HV_Type9_InteractionTypes_DEF "2,2,2,2,2,2,2,3,3,3"

#define default_stack_Cohda_App_PCW_ALERT_Range_m_PARAM "Cohda_App_PCW.ALERT_Range_m"
#define default_stack_Cohda_App_PCW_ALERT_Range_m_DEF "250.0,200.0,100.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0"

#define default_stack_Cohda_App_PCW_ALERT_Velocity_kph_PARAM "Cohda_App_PCW.ALERT_Velocity_kph"
#define default_stack_Cohda_App_PCW_ALERT_Velocity_kph_DEF "5.0,5.0,5.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0"

#define default_stack_Cohda_App_PCW_ALARM_Range_m_PARAM "Cohda_App_PCW.ALARM_Range_m"
#define default_stack_Cohda_App_PCW_ALARM_Range_m_DEF "50.0,100.0,100.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0"

#define default_stack_Cohda_App_PCW_ALARM_Velocity_kph_PARAM "Cohda_App_PCW.ALARM_Velocity_kph"
#define default_stack_Cohda_App_PCW_ALARM_Velocity_kph_DEF "0.0,5.0,15.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0"

#define default_stack_Cohda_App_PCW_STOP_Range_m_PARAM "Cohda_App_PCW.STOP_Range_m"
#define default_stack_Cohda_App_PCW_STOP_Range_m_DEF "20.0,0.0,30.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0"


#define default_stack_Cohda_App_PCW_PCW_DebugLevel_PARAM "Cohda_App_PCW.PCW.DebugLevel"
#define default_stack_Cohda_App_PCW_PCW_DebugLevel_MIN -1
#define default_stack_Cohda_App_PCW_PCW_DebugLevel_DEF -1
#define default_stack_Cohda_App_PCW_PCW_DebugLevel_MAX 255

typedef struct default_stack_Cohda_App_PCW_PCW
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_App_PCW_PCW;

#define default_stack_Cohda_App_PCW_PCW_NUM_SUB (0)
#define default_stack_Cohda_App_PCW_PCW_NUM_FLD (1)


#define default_stack_Cohda_App_PCW_PCW_rx_DebugLevel_PARAM "Cohda_App_PCW.PCW_rx.DebugLevel"
#define default_stack_Cohda_App_PCW_PCW_rx_DebugLevel_MIN -1
#define default_stack_Cohda_App_PCW_PCW_rx_DebugLevel_DEF -1
#define default_stack_Cohda_App_PCW_PCW_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_App_PCW_PCW_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_App_PCW_PCW_rx;

#define default_stack_Cohda_App_PCW_PCW_rx_NUM_SUB (0)
#define default_stack_Cohda_App_PCW_PCW_rx_NUM_FLD (1)

typedef struct default_stack_Cohda_App_PCW
{
  tdefault_stack_Cohda_App_PCW_PCW PCW;

  tdefault_stack_Cohda_App_PCW_PCW_rx PCW_rx;

  /**
   * VehicleTypes default is "193,194,195,196,197,161,162,225,226,128"
   * For each type of vehicle (Type 0, 1, etc) set a vehicle type ID
   * as per SAE DE_VehicleType within the range 128 to 255 which is
   * reserved for local use. Type X vehicle type goes into column X.
   * There must be exactly 10 numbers each separated by commas.
   * Values must be integer from 128 to 255.
   * Default for each is 0 which is empty / unconfigured.
   */
  const char * VehicleTypes;

  /**
   * HV_Type0_InteractionTypes default is "0,0,0,0,0,1,1,2,2,2"
   * Each HV / RV interaction is assigned a PCW interaction type. There
   * are 10 possible interaction types (0 to 9). Each interaction type
   * has different alert parameters. Each HV type has a string with 10
   * integers each separated with a comma (no spaces). There must be
   * exactly 10 numbers in each config string. For each HV type, set the
   * interaction type vs each vehicle type of RV.
   * E.g. 1,1,1,1,1,9,9,9,9,9 means that HV type will have interaction
   * type 1 for RVs of types 0 through 4, and type 9 interaction for
   * RVs of types 5 through 9. Values must be integer from 0 to 9.
   * Default is all type 0 interactions.
   */
  const char * HV_Type0_InteractionTypes;

  /**
   * HV_Type1_InteractionTypes default is "0,0,0,0,0,1,1,2,2,2"
   */
  const char * HV_Type1_InteractionTypes;

  /**
   * HV_Type2_InteractionTypes default is "0,0,0,0,0,1,1,2,2,2"
   */
  const char * HV_Type2_InteractionTypes;

  /**
   * HV_Type3_InteractionTypes default is "0,0,0,0,0,1,1,2,2,2"
   */
  const char * HV_Type3_InteractionTypes;

  /**
   * HV_Type4_InteractionTypes default is "0,0,0,0,0,1,1,2,2,2"
   */
  const char * HV_Type4_InteractionTypes;

  /**
   * HV_Type5_InteractionTypes default is "1,1,1,1,1,0,0,2,2,2"
   */
  const char * HV_Type5_InteractionTypes;

  /**
   * HV_Type6_InteractionTypes default is "1,1,1,1,1,0,0,2,2,2"
   */
  const char * HV_Type6_InteractionTypes;

  /**
   * HV_Type7_InteractionTypes default is "2,2,2,2,2,2,2,3,3,3"
   */
  const char * HV_Type7_InteractionTypes;

  /**
   * HV_Type8_InteractionTypes default is "2,2,2,2,2,2,2,3,3,3"
   */
  const char * HV_Type8_InteractionTypes;

  /**
   * HV_Type9_InteractionTypes default is "2,2,2,2,2,2,2,3,3,3"
   */
  const char * HV_Type9_InteractionTypes;

  /**
   * ALERT_Range_m default is "250.0,200.0,100.0,30.0,0.0,0.0,0.0,0.0,0.0,0.0"
   * PCW alert/alarm/stop parameters corresponding to each type of
   * interaction. Each row corresponds to a different type of PCW
   * parameters, and each column corresponds to a different interaction
   * type. Column 0 is type 0 interaction, column 1 is type 1 interaction,
   * up to column 9 for type 9 interaction.
   * Form: "Below THIS range, PCW activates when velocity exceeds THIS"
   * E.g. If range < 250 then ALERT when velocity > 5.
   * The same form goes for ALARM. However for STOP there is only a range,
   * and there is no speed condition.
   * ALERT may be overridden by ALARM; both may be overridden by STOP.
   * Ranges are in metres, velocities are in kilometres per hour.
   * Values are all floating point and should all be >= 0.0.
   * Default is all 0.0 (no alert/alarm/stop triggers at any positive range).
   */
  const char * ALERT_Range_m;

  /**
   * ALERT_Velocity_kph default is "5.0,5.0,5.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0"
   */
  const char * ALERT_Velocity_kph;

  /**
   * ALARM_Range_m default is "50.0,100.0,100.0,15.0,0.0,0.0,0.0,0.0,0.0,0.0"
   */
  const char * ALARM_Range_m;

  /**
   * ALARM_Velocity_kph default is "0.0,5.0,15.0,20.0,0.0,0.0,0.0,0.0,0.0,0.0"
   */
  const char * ALARM_Velocity_kph;

  /**
   * STOP_Range_m default is "20.0,0.0,30.0,10.0,0.0,0.0,0.0,0.0,0.0,0.0"
   */
  const char * STOP_Range_m;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                                PCW                                     *
   ***************************************************************************
   * Debug level override: if != -1, override debug level for PCW module only
   */
  int32_t DebugLevel;

  /**
   * KinematicSource default is 1, min/max 0/2
   * PCW Kinematic Source (0: None, 1: TC, 2: RPS)
   * -  0 = None
   * -  1 = TC
   * -  2 = RPS
   */
  int32_t KinematicSource;

  /**
   * ALERT_SEVERITY default is 150, min/max 0/255
   * Severity value of ALERT level of PCW [0..255] @ref TASeverity
   * Levels must be as follows: STOP > ALARM > ALERT
   */
  int32_t ALERT_SEVERITY;

  /**
   * ALARM_SEVERITY default is 200, min/max 0/255
   * Severity value of ALARM level of PCW [0..255] @ref TASeverity
   * Levels must be as follows: STOP > ALARM > ALERT
   */
  int32_t ALARM_SEVERITY;

  /**
   * STOP_SEVERITY default is 250, min/max 0/255
   * Severity value of STOP level of PCW [0..255] @ref TASeverity
   * Levels must be as follows: STOP > ALARM > ALERT
   */
  int32_t STOP_SEVERITY;

  /**
   * SEVERITY_MAX default is 250, min/max 0/255
   * Maximum severity value returned by PCW [0..255] @ref TASeverity
   */
  int32_t SEVERITY_MAX;

  /**
   * MAX_RV_DISTANCE_m default is 250, min/max 0/10000
   * PCW ignores remote vehicles at ranges greater than this [m]
   */
  int32_t MAX_RV_DISTANCE_m;

  /**
   * ENABLE default is false
   * PCW enable (0: disable, 1: enable)
   */
  bool ENABLE;
} tdefault_stack_Cohda_App_PCW;

#define default_stack_Cohda_App_PCW_NUM_SUB (2)
#define default_stack_Cohda_App_PCW_NUM_FLD (24)


#define default_stack_Cohda_App_MAW_DebugLevel_PARAM "Cohda_App_MAW.DebugLevel"
#define default_stack_Cohda_App_MAW_DebugLevel_MIN -1
#define default_stack_Cohda_App_MAW_DebugLevel_DEF -1
#define default_stack_Cohda_App_MAW_DebugLevel_MAX 255

#define default_stack_Cohda_App_MAW_ENABLE_PARAM "Cohda_App_MAW.ENABLE"
#define default_stack_Cohda_App_MAW_ENABLE_DEF false

#define default_stack_Cohda_App_MAW_REC_ENABLE_PARAM "Cohda_App_MAW.REC_ENABLE"
#define default_stack_Cohda_App_MAW_REC_ENABLE_DEF false

#define default_stack_Cohda_App_MAW_REC_SEVERITY_MAX_PARAM "Cohda_App_MAW.REC_SEVERITY_MAX"
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MAX_MIN 0
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MAX_DEF 160
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MAX_MAX 255

#define default_stack_Cohda_App_MAW_REC_SEVERITY_MIN_PARAM "Cohda_App_MAW.REC_SEVERITY_MIN"
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MIN_MIN 0
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MIN_DEF 100
#define default_stack_Cohda_App_MAW_REC_SEVERITY_MIN_MAX 255

#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ALL_PARAM "Cohda_App_MAW.CLASSIF_MASK_ALL"
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ALL_MIN 0x0ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ALL_DEF 0x94ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ALL_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ANY_PARAM "Cohda_App_MAW.CLASSIF_MASK_ANY"
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ANY_MIN 0x0ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ANY_DEF 0x700ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_ANY_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_CLASSIF_MASK_NOT_PARAM "Cohda_App_MAW.CLASSIF_MASK_NOT"
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_NOT_MIN 0x0ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_NOT_DEF 0x2ul
#define default_stack_Cohda_App_MAW_CLASSIF_MASK_NOT_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_REC_DISTANCE_MAX_PARAM "Cohda_App_MAW.REC_DISTANCE_MAX"
#define default_stack_Cohda_App_MAW_REC_DISTANCE_MAX_MIN 0
#define default_stack_Cohda_App_MAW_REC_DISTANCE_MAX_DEF 100
#define default_stack_Cohda_App_MAW_REC_DISTANCE_MAX_MAX 10000

#define default_stack_Cohda_App_MAW_REC_DIST_TRACE_MAX_PARAM "Cohda_App_MAW.REC_DIST_TRACE_MAX"
#define default_stack_Cohda_App_MAW_REC_DIST_TRACE_MAX_MIN 0
#define default_stack_Cohda_App_MAW_REC_DIST_TRACE_MAX_DEF 100
#define default_stack_Cohda_App_MAW_REC_DIST_TRACE_MAX_MAX 10000

#define default_stack_Cohda_App_MAW_REC_HV_SPEED_MIN_PARAM "Cohda_App_MAW.REC_HV_SPEED_MIN"
#define default_stack_Cohda_App_MAW_REC_HV_SPEED_MIN_MIN 0.0
#define default_stack_Cohda_App_MAW_REC_HV_SPEED_MIN_DEF 1.0
#define default_stack_Cohda_App_MAW_REC_HV_SPEED_MIN_MAX 99.99

#define default_stack_Cohda_App_MAW_REC_RV_SPEED_MIN_PARAM "Cohda_App_MAW.REC_RV_SPEED_MIN"
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_MIN_MIN 0.0
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_MIN_DEF 1.0
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_MIN_MAX 99.99

#define default_stack_Cohda_App_MAW_REC_RV_SPEED_DIFF_PARAM "Cohda_App_MAW.REC_RV_SPEED_DIFF"
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_DIFF_MIN 0.0
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_DIFF_DEF 2.78
#define default_stack_Cohda_App_MAW_REC_RV_SPEED_DIFF_MAX 99.99

#define default_stack_Cohda_App_MAW_REC_HEADING_MATCH_PARAM "Cohda_App_MAW.REC_HEADING_MATCH"
#define default_stack_Cohda_App_MAW_REC_HEADING_MATCH_MIN 0x0ul
#define default_stack_Cohda_App_MAW_REC_HEADING_MATCH_DEF 0xc0000003ul
#define default_stack_Cohda_App_MAW_REC_HEADING_MATCH_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_HV_INHIBIT_MASK_PARAM "Cohda_App_MAW.HV_INHIBIT_MASK"
#define default_stack_Cohda_App_MAW_HV_INHIBIT_MASK_MIN 0x0ul
#define default_stack_Cohda_App_MAW_HV_INHIBIT_MASK_DEF 0x0ul
#define default_stack_Cohda_App_MAW_HV_INHIBIT_MASK_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_RV_INHIBIT_MASK_PARAM "Cohda_App_MAW.RV_INHIBIT_MASK"
#define default_stack_Cohda_App_MAW_RV_INHIBIT_MASK_MIN 0x0ul
#define default_stack_Cohda_App_MAW_RV_INHIBIT_MASK_DEF 0x0ul
#define default_stack_Cohda_App_MAW_RV_INHIBIT_MASK_MAX 0xfffffffful

#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MIN_PARAM "Cohda_App_MAW.INHIBIT_SPEED_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MIN_MIN 0.0
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MIN_DEF 0.0
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MIN_MAX 99.99

#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MAX_PARAM "Cohda_App_MAW.INHIBIT_SPEED_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MAX_MIN 0.0
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MAX_DEF 99.9
#define default_stack_Cohda_App_MAW_INHIBIT_SPEED_MAX_MAX 99.99

#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MIN_PARAM "Cohda_App_MAW.INHIBIT_YAW_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MIN_MIN -360
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MIN_MAX 360

#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MAX_PARAM "Cohda_App_MAW.INHIBIT_YAW_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MAX_MIN -360
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MAX_DEF 10
#define default_stack_Cohda_App_MAW_INHIBIT_YAW_MAX_MAX 360

#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MIN_PARAM "Cohda_App_MAW.INHIBIT_STEER_ANGLE_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MIN_MIN -1024
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MIN_MAX 1024

#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MAX_PARAM "Cohda_App_MAW.INHIBIT_STEER_ANGLE_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MAX_MIN -1024
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MAX_DEF 1024
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_ANGLE_MAX_MAX 1024

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MIN_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MIN_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MIN_MAX 100

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MAX_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MAX_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MAX_DEF 100
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_MAX_MAX 100

#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MIN_PARAM "Cohda_App_MAW.INHIBIT_THROTTLE_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MIN_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MIN_MAX 100

#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MAX_PARAM "Cohda_App_MAW.INHIBIT_THROTTLE_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MAX_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MAX_DEF 100
#define default_stack_Cohda_App_MAW_INHIBIT_THROTTLE_MAX_MAX 100

#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MIN_PARAM "Cohda_App_MAW.INHIBIT_LONACCEL_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MIN_MIN -99.9
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MIN_DEF -0.35
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MIN_MAX 99.9

#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MAX_PARAM "Cohda_App_MAW.INHIBIT_LONACCEL_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MAX_MIN -99.9
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MAX_DEF 99.9
#define default_stack_Cohda_App_MAW_INHIBIT_LONACCEL_MAX_MAX 99.9

#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MIN_PARAM "Cohda_App_MAW.INHIBIT_STEER_RATE_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MIN_MIN -360
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MIN_MAX 360

#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MAX_PARAM "Cohda_App_MAW.INHIBIT_STEER_RATE_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MAX_MIN -360
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MAX_DEF 360
#define default_stack_Cohda_App_MAW_INHIBIT_STEER_RATE_MAX_MAX 360

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MIN_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_RATE_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MIN_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MIN_MAX 10000

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MAX_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_RATE_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MAX_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MAX_DEF 10000
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_RATE_MAX_MAX 10000

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MIN_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_KPA_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MIN_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MIN_MAX 19125

#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MAX_PARAM "Cohda_App_MAW.INHIBIT_BRAKE_KPA_MAX"
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MAX_MIN 0
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MAX_DEF 19125
#define default_stack_Cohda_App_MAW_INHIBIT_BRAKE_KPA_MAX_MAX 19125

#define default_stack_Cohda_App_MAW_INHIBIT_LATOFFSET_MIN_PARAM "Cohda_App_MAW.INHIBIT_LATOFFSET_MIN"
#define default_stack_Cohda_App_MAW_INHIBIT_LATOFFSET_MIN_MIN -10000
#define default_stack_Cohda_App_MAW_INHIBIT_LATOFFSET_MIN_DEF 0
#define default_stack_Cohda_App_MAW_INHIBIT_LATOFFSET_MIN_MAX 10000


#define default_stack_Cohda_App_MAW_MAW_DebugLevel_PARAM "Cohda_App_MAW.MAW.DebugLevel"
#define default_stack_Cohda_App_MAW_MAW_DebugLevel_MIN -1
#define default_stack_Cohda_App_MAW_MAW_DebugLevel_DEF -1
#define default_stack_Cohda_App_MAW_MAW_DebugLevel_MAX 255

typedef struct default_stack_Cohda_App_MAW_MAW
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_App_MAW_MAW;

#define default_stack_Cohda_App_MAW_MAW_NUM_SUB (0)
#define default_stack_Cohda_App_MAW_MAW_NUM_FLD (1)


#define default_stack_Cohda_App_MAW_MAW_rx_DebugLevel_PARAM "Cohda_App_MAW.MAW_rx.DebugLevel"
#define default_stack_Cohda_App_MAW_MAW_rx_DebugLevel_MIN -1
#define default_stack_Cohda_App_MAW_MAW_rx_DebugLevel_DEF -1
#define default_stack_Cohda_App_MAW_MAW_rx_DebugLevel_MAX 255

typedef struct default_stack_Cohda_App_MAW_MAW_rx
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_App_MAW_MAW_rx;

#define default_stack_Cohda_App_MAW_MAW_rx_NUM_SUB (0)
#define default_stack_Cohda_App_MAW_MAW_rx_NUM_FLD (1)

typedef struct default_stack_Cohda_App_MAW
{
  tdefault_stack_Cohda_App_MAW_MAW MAW;

  tdefault_stack_Cohda_App_MAW_MAW_rx MAW_rx;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                                MAW                                     *
   ***************************************************************************
   *## MAW tuneable parameters
   * if != -1, override debug level for MAW module only
   */
  int32_t DebugLevel;

  /**
   * REC_SEVERITY_MAX default is 160, min/max 0/255
   * MAW severity max (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MAX;

  /**
   * REC_SEVERITY_MIN default is 100, min/max 0/255
   * MAW severity min (0:off, 1:lowest, 255:highest) @ref TASeverity
   */
  int32_t REC_SEVERITY_MIN;

  /**
   * CLASSIF_MASK_ALL default is 0x94ul, min/max 0x0ul/0xfffffffful
   * MAW: All of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_CLOSING
   * TC_CLASSIF_IS_BEHIND
   * TC_CLASSIF_SIMILAR_DIRECTION
   */
  uint32_t CLASSIF_MASK_ALL;

  /**
   * CLASSIF_MASK_ANY default is 0x700ul, min/max 0x0ul/0xfffffffful
   * MAW: Any (at least one) of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_SAME_LANE
   * TC_CLASSIF_NEAR_LANE
   * TC_CLASSIF_FAR_LANE
   */
  uint32_t CLASSIF_MASK_ANY;

  /**
   * CLASSIF_MASK_NOT default is 0x2ul, min/max 0x0ul/0xfffffffful
   * MAW: None of these TC classification flags must be set for RV to be eligible for evaluation
   * TC_CLASSIF_DIFF_ELEVATION
   */
  uint32_t CLASSIF_MASK_NOT;

  /**
   * REC_DISTANCE_MAX default is 100, min/max 0/10000
   * MAW maximum range [m]
   */
  int32_t REC_DISTANCE_MAX;

  /**
   * REC_DIST_TRACE_MAX default is 100, min/max 0/10000
   * MAW trace longitudinal separation required to alert [m]
   */
  int32_t REC_DIST_TRACE_MAX;

  /**
   * REC_HV_SPEED_MIN default is 1.0, min/max 0.0/99.99
   * MAW minimum HV speed [m/s]
   */
  float REC_HV_SPEED_MIN;

  /**
   * REC_RV_SPEED_MIN default is 1.0, min/max 0.0/99.99
   * MAW minimum RV speed [m/s]
   */
  float REC_RV_SPEED_MIN;

  /**
   * REC_RV_SPEED_DIFF default is 2.78, min/max 0.0/99.99
   * MAW minimum RV speed differential [m/s]
   */
  float REC_RV_SPEED_DIFF;

  /**
   * REC_HEADING_MATCH default is 0xc0000003ul, min/max 0x0ul/0xfffffffful
   * MAW heading diff mask required to alert [bit flags]
   * -22.50 <= degrees <= 22.50
   */
  uint32_t REC_HEADING_MATCH;

  /**
   * HV_INHIBIT_MASK default is 0x0ul, min/max 0x0ul/0xfffffffful
   * HV alert inhibit checks to do. See @ref eTAInhibitMask
   */
  uint32_t HV_INHIBIT_MASK;

  /**
   * RV_INHIBIT_MASK default is 0x0ul, min/max 0x0ul/0xfffffffful
   * RV alert inhibit checks to do. See @ref eTAInhibitMask
   * TA_INHIBIT_NONE
   */
  uint32_t RV_INHIBIT_MASK;

  /**
   * INHIBIT_SPEED_MIN default is 0.0, min/max 0.0/99.99
   * Speed [m/s] below which to optionally inhibit MAW alerts
   */
  float INHIBIT_SPEED_MIN;

  /**
   * INHIBIT_SPEED_MAX default is 99.9, min/max 0.0/99.99
   * Speed [m/s] above which to optionally inhibit MAW alerts
   */
  float INHIBIT_SPEED_MAX;

  /**
   * INHIBIT_YAW_MIN default is 0, min/max -360/360
   * Yaw rate [deg/s] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_YAW_MIN;

  /**
   * INHIBIT_YAW_MAX default is 10, min/max -360/360
   * Yaw rate [deg/s] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_YAW_MAX;

  /**
   * INHIBIT_STEER_ANGLE_MIN default is 0, min/max -1024/1024
   * Absolute steering wheel angle [deg] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_STEER_ANGLE_MIN;

  /**
   * INHIBIT_STEER_ANGLE_MAX default is 1024, min/max -1024/1024
   * Absolute steering wheel angle [deg] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_STEER_ANGLE_MAX;

  /**
   * INHIBIT_BRAKE_MIN default is 0, min/max 0/100
   * Brake pedal angle [%] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_MIN;

  /**
   * INHIBIT_BRAKE_MAX default is 100, min/max 0/100
   * Brake pedal angle [%] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_MAX;

  /**
   * INHIBIT_THROTTLE_MIN default is 0, min/max 0/100
   * Throttle position [%] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_THROTTLE_MIN;

  /**
   * INHIBIT_THROTTLE_MAX default is 100, min/max 0/100
   * Throttle position [%] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_THROTTLE_MAX;

  /**
   * INHIBIT_LONACCEL_MIN default is -0.35, min/max -99.9/99.9
   * Longitudinal acceleration [m/s/s] below which to optionally inhibit MAW alerts
   */
  float INHIBIT_LONACCEL_MIN;

  /**
   * INHIBIT_LONACCEL_MAX default is 99.9, min/max -99.9/99.9
   * Longitudinal acceleration [m/s/s] above which to optionally inhibit MAW alerts
   */
  float INHIBIT_LONACCEL_MAX;

  /**
   * INHIBIT_STEER_RATE_MIN default is 0, min/max -360/360
   * Absolute steering wheel angle change [deg/s] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_STEER_RATE_MIN;

  /**
   * INHIBIT_STEER_RATE_MAX default is 360, min/max -360/360
   * Absolute steering wheel angle change [deg/s] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_STEER_RATE_MAX;

  /**
   * INHIBIT_BRAKE_RATE_MIN default is 0, min/max 0/10000
   * Brake pedal angle change [%/s] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_RATE_MIN;

  /**
   * INHIBIT_BRAKE_RATE_MAX default is 10000, min/max 0/10000
   * Brake pedal angle change [%/s] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_RATE_MAX;

  /**
   * INHIBIT_BRAKE_KPA_MIN default is 0, min/max 0/19125
   * Brake pedal pressure [kPa] below which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_KPA_MIN;

  /**
   * INHIBIT_BRAKE_KPA_MAX default is 19125, min/max 0/19125
   * Brake pedal pressure [kPa] above which to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_BRAKE_KPA_MAX;

  /**
   * INHIBIT_LATOFFSET_MIN default is 0, min/max -10000/10000
   * RV lane offset [cm] below which (along with steering angle or indicators) to optionally inhibit MAW alerts
   */
  int32_t INHIBIT_LATOFFSET_MIN;

  /**
   * ENABLE default is false
   * MAW enabled?
   */
  bool ENABLE;

  /**
   * REC_ENABLE default is false
   * MAW receive functionality enabled?
   */
  bool REC_ENABLE;
} tdefault_stack_Cohda_App_MAW;

#define default_stack_Cohda_App_MAW_NUM_SUB (2)
#define default_stack_Cohda_App_MAW_NUM_FLD (35)


#define default_stack_Cohda_TA_DebugLevel_PARAM "Cohda_TA.DebugLevel"
#define default_stack_Cohda_TA_DebugLevel_MIN -1
#define default_stack_Cohda_TA_DebugLevel_DEF -1
#define default_stack_Cohda_TA_DebugLevel_MAX 255

#define default_stack_Cohda_TA_TriggeringEnabled_PARAM "Cohda_TA.TriggeringEnabled"
#define default_stack_Cohda_TA_TriggeringEnabled_DEF true

#define default_stack_Cohda_TA_ADRReplayFileName_PARAM "Cohda_TA.ADRReplayFileName"
#define default_stack_Cohda_TA_ADRReplayFileName_DEF ""

#define default_stack_Cohda_TA_MinLevel_decay_PARAM "Cohda_TA.MinLevel_decay"
#define default_stack_Cohda_TA_MinLevel_decay_MIN 1
#define default_stack_Cohda_TA_MinLevel_decay_DEF 1
#define default_stack_Cohda_TA_MinLevel_decay_MAX 250

#define default_stack_Cohda_TA_MinLevel_boost_PARAM "Cohda_TA.MinLevel_boost"
#define default_stack_Cohda_TA_MinLevel_boost_MIN 1
#define default_stack_Cohda_TA_MinLevel_boost_DEF 1
#define default_stack_Cohda_TA_MinLevel_boost_MAX 250

#define default_stack_Cohda_TA_MinLevel_raise_PARAM "Cohda_TA.MinLevel_raise"
#define default_stack_Cohda_TA_MinLevel_raise_MIN 1
#define default_stack_Cohda_TA_MinLevel_raise_DEF 10
#define default_stack_Cohda_TA_MinLevel_raise_MAX 250

#define default_stack_Cohda_TA_REACTION_TIME_PARAM "Cohda_TA.REACTION_TIME"
#define default_stack_Cohda_TA_REACTION_TIME_MIN 0
#define default_stack_Cohda_TA_REACTION_TIME_DEF 1000
#define default_stack_Cohda_TA_REACTION_TIME_MAX 10000

#define default_stack_Cohda_TA_SOFTBRAKE_DRY_PARAM "Cohda_TA.SOFTBRAKE_DRY"
#define default_stack_Cohda_TA_SOFTBRAKE_DRY_MIN -99.9
#define default_stack_Cohda_TA_SOFTBRAKE_DRY_DEF -3.5
#define default_stack_Cohda_TA_SOFTBRAKE_DRY_MAX 99.9

#define default_stack_Cohda_TA_HARDBRAKE_DRY_PARAM "Cohda_TA.HARDBRAKE_DRY"
#define default_stack_Cohda_TA_HARDBRAKE_DRY_MIN -99.9
#define default_stack_Cohda_TA_HARDBRAKE_DRY_DEF -6.0
#define default_stack_Cohda_TA_HARDBRAKE_DRY_MAX 99.9

#define default_stack_Cohda_TA_SOFTBRAKE_RAIN_PARAM "Cohda_TA.SOFTBRAKE_RAIN"
#define default_stack_Cohda_TA_SOFTBRAKE_RAIN_MIN -99.9
#define default_stack_Cohda_TA_SOFTBRAKE_RAIN_DEF -2.5
#define default_stack_Cohda_TA_SOFTBRAKE_RAIN_MAX 99.9

#define default_stack_Cohda_TA_HARDBRAKE_RAIN_PARAM "Cohda_TA.HARDBRAKE_RAIN"
#define default_stack_Cohda_TA_HARDBRAKE_RAIN_MIN -99.9
#define default_stack_Cohda_TA_HARDBRAKE_RAIN_DEF -4.0
#define default_stack_Cohda_TA_HARDBRAKE_RAIN_MAX 99.9

#define default_stack_Cohda_TA_SOFTBRAKE_SNOW_PARAM "Cohda_TA.SOFTBRAKE_SNOW"
#define default_stack_Cohda_TA_SOFTBRAKE_SNOW_MIN -99.9
#define default_stack_Cohda_TA_SOFTBRAKE_SNOW_DEF -2.0
#define default_stack_Cohda_TA_SOFTBRAKE_SNOW_MAX 99.9

#define default_stack_Cohda_TA_HARDBRAKE_SNOW_PARAM "Cohda_TA.HARDBRAKE_SNOW"
#define default_stack_Cohda_TA_HARDBRAKE_SNOW_MIN -99.9
#define default_stack_Cohda_TA_HARDBRAKE_SNOW_DEF -3.5
#define default_stack_Cohda_TA_HARDBRAKE_SNOW_MAX 99.9

#define default_stack_Cohda_TA_MaxAge_ms_PARAM "Cohda_TA.MaxAge_ms"
#define default_stack_Cohda_TA_MaxAge_ms_MIN 0
#define default_stack_Cohda_TA_MaxAge_ms_DEF 500
#define default_stack_Cohda_TA_MaxAge_ms_MAX 5000

#define default_stack_Cohda_TA_MinAge_ms_PARAM "Cohda_TA.MinAge_ms"
#define default_stack_Cohda_TA_MinAge_ms_MIN 0
#define default_stack_Cohda_TA_MinAge_ms_DEF 150
#define default_stack_Cohda_TA_MinAge_ms_MAX 1500

#define default_stack_Cohda_TA_ParallelLimit_Degs_PARAM "Cohda_TA.ParallelLimit_Degs"
#define default_stack_Cohda_TA_ParallelLimit_Degs_MIN 0.0
#define default_stack_Cohda_TA_ParallelLimit_Degs_DEF 10.0
#define default_stack_Cohda_TA_ParallelLimit_Degs_MAX 45.0

#define default_stack_Cohda_TA_SafeSpeed_mps_PARAM "Cohda_TA.SafeSpeed_mps"
#define default_stack_Cohda_TA_SafeSpeed_mps_MIN 0
#define default_stack_Cohda_TA_SafeSpeed_mps_DEF 4
#define default_stack_Cohda_TA_SafeSpeed_mps_MAX 40

#define default_stack_Cohda_TA_FrontZoneWidth_Degs_PARAM "Cohda_TA.FrontZoneWidth_Degs"
#define default_stack_Cohda_TA_FrontZoneWidth_Degs_MIN 0
#define default_stack_Cohda_TA_FrontZoneWidth_Degs_DEF 40
#define default_stack_Cohda_TA_FrontZoneWidth_Degs_MAX 180

#define default_stack_Cohda_TA_SideZoneWidth_Degs_PARAM "Cohda_TA.SideZoneWidth_Degs"
#define default_stack_Cohda_TA_SideZoneWidth_Degs_MIN 0
#define default_stack_Cohda_TA_SideZoneWidth_Degs_DEF 90
#define default_stack_Cohda_TA_SideZoneWidth_Degs_MAX 180

#define default_stack_Cohda_TA_HYSTERESIS_TTE_PARAM "Cohda_TA.HYSTERESIS_TTE"
#define default_stack_Cohda_TA_HYSTERESIS_TTE_MIN 0
#define default_stack_Cohda_TA_HYSTERESIS_TTE_DEF 350
#define default_stack_Cohda_TA_HYSTERESIS_TTE_MAX 1000

#define default_stack_Cohda_TA_HYSTERESIS_DTE_PARAM "Cohda_TA.HYSTERESIS_DTE"
#define default_stack_Cohda_TA_HYSTERESIS_DTE_MIN 0
#define default_stack_Cohda_TA_HYSTERESIS_DTE_DEF 15
#define default_stack_Cohda_TA_HYSTERESIS_DTE_MAX 65535

#define default_stack_Cohda_TA_LON_ACCEL_IIR_FILT_COEFF_PARAM "Cohda_TA.LON_ACCEL_IIR_FILT_COEFF"
#define default_stack_Cohda_TA_LON_ACCEL_IIR_FILT_COEFF_MIN 0.0
#define default_stack_Cohda_TA_LON_ACCEL_IIR_FILT_COEFF_DEF 0.5
#define default_stack_Cohda_TA_LON_ACCEL_IIR_FILT_COEFF_MAX 0.999


#define default_stack_Cohda_TA_ADR_DebugLevel_PARAM "Cohda_TA.ADR.DebugLevel"
#define default_stack_Cohda_TA_ADR_DebugLevel_MIN -1
#define default_stack_Cohda_TA_ADR_DebugLevel_DEF -1
#define default_stack_Cohda_TA_ADR_DebugLevel_MAX 255


#define default_stack_Cohda_TAADR_JSON_DebugLevel_PARAM "Cohda_TA.ADR.JSON.DebugLevel"
#define default_stack_Cohda_TAADR_JSON_DebugLevel_MIN -1
#define default_stack_Cohda_TAADR_JSON_DebugLevel_DEF -1
#define default_stack_Cohda_TAADR_JSON_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TAADR_JSON
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TAADR_JSON;

#define default_stack_Cohda_TAADR_JSON_NUM_SUB (0)
#define default_stack_Cohda_TAADR_JSON_NUM_FLD (1)

typedef struct default_stack_Cohda_TA_ADR
{
  tdefault_stack_Cohda_TAADR_JSON JSON;

  /**
   * DebugLevel default is -1, min/max -1/255
   * sub-module debug
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TA_ADR;

#define default_stack_Cohda_TA_ADR_NUM_SUB (1)
#define default_stack_Cohda_TA_ADR_NUM_FLD (1)


#define default_stack_Cohda_TA_Map_DebugLevel_PARAM "Cohda_TA.Map.DebugLevel"
#define default_stack_Cohda_TA_Map_DebugLevel_MIN -1
#define default_stack_Cohda_TA_Map_DebugLevel_DEF -1
#define default_stack_Cohda_TA_Map_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TA_Map
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TA_Map;

#define default_stack_Cohda_TA_Map_NUM_SUB (0)
#define default_stack_Cohda_TA_Map_NUM_FLD (1)


#define default_stack_Cohda_TA_Replay_DebugLevel_PARAM "Cohda_TA.Replay.DebugLevel"
#define default_stack_Cohda_TA_Replay_DebugLevel_MIN -1
#define default_stack_Cohda_TA_Replay_DebugLevel_DEF -1
#define default_stack_Cohda_TA_Replay_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TA_Replay
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TA_Replay;

#define default_stack_Cohda_TA_Replay_NUM_SUB (0)
#define default_stack_Cohda_TA_Replay_NUM_FLD (1)


#define default_stack_Cohda_TA_Threat_DebugLevel_PARAM "Cohda_TA.Threat.DebugLevel"
#define default_stack_Cohda_TA_Threat_DebugLevel_MIN -1
#define default_stack_Cohda_TA_Threat_DebugLevel_DEF -1
#define default_stack_Cohda_TA_Threat_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TA_Threat
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TA_Threat;

#define default_stack_Cohda_TA_Threat_NUM_SUB (0)
#define default_stack_Cohda_TA_Threat_NUM_FLD (1)


#define default_stack_Cohda_TA_Utils_DebugLevel_PARAM "Cohda_TA.Utils.DebugLevel"
#define default_stack_Cohda_TA_Utils_DebugLevel_MIN -1
#define default_stack_Cohda_TA_Utils_DebugLevel_DEF -1
#define default_stack_Cohda_TA_Utils_DebugLevel_MAX 255

typedef struct default_stack_Cohda_TA_Utils
{
  /**
   * DebugLevel default is -1, min/max -1/255
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_TA_Utils;

#define default_stack_Cohda_TA_Utils_NUM_SUB (0)
#define default_stack_Cohda_TA_Utils_NUM_FLD (1)

typedef struct default_stack_Cohda_TA
{
  tdefault_stack_Cohda_TA_ADR ADR;

  tdefault_stack_Cohda_TA_Map Map;

  tdefault_stack_Cohda_TA_Replay Replay;

  tdefault_stack_Cohda_TA_Threat Threat;

  tdefault_stack_Cohda_TA_Utils Utils;

  /**
   * ADRReplayFileName default is ""
   */
  const char * ADRReplayFileName;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                               TA                                       *
   ***************************************************************************
   ***************************************************************************
   **                  Stack module TA                                       *
   ***************************************************************************
   * if != -1, override debug level for TA module only
   */
  int32_t DebugLevel;

  /**
   * MinLevel_decay default is 1, min/max 1/250
   * decay rate of minimum threat level for threat analysis
   */
  int32_t MinLevel_decay;

  /**
   * MinLevel_boost default is 1, min/max 1/250
   * anti-starvation boost for skipped remotes
   */
  int32_t MinLevel_boost;

  /**
   * MinLevel_raise default is 10, min/max 1/250
   * increment for minimum threat level in case of congestion
   */
  int32_t MinLevel_raise;

  /**
   * REACTION_TIME default is 1000, min/max 0/10000
   * Misc parameters
   * Driver reaction time before action [ms]
   */
  int32_t REACTION_TIME;

  /**
   * SOFTBRAKE_DRY default is -3.5, min/max -99.9/99.9
   * Normal deceleration (non-emergency) in dry conditions [m/s/s]
   */
  float SOFTBRAKE_DRY;

  /**
   * HARDBRAKE_DRY default is -6.0, min/max -99.9/99.9
   * Hard deceleration (adrenaline inducing) in dry conditions [m/s/s]
   */
  float HARDBRAKE_DRY;

  /**
   * SOFTBRAKE_RAIN default is -2.5, min/max -99.9/99.9
   * Normal deceleration (non-emergency) in wet conditions [m/s/s]
   */
  float SOFTBRAKE_RAIN;

  /**
   * HARDBRAKE_RAIN default is -4.0, min/max -99.9/99.9
   * Hard deceleration (adrenaline inducing) in wet conditions [m/s/s]
   */
  float HARDBRAKE_RAIN;

  /**
   * SOFTBRAKE_SNOW default is -2.0, min/max -99.9/99.9
   * Normal deceleration (non-emergency) in icy conditions [m/s/s]
   */
  float SOFTBRAKE_SNOW;

  /**
   * HARDBRAKE_SNOW default is -3.5, min/max -99.9/99.9
   * Hard deceleration (adrenaline inducing) in icy conditions [m/s/s]
   */
  float HARDBRAKE_SNOW;

  /**
   * MaxAge_ms default is 500, min/max 0/5000
   * Maximum age of remote for periodic processing
   */
  int32_t MaxAge_ms;

  /**
   * MinAge_ms default is 150, min/max 0/1500
   * Minimum age of remote for periodic processing
   */
  int32_t MinAge_ms;

  /**
   * ParallelLimit_Degs default is 10.0, min/max 0.0/45.0
   * filter to exclude warnings from adjacent lanes based on direction
   */
  float ParallelLimit_Degs;

  /**
   * SafeSpeed_mps default is 4, min/max 0/40
   * filter based on remote speed (why not float?)
   */
  int32_t SafeSpeed_mps;

  /**
   * FrontZoneWidth_Degs default is 40, min/max 0/180
   * filter for car deemed to be ahead
   */
  int32_t FrontZoneWidth_Degs;

  /**
   * SideZoneWidth_Degs default is 90, min/max 0/180
   * filter for car deemed to the side
   */
  int32_t SideZoneWidth_Degs;

  /**
   * HYSTERESIS_TTE default is 350, min/max 0/1000
   * Hysteresis time to event [ms]
   */
  int32_t HYSTERESIS_TTE;

  /**
   * HYSTERESIS_DTE default is 15, min/max 0/65535
   * Hysteresis distance to event [m]
   */
  int32_t HYSTERESIS_DTE;

  /**
   * LON_ACCEL_IIR_FILT_COEFF default is 0.5, min/max 0.0/0.999
   * IIR filter weight for LonAccel
   * 0 = disable IIR filter
   * 0.999 = _very_ slow filter
   */
  float LON_ACCEL_IIR_FILT_COEFF;

  /**
   * TriggeringEnabled default is true
   * Enables / Disables the 'Triggering' support module
   */
  bool TriggeringEnabled;
} tdefault_stack_Cohda_TA;

#define default_stack_Cohda_TA_NUM_SUB (5)
#define default_stack_Cohda_TA_NUM_FLD (22)


#define default_stack_Cohda_VehicleConfig_WIDTH_m_PARAM "Cohda_VehicleConfig.WIDTH_m"
#define default_stack_Cohda_VehicleConfig_WIDTH_m_MIN 0.1
#define default_stack_Cohda_VehicleConfig_WIDTH_m_DEF 2.0
#define default_stack_Cohda_VehicleConfig_WIDTH_m_MAX 40.0

#define default_stack_Cohda_VehicleConfig_LENGTH_m_PARAM "Cohda_VehicleConfig.LENGTH_m"
#define default_stack_Cohda_VehicleConfig_LENGTH_m_MIN 0.1
#define default_stack_Cohda_VehicleConfig_LENGTH_m_DEF 5.0
#define default_stack_Cohda_VehicleConfig_LENGTH_m_MAX 200.0

#define default_stack_Cohda_VehicleConfig_HEIGHT_m_PARAM "Cohda_VehicleConfig.HEIGHT_m"
#define default_stack_Cohda_VehicleConfig_HEIGHT_m_MIN 0.1
#define default_stack_Cohda_VehicleConfig_HEIGHT_m_DEF 1.5
#define default_stack_Cohda_VehicleConfig_HEIGHT_m_MAX 40.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_X_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_LOCATION_X_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_X_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_X_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_X_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Y_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_LOCATION_Y_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Y_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Y_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Y_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Z_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_LOCATION_Z_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Z_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Z_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_LOCATION_Z_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_PITCH_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_ORIENTATION_PITCH_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_PITCH_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_PITCH_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_PITCH_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_YAW_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_ORIENTATION_YAW_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_YAW_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_YAW_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_YAW_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_ROLL_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA1_ORIENTATION_ROLL_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_ROLL_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_ROLL_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA1_ORIENTATION_ROLL_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_X_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_LOCATION_X_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_X_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_X_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_X_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Y_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_LOCATION_Y_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Y_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Y_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Y_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Z_m_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_LOCATION_Z_m"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Z_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Z_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_LOCATION_Z_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_PITCH_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_ORIENTATION_PITCH_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_PITCH_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_PITCH_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_PITCH_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_YAW_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_ORIENTATION_YAW_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_YAW_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_YAW_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_YAW_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_ROLL_deg_PARAM "Cohda_VehicleConfig.ITS_ANTENNA2_ORIENTATION_ROLL_deg"
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_ROLL_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_ROLL_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_ITS_ANTENNA2_ORIENTATION_ROLL_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_X_m_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_LOCATION_X_m"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_X_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_X_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_X_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Y_m_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_LOCATION_Y_m"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Y_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Y_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Y_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Z_m_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_LOCATION_Z_m"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Z_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Z_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_LOCATION_Z_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_PITCH_deg_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_ORIENTATION_PITCH_deg"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_PITCH_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_PITCH_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_PITCH_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_YAW_deg_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_ORIENTATION_YAW_deg"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_YAW_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_YAW_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_YAW_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_ROLL_deg_PARAM "Cohda_VehicleConfig.GPS_ANTENNA1_ORIENTATION_ROLL_deg"
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_ROLL_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_ROLL_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_GPS_ANTENNA1_ORIENTATION_ROLL_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_X_m_PARAM "Cohda_VehicleConfig.OBU_LOCATION_X_m"
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_X_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_X_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_X_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Y_m_PARAM "Cohda_VehicleConfig.OBU_LOCATION_Y_m"
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Y_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Y_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Y_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Z_m_PARAM "Cohda_VehicleConfig.OBU_LOCATION_Z_m"
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Z_m_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Z_m_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_LOCATION_Z_m_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_PITCH_deg_PARAM "Cohda_VehicleConfig.OBU_ORIENTATION_PITCH_deg"
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_PITCH_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_PITCH_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_PITCH_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_YAW_deg_PARAM "Cohda_VehicleConfig.OBU_ORIENTATION_YAW_deg"
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_YAW_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_YAW_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_YAW_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_ROLL_deg_PARAM "Cohda_VehicleConfig.OBU_ORIENTATION_ROLL_deg"
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_ROLL_deg_MIN -360.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_ROLL_deg_DEF 0.0
#define default_stack_Cohda_VehicleConfig_OBU_ORIENTATION_ROLL_deg_MAX 360.0

#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_X_PARAM "Cohda_VehicleConfig.CENTRE_REAR_AXLE_LOCATION_X"
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_X_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_X_DEF 0.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_X_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Y_PARAM "Cohda_VehicleConfig.CENTRE_REAR_AXLE_LOCATION_Y"
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Y_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Y_DEF 0.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Y_MAX 1000.0

#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Z_PARAM "Cohda_VehicleConfig.CENTRE_REAR_AXLE_LOCATION_Z"
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Z_MIN -1000.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Z_DEF 0.0
#define default_stack_Cohda_VehicleConfig_CENTRE_REAR_AXLE_LOCATION_Z_MAX 1000.0

typedef struct default_stack_Cohda_VehicleConfig
{
  /**
   * WIDTH_m default is 2.0, min/max 0.1/40.0
   * Vehicle Width in metres
   */
  float WIDTH_m;

  /**
   * LENGTH_m default is 5.0, min/max 0.1/200.0
   * Vehcile Length in metres
   */
  float LENGTH_m;

  /**
   * HEIGHT_m default is 1.5, min/max 0.1/40.0
   * Vehicle Height in metres
   */
  float HEIGHT_m;

  /**
   * ITS_ANTENNA1_LOCATION_X_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA1_LOCATION_X_m;

  /**
   * ITS_ANTENNA1_LOCATION_Y_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA1_LOCATION_Y_m;

  /**
   * ITS_ANTENNA1_LOCATION_Z_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA1_LOCATION_Z_m;

  /**
   * ITS_ANTENNA1_ORIENTATION_PITCH_deg default is 0.0, min/max -360.0/360.0
   * Note: Only supports pitch = 0, yaw = 0 or 180, roll = 0.
   */
  float ITS_ANTENNA1_ORIENTATION_PITCH_deg;

  /**
   * ITS_ANTENNA1_ORIENTATION_YAW_deg default is 0.0, min/max -360.0/360.0
   */
  float ITS_ANTENNA1_ORIENTATION_YAW_deg;

  /**
   * ITS_ANTENNA1_ORIENTATION_ROLL_deg default is 0.0, min/max -360.0/360.0
   */
  float ITS_ANTENNA1_ORIENTATION_ROLL_deg;

  /**
   * ITS_ANTENNA2_LOCATION_X_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA2_LOCATION_X_m;

  /**
   * ITS_ANTENNA2_LOCATION_Y_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA2_LOCATION_Y_m;

  /**
   * ITS_ANTENNA2_LOCATION_Z_m default is 0.0, min/max -1000.0/1000.0
   */
  float ITS_ANTENNA2_LOCATION_Z_m;

  /**
   * ITS_ANTENNA2_ORIENTATION_PITCH_deg default is 0.0, min/max -360.0/360.0
   * Note: Only supports pitch = 0, yaw = 0 or 180, roll = 0.
   */
  float ITS_ANTENNA2_ORIENTATION_PITCH_deg;

  /**
   * ITS_ANTENNA2_ORIENTATION_YAW_deg default is 0.0, min/max -360.0/360.0
   */
  float ITS_ANTENNA2_ORIENTATION_YAW_deg;

  /**
   * ITS_ANTENNA2_ORIENTATION_ROLL_deg default is 0.0, min/max -360.0/360.0
   */
  float ITS_ANTENNA2_ORIENTATION_ROLL_deg;

  /**
   * GPS_ANTENNA1_LOCATION_X_m default is 0.0, min/max -1000.0/1000.0
   */
  float GPS_ANTENNA1_LOCATION_X_m;

  /**
   * GPS_ANTENNA1_LOCATION_Y_m default is 0.0, min/max -1000.0/1000.0
   */
  float GPS_ANTENNA1_LOCATION_Y_m;

  /**
   * GPS_ANTENNA1_LOCATION_Z_m default is 0.0, min/max -1000.0/1000.0
   */
  float GPS_ANTENNA1_LOCATION_Z_m;

  /**
   * GPS_ANTENNA1_ORIENTATION_PITCH_deg default is 0.0, min/max -360.0/360.0
   */
  float GPS_ANTENNA1_ORIENTATION_PITCH_deg;

  /**
   * GPS_ANTENNA1_ORIENTATION_YAW_deg default is 0.0, min/max -360.0/360.0
   */
  float GPS_ANTENNA1_ORIENTATION_YAW_deg;

  /**
   * GPS_ANTENNA1_ORIENTATION_ROLL_deg default is 0.0, min/max -360.0/360.0
   */
  float GPS_ANTENNA1_ORIENTATION_ROLL_deg;

  /**
   * OBU_LOCATION_X_m default is 0.0, min/max -1000.0/1000.0
   */
  float OBU_LOCATION_X_m;

  /**
   * OBU_LOCATION_Y_m default is 0.0, min/max -1000.0/1000.0
   */
  float OBU_LOCATION_Y_m;

  /**
   * OBU_LOCATION_Z_m default is 0.0, min/max -1000.0/1000.0
   */
  float OBU_LOCATION_Z_m;

  /**
   * OBU_ORIENTATION_PITCH_deg default is 0.0, min/max -360.0/360.0
   */
  float OBU_ORIENTATION_PITCH_deg;

  /**
   * OBU_ORIENTATION_YAW_deg default is 0.0, min/max -360.0/360.0
   */
  float OBU_ORIENTATION_YAW_deg;

  /**
   * OBU_ORIENTATION_ROLL_deg default is 0.0, min/max -360.0/360.0
   */
  float OBU_ORIENTATION_ROLL_deg;

  /**
   * CENTRE_REAR_AXLE_LOCATION_X default is 0.0, min/max -1000.0/1000.0
   * Location of the vehicle centre-rear axle, assumed parallel with vehicle y-axis.
   */
  float CENTRE_REAR_AXLE_LOCATION_X;

  /**
   * CENTRE_REAR_AXLE_LOCATION_Y default is 0.0, min/max -1000.0/1000.0
   */
  float CENTRE_REAR_AXLE_LOCATION_Y;

  /**
   * CENTRE_REAR_AXLE_LOCATION_Z default is 0.0, min/max -1000.0/1000.0
   */
  float CENTRE_REAR_AXLE_LOCATION_Z;
} tdefault_stack_Cohda_VehicleConfig;

#define default_stack_Cohda_VehicleConfig_NUM_SUB (0)
#define default_stack_Cohda_VehicleConfig_NUM_FLD (30)


#define default_stack_Cohda_GeoFence_DebugLevel_PARAM "Cohda_GeoFence.DebugLevel"
#define default_stack_Cohda_GeoFence_DebugLevel_MIN -1
#define default_stack_Cohda_GeoFence_DebugLevel_DEF -1
#define default_stack_Cohda_GeoFence_DebugLevel_MAX 255

#define default_stack_Cohda_GeoFence_KML_FILE_PARAM "Cohda_GeoFence.KML_FILE"
#define default_stack_Cohda_GeoFence_KML_FILE_DEF ""

#define default_stack_Cohda_GeoFence_MaxNumStoredPolygons_PARAM "Cohda_GeoFence.MaxNumStoredPolygons"
#define default_stack_Cohda_GeoFence_MaxNumStoredPolygons_MIN 1
#define default_stack_Cohda_GeoFence_MaxNumStoredPolygons_DEF 16
#define default_stack_Cohda_GeoFence_MaxNumStoredPolygons_MAX 65535

#define default_stack_Cohda_GeoFence_MaxNumRelevantPolygons_PARAM "Cohda_GeoFence.MaxNumRelevantPolygons"
#define default_stack_Cohda_GeoFence_MaxNumRelevantPolygons_MIN 1
#define default_stack_Cohda_GeoFence_MaxNumRelevantPolygons_DEF 8
#define default_stack_Cohda_GeoFence_MaxNumRelevantPolygons_MAX 32

#define default_stack_Cohda_GeoFence_BufferRadius_m_PARAM "Cohda_GeoFence.BufferRadius_m"
#define default_stack_Cohda_GeoFence_BufferRadius_m_MIN 0
#define default_stack_Cohda_GeoFence_BufferRadius_m_DEF 0
#define default_stack_Cohda_GeoFence_BufferRadius_m_MAX 1000

#define default_stack_Cohda_GeoFence_EvaluatePolygons_PARAM "Cohda_GeoFence.EvaluatePolygons"
#define default_stack_Cohda_GeoFence_EvaluatePolygons_DEF true


#define default_stack_Cohda_GeoFence_main_DebugLevel_PARAM "Cohda_GeoFence.main.DebugLevel"
#define default_stack_Cohda_GeoFence_main_DebugLevel_MIN -1
#define default_stack_Cohda_GeoFence_main_DebugLevel_DEF -1
#define default_stack_Cohda_GeoFence_main_DebugLevel_MAX 255

typedef struct default_stack_Cohda_GeoFence_main
{
  /**
   * DebugLevel default is -1, min/max -1/255
   * interface module
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_GeoFence_main;

#define default_stack_Cohda_GeoFence_main_NUM_SUB (0)
#define default_stack_Cohda_GeoFence_main_NUM_FLD (1)


#define default_stack_Cohda_GeoFence_read_DebugLevel_PARAM "Cohda_GeoFence.read.DebugLevel"
#define default_stack_Cohda_GeoFence_read_DebugLevel_MIN -1
#define default_stack_Cohda_GeoFence_read_DebugLevel_DEF -1
#define default_stack_Cohda_GeoFence_read_DebugLevel_MAX 255

typedef struct default_stack_Cohda_GeoFence_read
{
  /**
   * DebugLevel default is -1, min/max -1/255
   * KML reader
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_GeoFence_read;

#define default_stack_Cohda_GeoFence_read_NUM_SUB (0)
#define default_stack_Cohda_GeoFence_read_NUM_FLD (1)


#define default_stack_Cohda_GeoFence_ray_DebugLevel_PARAM "Cohda_GeoFence.ray.DebugLevel"
#define default_stack_Cohda_GeoFence_ray_DebugLevel_MIN -1
#define default_stack_Cohda_GeoFence_ray_DebugLevel_DEF -1
#define default_stack_Cohda_GeoFence_ray_DebugLevel_MAX 255

typedef struct default_stack_Cohda_GeoFence_ray
{
  /**
   * DebugLevel default is -1, min/max -1/255
   * Raycaster
   */
  int32_t DebugLevel;
} tdefault_stack_Cohda_GeoFence_ray;

#define default_stack_Cohda_GeoFence_ray_NUM_SUB (0)
#define default_stack_Cohda_GeoFence_ray_NUM_FLD (1)

typedef struct default_stack_Cohda_GeoFence
{
  tdefault_stack_Cohda_GeoFence_main main;

  tdefault_stack_Cohda_GeoFence_read read;

  tdefault_stack_Cohda_GeoFence_ray ray;

  /**
   * KML_FILE default is ""
   * Geo-fencing definition file location
   * Positions within these polygons toggle the state to K_GEOFENCE_TX_ENABLED_IF_INSIDE
   */
  const char * KML_FILE;

  /**
   * DebugLevel default is -1, min/max -1/255
   ***************************************************************************
   **                                geofence                                *
   ***************************************************************************
   * if != -1, override debug level for GeoFence module only
   */
  int32_t DebugLevel;

  /**
   * MaxNumStoredPolygons default is 16, min/max 1/65535
   * Maximum number of polygons stored to evaluate
   */
  int32_t MaxNumStoredPolygons;

  /**
   * MaxNumRelevantPolygons default is 8, min/max 1/32
   * Maximum number of allowed relevant polygons
   */
  int32_t MaxNumRelevantPolygons;

  /**
   * BufferRadius_m default is 0, min/max 0/1000
   * A point is considered 'inside' a polygon if it within this distance of the polygon
   */
  int32_t BufferRadius_m;

  /**
   * EvaluatePolygons default is true
   * Used to turn on/off the continuous evaluation of polygons
   * Can be turned off if only raycasting is required to be used
   */
  bool EvaluatePolygons;
} tdefault_stack_Cohda_GeoFence;

#define default_stack_Cohda_GeoFence_NUM_SUB (3)
#define default_stack_Cohda_GeoFence_NUM_FLD (6)

typedef struct default_stack
{
  tdefault_stack_Cohda_PP Cohda_PP;

  tdefault_stack_Cohda_PH Cohda_PH;

  tdefault_stack_J2945CC J2945CC;

  tdefault_stack_SAEC SAEC;

  tdefault_stack_SAEC_TRX SAEC_TRX;

  tdefault_stack_Cohda_IVI Cohda_IVI;

  tdefault_stack_Cohda_TIM Cohda_TIM;

  tdefault_stack_Cohda_RSICN Cohda_RSICN;

  tdefault_stack_Cohda_PC5 Cohda_PC5;

  tdefault_stack_Cohda_QTI Cohda_QTI;

  tdefault_stack_Cohda_VS Cohda_VS;

  tdefault_stack_Cohda_TM Cohda_TM;

  tdefault_stack_Cohda_UBX Cohda_UBX;

  tdefault_stack_Cohda_HMI Cohda_HMI;

  tdefault_stack_Cohda_ADR Cohda_ADR;

  tdefault_stack_Cohda_RPS Cohda_RPS;

  tdefault_stack_Cohda_LTE Cohda_LTE;

  tdefault_stack_Cohda_Stack Cohda_Stack;

  tdefault_stack_Cohda_SPATMAP Cohda_SPATMAP;

  tdefault_stack_Cohda_TC Cohda_TC;

  tdefault_stack_Cohda_LDM Cohda_LDM;

  tdefault_stack_Cohda_App_UAVD Cohda_App_UAVD;

  tdefault_stack_Cohda_App_VTRW Cohda_App_VTRW;

  tdefault_stack_Cohda_App_PCW Cohda_App_PCW;

  tdefault_stack_Cohda_App_MAW Cohda_App_MAW;

  tdefault_stack_Cohda_TA Cohda_TA;

  tdefault_stack_Cohda_VehicleConfig Cohda_VehicleConfig;

  tdefault_stack_Cohda_GeoFence Cohda_GeoFence;

  /**
   * PreRecFileName default is ""
   * File that contains the pre-recorded file to play back from
   */
  const char * PreRecFileName;

  /**
   * MACAddr default is ""
   * SAFETY CHANNEL
   * Source MAC Address. e.g. 04:e5:48:00:00:00
   */
  const char * MACAddr;

  /**
   * WSMP_DA default is "ff:ff:ff:ff:ff:ff"
   * WSMP configuration defaults
   * Each of the 'channels' (safety, control, service) is expected to override these defaults
   * with their own defaults (which may be overridden on a packet-by-packet basis).
   * Destination MAC Address
   */
  const char * WSMP_DA;

  /**
   * WSMPUDPBypassHost default is ""
   * Remote host to send / receive WSMP packets over UDP to / from
   */
  const char * WSMPUDPBypassHost;

  /**
   * WSAAdvertiserID default is "Cohda"
   */
  const char * WSAAdvertiserID;

  /**
   * WME_TA_Channel default is ""
   ***************************************************************************
   **                     Timing Advertisements                              *
   ***************************************************************************
   * CCH / SCH or empty to disable sending of TAs
   */
  const char * WME_TA_Channel;

  /**
   * ShortDescription default is ""
   * Short description (<=32) for pcap metadata
   */
  const char * ShortDescription;

  /**
   * TxALogFileName default is "tx_r1a.pcap"
   * Filename to log for Tx log data for radio A
   */
  const char * TxALogFileName;

  /**
   * TxBLogFileName default is "tx_r1c.pcap"
   * Filename to log for Tx log data for radio B
   */
  const char * TxBLogFileName;

  /**
   * RxALogFileName default is "rx_r1a.pcap"
   * Filename to log for Rx log data for radio A
   */
  const char * RxALogFileName;

  /**
   * RxBLogFileName default is "rx_r1c.pcap"
   * Filename to log for Rx log data for radio B
   */
  const char * RxBLogFileName;

  /**
   * OTALogFileName default is "tx_ota.pcap"
   * Filename to log for Tx (over the air) log data
   */
  const char * OTALogFileName;

  /**
   * SSLLogFileName default is "ssl.pcap"
   * Filename to log for the rsyslog data
   */
  const char * SSLLogFileName;

  /**
   * GenTcpDumpInterface default is "eth0"
   * Interface name
   */
  const char * GenTcpDumpInterface;

  /**
   * GenTcpDumpFilter default is "port 502"
   * Filters
   */
  const char * GenTcpDumpFilter;

  /**
   * GenLogFileName default is "modbus.pcap"
   * Filename to log for the modbus data
   */
  const char * GenLogFileName;

  /**
   * Cohda_Syslog_RotateTime default is ""
   * cron-like format time to close, and rotate syslog file
   * supports a single value or * for each element only
   * minute hour day-of-month month-of-year weekday
   * if unset syslog is never rotated
   */
  const char * Cohda_Syslog_RotateTime;

  /**
   * Cohda_Syslog_PurgeTime default is ""
   * cron format time to purge old syslog files
   * supports a single value or * for each element only
   * minute hour day-of-month month-of-year weekday
   * if unset syslog is never rotated
   */
  const char * Cohda_Syslog_PurgeTime;

  /**
   * WBSS_Service_0_IPAddress default is ""
   */
  const char * WBSS_Service_0_IPAddress;

  /**
   * WBSS_Service_0_ChanId default is "SCH"
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_0_ChanId;

  /**
   * WBSS_Service_0_PSC default is "IPv6"
   */
  const char * WBSS_Service_0_PSC;

  /**
   * WBSS_Service_0_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_0_ProvMAC;

  /**
   * WBSS_Service_1_IPAddress default is "c0da::1"
   */
  const char * WBSS_Service_1_IPAddress;

  /**
   * WBSS_Service_1_ChanId default is "SCH"
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_1_ChanId;

  /**
   * WBSS_Service_1_PSC default is "SCMS"
   */
  const char * WBSS_Service_1_PSC;

  /**
   * WBSS_Service_1_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_1_ProvMAC;

  /**
   * WBSS_Service_2_IPAddress default is ""
   */
  const char * WBSS_Service_2_IPAddress;

  /**
   * WBSS_Service_2_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_2_ChanId;

  /**
   * WBSS_Service_2_PSC default is ""
   */
  const char * WBSS_Service_2_PSC;

  /**
   * WBSS_Service_2_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_2_ProvMAC;

  /**
   * WBSS_Service_3_IPAddress default is ""
   */
  const char * WBSS_Service_3_IPAddress;

  /**
   * WBSS_Service_3_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_3_ChanId;

  /**
   * WBSS_Service_3_PSC default is ""
   */
  const char * WBSS_Service_3_PSC;

  /**
   * WBSS_Service_3_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_3_ProvMAC;

  /**
   * WBSS_Service_4_IPAddress default is ""
   */
  const char * WBSS_Service_4_IPAddress;

  /**
   * WBSS_Service_4_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_4_ChanId;

  /**
   * WBSS_Service_4_PSC default is ""
   */
  const char * WBSS_Service_4_PSC;

  /**
   * WBSS_Service_4_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_4_ProvMAC;

  /**
   * WBSS_Service_5_IPAddress default is ""
   */
  const char * WBSS_Service_5_IPAddress;

  /**
   * WBSS_Service_5_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_5_ChanId;

  /**
   * WBSS_Service_5_PSC default is ""
   */
  const char * WBSS_Service_5_PSC;

  /**
   * WBSS_Service_5_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_5_ProvMAC;

  /**
   * WBSS_Service_6_IPAddress default is ""
   */
  const char * WBSS_Service_6_IPAddress;

  /**
   * WBSS_Service_6_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_6_ChanId;

  /**
   * WBSS_Service_6_PSC default is ""
   */
  const char * WBSS_Service_6_PSC;

  /**
   * WBSS_Service_6_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_6_ProvMAC;

  /**
   * WBSS_Service_7_IPAddress default is ""
   */
  const char * WBSS_Service_7_IPAddress;

  /**
   * WBSS_Service_7_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_7_ChanId;

  /**
   * WBSS_Service_7_PSC default is ""
   */
  const char * WBSS_Service_7_PSC;

  /**
   * WBSS_Service_7_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_7_ProvMAC;

  /**
   * WBSS_Service_8_IPAddress default is ""
   */
  const char * WBSS_Service_8_IPAddress;

  /**
   * WBSS_Service_8_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_8_ChanId;

  /**
   * WBSS_Service_8_PSC default is ""
   */
  const char * WBSS_Service_8_PSC;

  /**
   * WBSS_Service_8_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_8_ProvMAC;

  /**
   * WBSS_Service_9_IPAddress default is ""
   */
  const char * WBSS_Service_9_IPAddress;

  /**
   * WBSS_Service_9_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_9_ChanId;

  /**
   * WBSS_Service_9_PSC default is ""
   */
  const char * WBSS_Service_9_PSC;

  /**
   * WBSS_Service_9_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_9_ProvMAC;

  /**
   * WBSS_Service_10_IPAddress default is ""
   */
  const char * WBSS_Service_10_IPAddress;

  /**
   * WBSS_Service_10_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_10_ChanId;

  /**
   * WBSS_Service_10_PSC default is ""
   */
  const char * WBSS_Service_10_PSC;

  /**
   * WBSS_Service_10_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_10_ProvMAC;

  /**
   * WBSS_Service_11_IPAddress default is ""
   */
  const char * WBSS_Service_11_IPAddress;

  /**
   * WBSS_Service_11_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_11_ChanId;

  /**
   * WBSS_Service_11_PSC default is ""
   */
  const char * WBSS_Service_11_PSC;

  /**
   * WBSS_Service_11_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_11_ProvMAC;

  /**
   * WBSS_Service_12_IPAddress default is ""
   */
  const char * WBSS_Service_12_IPAddress;

  /**
   * WBSS_Service_12_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_12_ChanId;

  /**
   * WBSS_Service_12_PSC default is ""
   */
  const char * WBSS_Service_12_PSC;

  /**
   * WBSS_Service_12_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_12_ProvMAC;

  /**
   * WBSS_Service_13_IPAddress default is ""
   */
  const char * WBSS_Service_13_IPAddress;

  /**
   * WBSS_Service_13_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_13_ChanId;

  /**
   * WBSS_Service_13_PSC default is ""
   */
  const char * WBSS_Service_13_PSC;

  /**
   * WBSS_Service_13_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_13_ProvMAC;

  /**
   * WBSS_Service_14_IPAddress default is ""
   */
  const char * WBSS_Service_14_IPAddress;

  /**
   * WBSS_Service_14_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_14_ChanId;

  /**
   * WBSS_Service_14_PSC default is ""
   */
  const char * WBSS_Service_14_PSC;

  /**
   * WBSS_Service_14_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_14_ProvMAC;

  /**
   * WBSS_Service_15_IPAddress default is ""
   */
  const char * WBSS_Service_15_IPAddress;

  /**
   * WBSS_Service_15_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_15_ChanId;

  /**
   * WBSS_Service_15_PSC default is ""
   */
  const char * WBSS_Service_15_PSC;

  /**
   * WBSS_Service_15_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_15_ProvMAC;

  /**
   * WBSS_Service_16_IPAddress default is ""
   */
  const char * WBSS_Service_16_IPAddress;

  /**
   * WBSS_Service_16_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_16_ChanId;

  /**
   * WBSS_Service_16_PSC default is ""
   */
  const char * WBSS_Service_16_PSC;

  /**
   * WBSS_Service_16_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_16_ProvMAC;

  /**
   * WBSS_Service_17_IPAddress default is ""
   */
  const char * WBSS_Service_17_IPAddress;

  /**
   * WBSS_Service_17_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_17_ChanId;

  /**
   * WBSS_Service_17_PSC default is ""
   */
  const char * WBSS_Service_17_PSC;

  /**
   * WBSS_Service_17_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_17_ProvMAC;

  /**
   * WBSS_Service_18_IPAddress default is ""
   */
  const char * WBSS_Service_18_IPAddress;

  /**
   * WBSS_Service_18_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_18_ChanId;

  /**
   * WBSS_Service_18_PSC default is ""
   */
  const char * WBSS_Service_18_PSC;

  /**
   * WBSS_Service_18_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_18_ProvMAC;

  /**
   * WBSS_Service_19_IPAddress default is ""
   */
  const char * WBSS_Service_19_IPAddress;

  /**
   * WBSS_Service_19_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_19_ChanId;

  /**
   * WBSS_Service_19_PSC default is ""
   */
  const char * WBSS_Service_19_PSC;

  /**
   * WBSS_Service_19_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_19_ProvMAC;

  /**
   * WBSS_Service_20_IPAddress default is ""
   */
  const char * WBSS_Service_20_IPAddress;

  /**
   * WBSS_Service_20_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_20_ChanId;

  /**
   * WBSS_Service_20_PSC default is ""
   */
  const char * WBSS_Service_20_PSC;

  /**
   * WBSS_Service_20_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_20_ProvMAC;

  /**
   * WBSS_Service_21_IPAddress default is ""
   */
  const char * WBSS_Service_21_IPAddress;

  /**
   * WBSS_Service_21_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_21_ChanId;

  /**
   * WBSS_Service_21_PSC default is ""
   */
  const char * WBSS_Service_21_PSC;

  /**
   * WBSS_Service_21_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_21_ProvMAC;

  /**
   * WBSS_Service_22_IPAddress default is ""
   */
  const char * WBSS_Service_22_IPAddress;

  /**
   * WBSS_Service_22_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_22_ChanId;

  /**
   * WBSS_Service_22_PSC default is ""
   */
  const char * WBSS_Service_22_PSC;

  /**
   * WBSS_Service_22_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_22_ProvMAC;

  /**
   * WBSS_Service_23_IPAddress default is ""
   */
  const char * WBSS_Service_23_IPAddress;

  /**
   * WBSS_Service_23_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_23_ChanId;

  /**
   * WBSS_Service_23_PSC default is ""
   */
  const char * WBSS_Service_23_PSC;

  /**
   * WBSS_Service_23_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_23_ProvMAC;

  /**
   * WBSS_Service_24_IPAddress default is ""
   */
  const char * WBSS_Service_24_IPAddress;

  /**
   * WBSS_Service_24_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_24_ChanId;

  /**
   * WBSS_Service_24_PSC default is ""
   */
  const char * WBSS_Service_24_PSC;

  /**
   * WBSS_Service_24_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_24_ProvMAC;

  /**
   * WBSS_Service_25_IPAddress default is ""
   */
  const char * WBSS_Service_25_IPAddress;

  /**
   * WBSS_Service_25_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_25_ChanId;

  /**
   * WBSS_Service_25_PSC default is ""
   */
  const char * WBSS_Service_25_PSC;

  /**
   * WBSS_Service_25_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_25_ProvMAC;

  /**
   * WBSS_Service_26_IPAddress default is ""
   */
  const char * WBSS_Service_26_IPAddress;

  /**
   * WBSS_Service_26_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_26_ChanId;

  /**
   * WBSS_Service_26_PSC default is ""
   */
  const char * WBSS_Service_26_PSC;

  /**
   * WBSS_Service_26_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_26_ProvMAC;

  /**
   * WBSS_Service_27_IPAddress default is ""
   */
  const char * WBSS_Service_27_IPAddress;

  /**
   * WBSS_Service_27_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_27_ChanId;

  /**
   * WBSS_Service_27_PSC default is ""
   */
  const char * WBSS_Service_27_PSC;

  /**
   * WBSS_Service_27_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_27_ProvMAC;

  /**
   * WBSS_Service_28_IPAddress default is ""
   */
  const char * WBSS_Service_28_IPAddress;

  /**
   * WBSS_Service_28_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_28_ChanId;

  /**
   * WBSS_Service_28_PSC default is ""
   */
  const char * WBSS_Service_28_PSC;

  /**
   * WBSS_Service_28_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_28_ProvMAC;

  /**
   * WBSS_Service_29_IPAddress default is ""
   */
  const char * WBSS_Service_29_IPAddress;

  /**
   * WBSS_Service_29_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_29_ChanId;

  /**
   * WBSS_Service_29_PSC default is ""
   */
  const char * WBSS_Service_29_PSC;

  /**
   * WBSS_Service_29_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_29_ProvMAC;

  /**
   * WBSS_Service_30_IPAddress default is ""
   */
  const char * WBSS_Service_30_IPAddress;

  /**
   * WBSS_Service_30_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_30_ChanId;

  /**
   * WBSS_Service_30_PSC default is ""
   */
  const char * WBSS_Service_30_PSC;

  /**
   * WBSS_Service_30_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_30_ProvMAC;

  /**
   * WBSS_Service_31_IPAddress default is ""
   */
  const char * WBSS_Service_31_IPAddress;

  /**
   * WBSS_Service_31_ChanId default is ""
   * SCH, CCH, LCH
   */
  const char * WBSS_Service_31_ChanId;

  /**
   * WBSS_Service_31_PSC default is ""
   */
  const char * WBSS_Service_31_PSC;

  /**
   * WBSS_Service_31_ProvMAC default is "00:00:00:00:00:00"
   * Provider MAC (all 0: not set)
   */
  const char * WBSS_Service_31_ProvMAC;

  /**
   * WBSS_Event_Hook_Script default is ""
   */
  const char * WBSS_Event_Hook_Script;

  /**
   * WBSS_WSA_OverridePrefix default is ""
   * IPv6 address, if empty it is disabled
   */
  const char * WBSS_WSA_OverridePrefix;

  /**
   * WBSS_WSA_OverrideGateway default is ""
   * Gateway IPv6 address override in the WRA of the WSA
   */
  const char * WBSS_WSA_OverrideGateway;

  /**
   * WBSS_WSA_DNS default is "2001:470:20::2"
   * Primary DNS IPv6 address in the WRA of the WSA
   * default to hurricane electric DNS server
   */
  const char * WBSS_WSA_DNS;

  /**
   * WBSS_WSA_Secondary_DNS default is "::"
   * Secondary DNS IPv6 address in the WRA of the WSA
   * default to :: (no secondary DNS extension will be
   * included in the WRA)
   */
  const char * WBSS_WSA_Secondary_DNS;

  /**
   * WBSS_WSA_Gateway_MAC default is ""
   * Gateway MAC Address is the 48-bit MAC
   * address associated with the Default Gateway,
   * if different than the MAC address of the
   * device transmitting the WSA.
   * All zeros indicates not set (no GW MAC
   * extension will be included in WRA)
   */
  const char * WBSS_WSA_Gateway_MAC;

  /**
   * WSMFwdRx_Interface default is "eth0"
   * Interface to bind to for forwarding received WSM OTA packets
   */
  const char * WSMFwdRx_Interface;

  /**
   * WSMFwdRx_0_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_0_DestIP;

  /**
   * WSMFwdRx_0_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_0_StartTime;

  /**
   * WSMFwdRx_0_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_0_EndTime;

  /**
   * WSMFwdRx_1_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_1_DestIP;

  /**
   * WSMFwdRx_1_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_1_StartTime;

  /**
   * WSMFwdRx_1_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_1_EndTime;

  /**
   * WSMFwdRx_2_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_2_DestIP;

  /**
   * WSMFwdRx_2_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_2_StartTime;

  /**
   * WSMFwdRx_2_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_2_EndTime;

  /**
   * WSMFwdRx_3_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_3_DestIP;

  /**
   * WSMFwdRx_3_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_3_StartTime;

  /**
   * WSMFwdRx_3_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_3_EndTime;

  /**
   * WSMFwdRx_4_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_4_DestIP;

  /**
   * WSMFwdRx_4_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_4_StartTime;

  /**
   * WSMFwdRx_4_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_4_EndTime;

  /**
   * WSMFwdRx_5_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_5_DestIP;

  /**
   * WSMFwdRx_5_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_5_StartTime;

  /**
   * WSMFwdRx_5_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_5_EndTime;

  /**
   * WSMFwdRx_6_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_6_DestIP;

  /**
   * WSMFwdRx_6_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_6_StartTime;

  /**
   * WSMFwdRx_6_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_6_EndTime;

  /**
   * WSMFwdRx_7_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_7_DestIP;

  /**
   * WSMFwdRx_7_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_7_StartTime;

  /**
   * WSMFwdRx_7_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_7_EndTime;

  /**
   * WSMFwdRx_8_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_8_DestIP;

  /**
   * WSMFwdRx_8_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_8_StartTime;

  /**
   * WSMFwdRx_8_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_8_EndTime;

  /**
   * WSMFwdRx_9_DestIP default is ""
   * IP address to forward received WSM OTA packets
   * Empty means disabled
   */
  const char * WSMFwdRx_9_DestIP;

  /**
   * WSMFwdRx_9_StartTime default is ""
   * Time to start message forwarding - format mm/dd/yyyy, hh:mm
   * Empty means start immediately
   */
  const char * WSMFwdRx_9_StartTime;

  /**
   * WSMFwdRx_9_EndTime default is ""
   * Time to end message forwarding   - format mm/dd/yyyy, hh:mm
   * Empty means continue indefinately
   */
  const char * WSMFwdRx_9_EndTime;

  /**
   * Cohda_UDPUserDebugHost default is ""
   * UDP Debug of user prints
   */
  const char * Cohda_UDPUserDebugHost;

  /**
   * Cohda_UDPUserDebugMv6_Interface default is ""
   */
  const char * Cohda_UDPUserDebugMv6_Interface;

  /**
   * Cohda_LogDirectoryName default is "/mnt/ubi/log"
   */
  const char * Cohda_LogDirectoryName;

  /**
   * Cohda_LogDirectoryMode default is "0777"
   * Log folder permissions. Note: Octal string as per `man inode`
   */
  const char * Cohda_LogDirectoryMode;

  /**
   * Cohda_LogCaptureSTDOUT_Host default is ""
   * host to redirect STDOUT to (empty to disable)
   */
  const char * Cohda_LogCaptureSTDOUT_Host;

  /**
   * Cohda_LogCaptureSTDERR_Host default is ""
   * host to redirect STDERR to (empty to disable)
   */
  const char * Cohda_LogCaptureSTDERR_Host;

  /**
   * Cohda_LogCaptureSTDERR_Mv6_Interface default is ""
   */
  const char * Cohda_LogCaptureSTDERR_Mv6_Interface;

  /**
   * Cohda_LogCaptureSTDOUT_Mv6_Interface default is ""
   */
  const char * Cohda_LogCaptureSTDOUT_Mv6_Interface;

  /**
   * Cohda_CANReplayFileName default is ""
   */
  const char * Cohda_CANReplayFileName;

  /**
   * Cohda_GPSReplayFileName default is ""
   */
  const char * Cohda_GPSReplayFileName;

  /**
   * Cohda_PRXReplayFileName default is ""
   */
  const char * Cohda_PRXReplayFileName;

  /**
   * Cohda_PTXReplayFileName default is ""
   */
  const char * Cohda_PTXReplayFileName;

  /**
   * Cohda_G5MReplayFileName default is ""
   */
  const char * Cohda_G5MReplayFileName;

  /**
   * Cohda_CAN_InterfaceName default is "can0"
   * CAN interface name to listen on. Usually can0 or vcan0
   */
  const char * Cohda_CAN_InterfaceName;

  /**
   * Cohda_GPSD_HostName default is "localhost"
   * hostname of instance of GPSD to connect to
   */
  const char * Cohda_GPSD_HostName;

  /**
   * Cohda_GPSRx_QTIHostAddr default is "192.168.100.1"
   * IP address of QTI Kinematics server
   */
  const char * Cohda_GPSRx_QTIHostAddr;

  /**
   * Cohda_GPSRx_ATKGnssUartPath default is "/dev/ttyAMA1"
   * UART device path for GNSS on craton2 boards
   */
  const char * Cohda_GPSRx_ATKGnssUartPath;

  /**
   * Cohda_RunAsUser default is ""
   * The user the application should run as after initialization.
   * No change of user ID if empty
   */
  const char * Cohda_RunAsUser;

  /**
   * Cohda_PluginDir default is ""
   * Directory for plugins, BOARD maps to ${BOARD} used at build time
   */
  const char * Cohda_PluginDir;

  /**
   * Cohda_RandomDeviceFileName default is "/dev/urandom"
   * Name of random device file
   */
  const char * Cohda_RandomDeviceFileName;

  /**
   * VehicleVIN default is ""
   * VIN - used to populate vehicle status information if set
   */
  const char * VehicleVIN;

  /**
   * VehicleName default is ""
   * Vehicle Name - used to populate vehicle status information if set
   */
  const char * VehicleName;

  /**
   * VehicleOwnerCode default is ""
   * Vehicle Owner Code - Used to populate vehicle status information if set
   */
  const char * VehicleOwnerCode;

  /**
   * UUID default is ""
   * SEL specific: See rc.umtri & log/pcap-log.c
   * UUID of the microSD
   */
  const char * UUID;

  /**
   * SEL default is ""
   * Filename of the SEL on the microSD
   */
  const char * SEL;

  /**
   * Cohda_Crypto_AeroConfigDir default is ""
   * Aerolink security config directory
   */
  const char * Cohda_Crypto_AeroConfigDir;

  /**
   * Cohda_Crypto_AeroStateDir default is ""
   * Aerolink security state directory
   */
  const char * Cohda_Crypto_AeroStateDir;

  /**
   * Cohda_Crypto_AeroContext default is "its.wsc"
   * Aerolink context name
   */
  const char * Cohda_Crypto_AeroContext;

  /**
   * Cohda_Crypto_AeroLcm default is "demoLcm"
   * Aerolink lcmName used
   */
  const char * Cohda_Crypto_AeroLcm;

  /**
   * Cohda_Crypto_AeroAltLcm default is ""
   * Aerolink lcmName used (for alternative identity mode)
   */
  const char * Cohda_Crypto_AeroAltLcm;

  /**
   * Cohda_Crypto_AeroLogging default is ""
   * Aerolink logging parameters (e.g. "LCM=10;SMX=10;API=10", or all)
   */
  const char * Cohda_Crypto_AeroLogging;

  /**
   * Cohda_Crypto_SSPSA default is ""
   * SSP octets for SA (NOTE: Octet string used here, not numeric value)
   */
  const char * Cohda_Crypto_SSPSA;

  /**
   * Dot2_MessageContextName default is ""
   ***************************************************************************
   **                  DOT2 Configuration Items                              *
   ***************************************************************************
   * Aerolink security context for general messages
   */
  const char * Dot2_MessageContextName;

  /**
   * Dot2_IdChangeLcmName default is "bsmLcm"
   * Aerolink security Lcm name for id change - must
   * be specified in the security context specified
   * by Dot2_MessageContextName
   */
  const char * Dot2_IdChangeLcmName;

  /**
   * SCMSProxyAddress default is "2000::1"
   * Address of HTTP proxy server for SCMS connection
   */
  const char * SCMSProxyAddress;

  /**
   * SCMS_SSLCAPath default is "/etc/ssl/certs"
   * Directory location for Aerolink PKI secured connection CA certs
   */
  const char * SCMS_SSLCAPath;

  /**
   * SCMS_SSLCAFile default is ""
   * Specific file location for Aerolink PKI secured connection CA cert
   * (if not in SCMS_SSLCAPath directory)
   */
  const char * SCMS_SSLCAFile;

  /**
   * ItsFacilitiesTollDatabaseFile default is ""
   * Toll database file
   */
  const char * ItsFacilitiesTollDatabaseFile;

  /**
   * ItsG5Interface default is "eth0"
   * If ItsG5Enabled == 1, then this Ethernet interface is used
   */
  const char * ItsG5Interface;

  /**
   * ItsG5EthCchName default is "g5cch"
   * If ItsG5Enabled == 1, then this Ethernet ip link name is used
   */
  const char * ItsG5EthCchName;

  /**
   * ItsG5CchMACAddr default is "04:e5:48:00:00:01"
   * If ItsG5Enabled == 1, then this MAC address is used for the ip link
   */
  const char * ItsG5CchMACAddr;

  /**
   * ItsG5EthSchName default is "g5sch"
   * If ItsG5Enabled == 1, then this Ethernet ip link name is used
   */
  const char * ItsG5EthSchName;

  /**
   * ItsG5SchMACAddr default is "04:e5:48:00:00:02"
   * If ItsG5Enabled == 1, then this MAC address is used for the ip link
   */
  const char * ItsG5SchMACAddr;

  /**
   * ItsGnLocalAddr default is "00:00:00:00:00:00:00:01"
   * Local GN Address MID field (used when ItsGnLocalAddrConfMethod is auto)
   * For ITS-G5 48-bit MID is used (00:00:XX:XX:XX:XX:XX:XX)
   * For LTE-V2X 24-bit MID is used (00:00:00:00:00:XX:XX:XX)
   */
  const char * ItsGnLocalAddr;

  /**
   * ItsGn6aslENversion default is "EN1.2.1"
   * GN6 TS version
   */
  const char * ItsGn6aslENversion;

  /**
   * ItsNativeIPv6RadioAddress default is ""
   * IPv6 address (including the prefix length)
   * If blank, will try to use Prefix and Length (below to assign a unique IPv6 address)
   */
  const char * ItsNativeIPv6RadioAddress;

  /**
   * ItsNativeIPv6RadioAddressPrefix default is ""
   * IPv6 address prefix - if blank, don't assign one
   */
  const char * ItsNativeIPv6RadioAddressPrefix;

  /**
   * ItsNativeIPv6RadioPrimaryDNS default is "2001:470:20::2"
   * IPv6 primary DNS (reported in SAM)
   */
  const char * ItsNativeIPv6RadioPrimaryDNS;

  /**
   * ItsUdpBtpIfHostName default is "127.0.0.1"
   * Settings for UDP BTP data
   * hostname for sending BTP Data Ind to Shell
   */
  const char * ItsUdpBtpIfHostName;

  /**
   * UpperTesterUdpRxIface default is ""
   *  optional interface to bind to
   */
  const char * UpperTesterUdpRxIface;

  /**
   * Cohda_PersistanceDir default is "/var/persistence"
   * where files are stored to provide persistent data
   */
  const char * Cohda_PersistanceDir;

  /**
   * WBSS_WSA_STATIC_LOCATION_LATITUDE default is -34.0, min/max -90.0/90.0
   * Static location Latitude in degrees upto 7 decimal points.
   */
  double WBSS_WSA_STATIC_LOCATION_LATITUDE;

  /**
   * WBSS_WSA_STATIC_LOCATION_LONGITUDE default is 138.0, min/max -180.0/180.0
   * Static location Longitude in degrees upto 7 decimal points.
   */
  double WBSS_WSA_STATIC_LOCATION_LONGITUDE;

  /**
   * Cohda_GPSRx_FixedLat default is -34.0, min/max -90.0/90.0
   * Position information to use when Fixed Cohda_GPSRx_Source used
   * NOTE: Set Cohda_GPSRx_FixedAlt to valid value for 3D fix or
   * set Cohda_GPSRx_FixedAlt to 10000.0 for 2D fix
   * Position accuracy is expected to be less than 0.01m
   */
  double Cohda_GPSRx_FixedLat;

  /**
   * Cohda_GPSRx_FixedLong default is 138.0, min/max -180.0/180.0
   */
  double Cohda_GPSRx_FixedLong;

  /**
   * ProtocolMode default is -1, min/max -1/15
   ***************************************************************************
   **                    Radio Configuration Items                           *
   ***************************************************************************
   * -1 = The default is deliberately invalid.
   *      You must override this value!
   *      Initialise Dual Stack with ...
   * -  0 = ITS
   * -  1 = 1609
   * -  2 = SAEC
   */
  int32_t ProtocolMode;

  /**
   * EnableTxRx default is 3, min/max 0/3
   * -  0 = Both disabled
   * -  1 = Tx only enabled
   * -  2 = Rx only enabled
   * -  3 = Tx and Rx enabled
   */
  int32_t EnableTxRx;

  /**
   * TxPwrLevel_dBm default is 24, min/max -10/33
   * Valid values: -10 to 33 in increments of 1 dBm
   * Default setting; may be overridden in WSMP requests
   */
  int32_t TxPwrLevel_dBm;

  /**
   * TxDataRate default is 12, min/max 6/54
   * In units of 500 kbit/s (eg 12=6Mbps)
   * Valid values:
   * -   6 =   3Mbps
   * -   9 = 4.5Mbps
   * -  12 =   6Mbps
   * -  18 =   9Mbps
   * -  24 =  12Mbps
   * -  36 =  18Mbps
   * -  48 =  24Mbps
   * -  54 =  28Mbps
   */
  int32_t TxDataRate;

  /**
   * AC_BE_CWminKVal default is 4, min/max 1/10
   * CWmin = 2^4 - 1
   */
  int32_t AC_BE_CWminKVal;

  /**
   * AC_BE_CWmaxKVal default is 10, min/max 1/10
   * CWmax = 2^10 - 1
   */
  int32_t AC_BE_CWmaxKVal;

  /**
   * AC_BE_AIFSN default is 6, min/max 2/15
   */
  int32_t AC_BE_AIFSN;

  /**
   * AC_BK_CWminKVal default is 4, min/max 1/10
   * CWmin = 2^4 - 1
   */
  int32_t AC_BK_CWminKVal;

  /**
   * AC_BK_CWmaxKVal default is 10, min/max 1/10
   * CWmax = 2^10 - 1
   */
  int32_t AC_BK_CWmaxKVal;

  /**
   * AC_BK_AIFSN default is 9, min/max 2/15
   */
  int32_t AC_BK_AIFSN;

  /**
   * AC_VI_CWminKVal default is 4, min/max 1/10
   * CWmin = 2^4 - 1. J2945/1 2016 [6.3.4-V2V-BSMTX-UPEDCA-03]
   */
  int32_t AC_VI_CWminKVal;

  /**
   * AC_VI_CWmaxKVal default is 10, min/max 1/10
   * CWmax = 2^10 - 1
   */
  int32_t AC_VI_CWmaxKVal;

  /**
   * AC_VI_AIFSN default is 4, min/max 2/15
   */
  int32_t AC_VI_AIFSN;

  /**
   * AC_VO_CWminKVal default is 2, min/max 1/10
   * CWmin = 2^2 - 1. J2945/1 2016 [6.3.4-V2V-BSMTX-UPEDCA-03]
   */
  int32_t AC_VO_CWminKVal;

  /**
   * AC_VO_CWmaxKVal default is 3, min/max 1/10
   * CWmax = 2^3 - 1
   */
  int32_t AC_VO_CWmaxKVal;

  /**
   * AC_VO_AIFSN default is 2, min/max 2/15
   */
  int32_t AC_VO_AIFSN;

  /**
   * TxAntenna default is 3, min/max 0/3
   * 1609 Safety channel transmit antenna selection
   * -  0 = Default
   * -  1 = ANT1
   * -  2 = ANT2
   * -  3 = ANT1 + ANT2 (diversity)
   */
  int32_t TxAntenna;

  /**
   * RxAntenna default is 3, min/max 0/3
   * NOTE: In dual-radio use cases actually each radio uses
   * only one antenna (e.g. for ETSI when @ref ItsG5TransceiverConfig = 2)
   * 1609 Safety channel receive antenna selection
   * -  0 = Default
   * -  1 = ANT1
   * -  2 = ANT2
   * -  3 = ANT1 + ANT2 (diversity)
   */
  int32_t RxAntenna;

  /**
   * CSThreshold_dBm default is -65, min/max -95/-65
   * Carrier Sense Threshold
   */
  int32_t CSThreshold_dBm;

  /**
   * CBRThreshold_dBm default is -85, min/max -95/-65
   * Channel Busy Ratio Threshold
   */
  int32_t CBRThreshold_dBm;

  /**
   * CCH_TxPwrLevel_dBm default is 24, min/max -10/33
   * CONTROL CHANNEL (as above)
   */
  int32_t CCH_TxPwrLevel_dBm;

  /**
   * CCH_AC_BE_CWminKVal default is 4, min/max 1/10
   */
  int32_t CCH_AC_BE_CWminKVal;

  /**
   * CCH_AC_BE_CWmaxKVal default is 10, min/max 1/10
   */
  int32_t CCH_AC_BE_CWmaxKVal;

  /**
   * CCH_AC_BE_AIFSN default is 6, min/max 2/15
   */
  int32_t CCH_AC_BE_AIFSN;

  /**
   * CCH_AC_BK_CWminKVal default is 4, min/max 1/10
   */
  int32_t CCH_AC_BK_CWminKVal;

  /**
   * CCH_AC_BK_CWmaxKVal default is 10, min/max 1/10
   */
  int32_t CCH_AC_BK_CWmaxKVal;

  /**
   * CCH_AC_BK_AIFSN default is 9, min/max 2/15
   */
  int32_t CCH_AC_BK_AIFSN;

  /**
   * CCH_AC_VI_CWminKVal default is 3, min/max 1/10
   */
  int32_t CCH_AC_VI_CWminKVal;

  /**
   * CCH_AC_VI_CWmaxKVal default is 4, min/max 1/10
   */
  int32_t CCH_AC_VI_CWmaxKVal;

  /**
   * CCH_AC_VI_AIFSN default is 3, min/max 2/15
   */
  int32_t CCH_AC_VI_AIFSN;

  /**
   * CCH_AC_VO_CWminKVal default is 2, min/max 1/10
   */
  int32_t CCH_AC_VO_CWminKVal;

  /**
   * CCH_AC_VO_CWmaxKVal default is 3, min/max 1/10
   */
  int32_t CCH_AC_VO_CWmaxKVal;

  /**
   * CCH_AC_VO_AIFSN default is 2, min/max 2/15
   */
  int32_t CCH_AC_VO_AIFSN;

  /**
   * CCH_TxAntenna default is 3, min/max 0/3
   * 1609/ETSI Control channel transmit antenna selection @sa TxAntenna
   */
  int32_t CCH_TxAntenna;

  /**
   * CCH_RxAntenna default is 3, min/max 0/3
   * 1609/ETSI Control channel receive antenna selection @sa RxAntenna
   */
  int32_t CCH_RxAntenna;

  /**
   * CCH_DualTxControl default is 3, min/max 0/3
   * Dual Tx Control, as per LLC
   */
  int32_t CCH_DualTxControl;

  /**
   * SCH_TxPwrLevel_dBm default is 24, min/max -10/33
   * SERVICE CHANNEL (as above)
   */
  int32_t SCH_TxPwrLevel_dBm;

  /**
   * SCH_AC_BE_CWminKVal default is 4, min/max 1/10
   */
  int32_t SCH_AC_BE_CWminKVal;

  /**
   * SCH_AC_BE_CWmaxKVal default is 10, min/max 1/10
   */
  int32_t SCH_AC_BE_CWmaxKVal;

  /**
   * SCH_AC_BE_AIFSN default is 6, min/max 2/15
   */
  int32_t SCH_AC_BE_AIFSN;

  /**
   * SCH_AC_BK_CWminKVal default is 4, min/max 1/10
   */
  int32_t SCH_AC_BK_CWminKVal;

  /**
   * SCH_AC_BK_CWmaxKVal default is 10, min/max 1/10
   */
  int32_t SCH_AC_BK_CWmaxKVal;

  /**
   * SCH_AC_BK_AIFSN default is 9, min/max 2/15
   */
  int32_t SCH_AC_BK_AIFSN;

  /**
   * SCH_AC_VI_CWminKVal default is 3, min/max 1/10
   */
  int32_t SCH_AC_VI_CWminKVal;

  /**
   * SCH_AC_VI_CWmaxKVal default is 4, min/max 1/10
   */
  int32_t SCH_AC_VI_CWmaxKVal;

  /**
   * SCH_AC_VI_AIFSN default is 3, min/max 2/15
   */
  int32_t SCH_AC_VI_AIFSN;

  /**
   * SCH_AC_VO_CWminKVal default is 2, min/max 1/10
   */
  int32_t SCH_AC_VO_CWminKVal;

  /**
   * SCH_AC_VO_CWmaxKVal default is 3, min/max 1/10
   */
  int32_t SCH_AC_VO_CWmaxKVal;

  /**
   * SCH_AC_VO_AIFSN default is 2, min/max 2/15
   */
  int32_t SCH_AC_VO_AIFSN;

  /**
   * SCH_TxAntenna default is 3, min/max 0/3
   * 1609/ETSI Service channel transmit antenna selection @sa TxAntenna
   */
  int32_t SCH_TxAntenna;

  /**
   * SCH_RxAntenna default is 3, min/max 0/3
   * 1609/ETSI Service channel receive antenna selection @sa RxAntenna
   */
  int32_t SCH_RxAntenna;

  /**
   * SCH_DualTxControl default is 3, min/max 0/3
   * Dual Tx Control, as per LLC
   */
  int32_t SCH_DualTxControl;

  /**
   * VerificationInterval_s default is 1, min/max 1/60
   ***************************************************************************
   **                 Security Manager Configuration Items                   *
   ***************************************************************************
   * Interval in seconds for verfying security credentials
   */
  int32_t VerificationInterval_s;

  /**
   * VerificationJitter_ms default is 100, min/max 0/1000
   * This is intended to add some jitter to the verity interval such
   * that messages from the same OBE are not always the ones verified.
   */
  int32_t VerificationJitter_ms;

  /**
   * P2PCertPSID default is 0x8008ul, min/max 0x0ul/0xeffffffful
   * PSID for P2P certificate distribution messages
   */
  uint32_t P2PCertPSID;

  /**
   * WSMP_Priority default is 2, min/max 0/7
   * Priority
   */
  int32_t WSMP_Priority;

  /**
   * WSMP_ChannelNumber default is 172, min/max 150/184
   * The radio channel used for the WSM, TCH on R1C
   */
  int32_t WSMP_ChannelNumber;

  /**
   * WSMP_DataRate default is 12, min/max 6/54
   * The data rate used for the WSM.
   */
  int32_t WSMP_DataRate;

  /**
   * WSMP_TxPower default is 24, min/max 0/33
   * The transmit power used for the WSM [dBm] (J2945/1 2016 Table 21)
   */
  int32_t WSMP_TxPower;

  /**
   * WSMP_ExpiryTime default is 0x0ul, min/max 0x0ul/0xfful
   * Expiry Time (I think this is the 1-byte field in Dot3WSMPHdr)
   */
  uint32_t WSMP_ExpiryTime;

  /**
   * WSMP_WAVEElementId default is 0x80ul, min/max 0x80ul/0x81ul
   * The WAVE element ID: WSMP=0x80 or WSMP-S=0x81
   */
  uint32_t WSMP_WAVEElementId;

  /**
   * WSMMaxLength default is 1400, min/max 0/2302
   * The MAX WSM payload length as per 1609.3 standard requirements.
   */
  int32_t WSMMaxLength;

  /**
   * BSMUnsecurePSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID Length: Valid Values
   *   1 byte:  00 - 7F
   *   2 bytes: 8000 - BFFF
   *   3 bytes: C00000 - DFFFFF
   *   4 bytes: E0000000 - EFFFFFFF
   *   DISABLE (0xOFF) to use Cohda_Additional_Secure_PSID_# instead
   */
  uint32_t BSMUnsecurePSID;

  /**
   * BSMSecurePSID default is 0x20ul, min/max 0x0ul/0xeffffffful
   * Same valid values as for BSMUnsecurePSID
   */
  uint32_t BSMSecurePSID;

  /**
   * BSMUserPriorityNoCriticalEvent default is 5, min/max 0/7
   * SAE J2945_1
   * The System shall set the User Priority field defined in 802.11 [2] to 5 for
   * BSMs with no Critical Event Flags.
   * 0, 3 = AC_BE (Best Effort)
   * 1, 2 = AC_BK (Bkgrnd)
   * 4, 5 = AC_VI (Video)
   * 6, 7 = AC_VO (Voice)
   */
  int32_t BSMUserPriorityNoCriticalEvent;

  /**
   * BSMUserPriorityCriticalEvent default is 7, min/max 0/7
   * SAE J2945_1
   * The System shall set the User Priority field defined in 802.11 [2] to 7 for
   * BSMs that include one or more Critical Event Flags.
   * 0, 3 = AC_BE (Best Effort)
   * 1, 2 = AC_BK (Bkgrnd)
   * 4, 5 = AC_VI (Video)
   * 6, 7 = AC_VO (Voice)
   */
  int32_t BSMUserPriorityCriticalEvent;

  /**
   * WSMPSafetySuppData default is 0x1ul, min/max 0x0ul/0x7ffffffful
   * The safety supplement data to be included in the safety supplement fields
   */
  uint32_t WSMPSafetySuppData;

  /**
   * WSMPUDPBypassPort default is 0, min/max 0/65535
   * Remote port number to send / receive WSMP packets UDP to / from
   */
  int32_t WSMPUDPBypassPort;

  /**
   * WSARCPIHysteresisMargin default is 20, min/max 10/200
   * WSA RCPI Hysteresis Margin (in units of 0.5 dB)
   */
  int32_t WSARCPIHysteresisMargin;

  /**
   * WSARouterLifetime default is 60, min/max 0/65535
   */
  int32_t WSARouterLifetime;

  /**
   * WSMP_LLIF default is 1, min/max 0/6
   *  0 = None (interface inactive)
   * -  1 = ETH
   * -  2 = LLC_DSRC (MK5)
   * -  3 = ATK_DSRC
   * -  4 = QTI_CV2X
   * -  5 = ATK_CV2X
   * -  6 = LLC_DSRC_DUAL (MK6)
   */
  int32_t WSMP_LLIF;

  /**
   * WME_TA_RepeatRate default is 50, min/max 0/50
   * Repeat rate of TAs per 5 seconds (0=off, 1=0.2Hz, 5=1Hz, 10=2Hz, 25=5Hz, 50=10Hz)
   */
  int32_t WME_TA_RepeatRate;

  /**
   * ChannelMode default is 0, min/max 0/4
   ***************************************************************************
   **                    1609.4 Configuration Items                          *
   ***************************************************************************
   * -  0 = Continuous Channel
   * -  1 = Chan Switch Alternating Forced
   * -  2 = Chan Switch Alternating Conditional
   * -  3 = Immediate and Extended
   * -  4 = Single radio
   *   To run in single radio mode, the following config items must
   *   all be set to the same channel:
   *       WSMP_ChannelNumber
   *       ContinuousChanNum
   *       ForcedSerChanNum
   *       ForcedControlChanNum
   *   All the WBSS_Service_[X]_PSID should also be disabled (0x0FF)
   */
  int32_t ChannelMode;

  /**
   * ContinuousChanNum default is 172, min/max 1/184
   * Channel number to use when 'ChannelMode' is set to '0'
   *   Even channel number applicable to 10 MHz channels
   *   Odd channel numbers applicable to 20 MHz channels
   */
  int32_t ContinuousChanNum;

  /**
   * ForcedSerChanNum default is 184, min/max 1/184
   * Service channel number to switch to when 'ChannelMode' is set to '1'
   *   Channel 178 invalid
   *   Even channel number applicable to 10 MHz channels
   *   Odd channel numbers applicable to 20 MHz channels
   */
  int32_t ForcedSerChanNum;

  /**
   * ForcedControlChanNum default is 178, min/max 1/184
   * Control Channel number
   */
  int32_t ForcedControlChanNum;

  /**
   * BSMPartITxInterval_ms default is 100, min/max 50/1000
   * BSM Transmit interval
   *   Valid values: 50, 100, 200, 300, ..., 1000 ms
   */
  int32_t BSMPartITxInterval_ms;

  /**
   * BSMPartITxRandOffset_ms default is 0, min/max 0/5
   * BSM Transmit Offset
   *   Valid values: 0 (SAE J3161/1 6.3.8.8), 5 (SAE J2945/1 6.3.3)
   */
  int32_t BSMPartITxRandOffset_ms;

  /**
   * AntAdjX_m default is 0.0, min/max -81.91/81.91
   * GPS X antenna offset in meters, defined according to SAE J670
   *  81.91 = Unavailable
   */
  float AntAdjX_m;

  /**
   * AntAdjY_m default is 0.0, min/max -2.55/2.55
   * GPS Y antenna offset in meters, defined according to SAE J670
   *  2.55 = Unavailable
   */
  float AntAdjY_m;

  /**
   * AntAdjZ_m default is 0.0, min/max -8.191/8.191
   * GPS Z antenna offset in meters, defined according to SAE J670
   *  8.191 = Unavailable
   * -    -1.0 = The GPS antenna is 1m above the road surface
   */
  float AntAdjZ_m;

  /**
   * HeadingLatchSpeed_kph default is 4.0, min/max 0.0/10.0
   * Speed, in kph, below which the heading will be latched.
   * SAE J2945_1 2016 [6.3.6-V2V-BSMTX-DATAACC-022]
   */
  float HeadingLatchSpeed_kph;

  /**
   * HeadingUnlatchSpeed_kph default is 5.0, min/max 0.0/10.0
   * Speed, in kph, above which heading will be unlatched
   * SAE J2945_1 2016 [6.3.6-V2V-BSMTX-DATAACC-023]
   */
  float HeadingUnlatchSpeed_kph;

  /**
   * HeadingLatchHigherSpeed_kph default is 5.04, min/max 0.0/10.0
   * Speed, in kph, below which the heading will be latched if
   * heading confidence is acceptable.
   */
  float HeadingLatchHigherSpeed_kph;

  /**
   * HeadingLatchHeadingConf_deg default is 12.5, min/max 0.0/360.0
   * Heading confidence, in degrees, above which the heading will be latched
   * when speed is below the 'higher' latch speed. If heading confidence is
   * below this value (i.e. worse), heading will only be latched at
   * the 'lower' latch speed.
   */
  float HeadingLatchHeadingConf_deg;

  /**
   * HeadingPersistencyTime_Mins default is 0, min/max 0/10080
   * Configues the number of minutes that persistent heading remains valid
   * -   0 = Disabled
   * -   1 = 1Min
   */
  int32_t HeadingPersistencyTime_Mins;

  /**
   * BSM_BasicVehicleClass default is 255, min/max 0/255
   * Enables/sets the SAE Basic Vehicle Class to be added to BSM Part II
   *  255 : not set (will not be included in BSM)
   *  0-254 : included in BSM, set to that value (J2735 DE_BasicVehicleClass)
   */
  int32_t BSM_BasicVehicleClass;

  /**
   * PcapLogSizeLimit default is 0, min/max 0/2000
   ***************************************************************************
   **                    Logging Configuration Items                         *
   ***************************************************************************
   * Size limit [MB] of pcap logs
   * -   0 = No limit
   */
  int32_t PcapLogSizeLimit;

  /**
   * TxALogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * Tx log data for radio A when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * 0 = no limit
   */
  int32_t TxALogNumFiles;

  /**
   * TxALogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for Tx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t TxALogSizeLimit;

  /**
   * TxALogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for Tx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t TxALogTimeLimit;

  /**
   * TxALogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for Tx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t TxALogRotateTime;

  /**
   * TxBLogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * Tx log data for radio B when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t TxBLogNumFiles;

  /**
   * TxBLogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for Tx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t TxBLogSizeLimit;

  /**
   * TxBLogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for Tx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t TxBLogTimeLimit;

  /**
   * TxBLogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for Tx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t TxBLogRotateTime;

  /**
   * RxALogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * Rx log data for radio A when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t RxALogNumFiles;

  /**
   * RxALogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for Rx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t RxALogSizeLimit;

  /**
   * RxALogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for Rx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t RxALogTimeLimit;

  /**
   * RxALogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for Rx on Radio A
   * -   0 = No limit
   *   1... =
   */
  int32_t RxALogRotateTime;

  /**
   * RxBLogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * Rx log data for radio B when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t RxBLogNumFiles;

  /**
   * RxBLogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for Rx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t RxBLogSizeLimit;

  /**
   * RxBLogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for Rx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t RxBLogTimeLimit;

  /**
   * RxBLogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for Rx on Radio B
   * -   0 = No limit
   *   1... =
   */
  int32_t RxBLogRotateTime;

  /**
   * OTALogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * Tx (over the air) data when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t OTALogNumFiles;

  /**
   * OTALogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for Tx (over the air) data
   * -   0 = No limit
   *   1... =
   */
  int32_t OTALogSizeLimit;

  /**
   * OTALogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for Tx (over the air) data
   * -   0 = No limit
   *   1... =
   */
  int32_t OTALogTimeLimit;

  /**
   * OTALogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for Tx (over the air) data
   * -   0 = No limit
   *   1... =
   */
  int32_t OTALogRotateTime;

  /**
   * SSLLogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * rsyslog data when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t SSLLogNumFiles;

  /**
   * SSLLogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for the rsyslog data
   * -   0 = No limit
   *   1... =
   */
  int32_t SSLLogSizeLimit;

  /**
   * SSLLogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for the rsyslog data
   * -   0 = No limit
   *   1... =
   */
  int32_t SSLLogTimeLimit;

  /**
   * SSLLogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for the rsyslog data
   * -   0 = No limit
   *   1... =
   */
  int32_t SSLLogRotateTime;

  /**
   * GenLogNumFiles default is 0, min/max 0/65535
   * Limit the number of files created by tcpdump for
   * modbus data when rotating to this
   * number - when limit reached, tcpdump will reuse
   * old files by overwriting in a 'rotating' buffer
   * -  0 = no limit
   */
  int32_t GenLogNumFiles;

  /**
   * GenLogSizeLimit default is 0, min/max 0/4000
   * Size limit [MB] of tcpdump log for the modbus data
   * -   0 = No limit
   *   1... =
   */
  int32_t GenLogSizeLimit;

  /**
   * GenLogTimeLimit default is 0, min/max 0/31622400
   * Time limit [s] of tcpdump log for the modbus data
   * -   0 = No limit
   *   1... =
   */
  int32_t GenLogTimeLimit;

  /**
   * GenLogRotateTime default is 0, min/max 0/31622400
   * Time [s] before rotating of tcpdump log for the modbus data
   * -   0 = No limit
   *   1... =
   */
  int32_t GenLogRotateTime;

  /**
   * Cohda_Syslog_DebugLevel default is 7, min/max 1/8
   ***************************************************************************
   **                     Syslog Configuration Items                         *
   ***************************************************************************
   * Syslog level to capture (this and anything below)
   * 1 = Emergency
   * 2 = Alert
   * 3 = Critical
   * 4 = Error
   * 5 = Warning
   * 6 = Notice
   * 7 = Info
   * 8 = Debug
   */
  int32_t Cohda_Syslog_DebugLevel;

  /**
   * Cohda_Syslog_PurgeAge_hours default is 0, min/max 0/65535
   * Maximum age of syslog files before they are eligible
   * for purging in seconds - default of 4 weeks
   * 0 means to never purge
   */
  int32_t Cohda_Syslog_PurgeAge_hours;

  /**
   * WBSS_Service_0_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_0_IPPort;

  /**
   * WBSS_Service_0_Prio default is 31, min/max 0/31
   *
   */
  int32_t WBSS_Service_0_Prio;

  /**
   * WBSS_Service_0_PSID default is 0xeffffffeul, min/max 0x0ul/0xeffffffful
   *PSID valid values
   *   1 byte:  00 - 7F
   *   DISABLED (off): 0FF
   *   2 bytes: 8000 - BFFF
   *   3 bytes: C00000 - DFFFFF
   *   4 bytes: E0000000 - EFFFFFFF#
   */
  uint32_t WBSS_Service_0_PSID;

  /**
   * WBSS_Service_0_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_0_RCPIThr;

  /**
   * WBSS_Service_0_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_0_WSACntThr;

  /**
   * WBSS_Service_0_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_0_WSACntThrI;

  /**
   * WBSS_Service_1_IPPort default is 16092, min/max 0/65535
   */
  int32_t WBSS_Service_1_IPPort;

  /**
   * WBSS_Service_1_Prio default is 31, min/max 0/31
   *
   */
  int32_t WBSS_Service_1_Prio;

  /**
   * WBSS_Service_1_PSID default is 0x23ul, min/max 0x0ul/0xeffffffful
   *
   */
  uint32_t WBSS_Service_1_PSID;

  /**
   * WBSS_Service_1_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_1_RCPIThr;

  /**
   * WBSS_Service_1_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_1_WSACntThr;

  /**
   * WBSS_Service_1_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_1_WSACntThrI;

  /**
   * WBSS_Service_2_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_2_IPPort;

  /**
   * WBSS_Service_2_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_2_Prio;

  /**
   * WBSS_Service_2_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   *
   */
  uint32_t WBSS_Service_2_PSID;

  /**
   * WBSS_Service_2_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_2_RCPIThr;

  /**
   * WBSS_Service_2_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_2_WSACntThr;

  /**
   * WBSS_Service_2_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_2_WSACntThrI;

  /**
   * WBSS_Service_3_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_3_IPPort;

  /**
   * WBSS_Service_3_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_3_Prio;

  /**
   * WBSS_Service_3_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   *
   */
  uint32_t WBSS_Service_3_PSID;

  /**
   * WBSS_Service_3_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_3_RCPIThr;

  /**
   * WBSS_Service_3_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_3_WSACntThr;

  /**
   * WBSS_Service_3_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_3_WSACntThrI;

  /**
   * WBSS_Service_4_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_4_IPPort;

  /**
   * WBSS_Service_4_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_4_Prio;

  /**
   * WBSS_Service_4_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   *
   */
  uint32_t WBSS_Service_4_PSID;

  /**
   * WBSS_Service_4_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_4_RCPIThr;

  /**
   * WBSS_Service_4_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_4_WSACntThr;

  /**
   * WBSS_Service_4_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_4_WSACntThrI;

  /**
   * WBSS_Service_5_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_5_IPPort;

  /**
   * WBSS_Service_5_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_5_Prio;

  /**
   * WBSS_Service_5_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_5_PSID;

  /**
   * WBSS_Service_5_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_5_RCPIThr;

  /**
   * WBSS_Service_5_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_5_WSACntThr;

  /**
   * WBSS_Service_5_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_5_WSACntThrI;

  /**
   * WBSS_Service_6_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_6_IPPort;

  /**
   * WBSS_Service_6_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_6_Prio;

  /**
   * WBSS_Service_6_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_6_PSID;

  /**
   * WBSS_Service_6_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_6_RCPIThr;

  /**
   * WBSS_Service_6_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_6_WSACntThr;

  /**
   * WBSS_Service_6_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_6_WSACntThrI;

  /**
   * WBSS_Service_7_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_7_IPPort;

  /**
   * WBSS_Service_7_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_7_Prio;

  /**
   * WBSS_Service_7_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_7_PSID;

  /**
   * WBSS_Service_7_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_7_RCPIThr;

  /**
   * WBSS_Service_7_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_7_WSACntThr;

  /**
   * WBSS_Service_7_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_7_WSACntThrI;

  /**
   * WBSS_Service_8_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_8_IPPort;

  /**
   * WBSS_Service_8_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_8_Prio;

  /**
   * WBSS_Service_8_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_8_PSID;

  /**
   * WBSS_Service_8_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_8_RCPIThr;

  /**
   * WBSS_Service_8_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_8_WSACntThr;

  /**
   * WBSS_Service_8_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_8_WSACntThrI;

  /**
   * WBSS_Service_9_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_9_IPPort;

  /**
   * WBSS_Service_9_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_9_Prio;

  /**
   * WBSS_Service_9_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_9_PSID;

  /**
   * WBSS_Service_9_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_9_RCPIThr;

  /**
   * WBSS_Service_9_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_9_WSACntThr;

  /**
   * WBSS_Service_9_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_9_WSACntThrI;

  /**
   * WBSS_Service_10_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_10_IPPort;

  /**
   * WBSS_Service_10_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_10_Prio;

  /**
   * WBSS_Service_10_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_10_PSID;

  /**
   * WBSS_Service_10_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_10_RCPIThr;

  /**
   * WBSS_Service_10_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_10_WSACntThr;

  /**
   * WBSS_Service_10_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_10_WSACntThrI;

  /**
   * WBSS_Service_11_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_11_IPPort;

  /**
   * WBSS_Service_11_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_11_Prio;

  /**
   * WBSS_Service_11_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_11_PSID;

  /**
   * WBSS_Service_11_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_11_RCPIThr;

  /**
   * WBSS_Service_11_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_11_WSACntThr;

  /**
   * WBSS_Service_11_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_11_WSACntThrI;

  /**
   * WBSS_Service_12_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_12_IPPort;

  /**
   * WBSS_Service_12_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_12_Prio;

  /**
   * WBSS_Service_12_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_12_PSID;

  /**
   * WBSS_Service_12_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_12_RCPIThr;

  /**
   * WBSS_Service_12_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_12_WSACntThr;

  /**
   * WBSS_Service_12_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_12_WSACntThrI;

  /**
   * WBSS_Service_13_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_13_IPPort;

  /**
   * WBSS_Service_13_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_13_Prio;

  /**
   * WBSS_Service_13_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_13_PSID;

  /**
   * WBSS_Service_13_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_13_RCPIThr;

  /**
   * WBSS_Service_13_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_13_WSACntThr;

  /**
   * WBSS_Service_13_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_13_WSACntThrI;

  /**
   * WBSS_Service_14_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_14_IPPort;

  /**
   * WBSS_Service_14_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_14_Prio;

  /**
   * WBSS_Service_14_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_14_PSID;

  /**
   * WBSS_Service_14_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_14_RCPIThr;

  /**
   * WBSS_Service_14_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_14_WSACntThr;

  /**
   * WBSS_Service_14_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_14_WSACntThrI;

  /**
   * WBSS_Service_15_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_15_IPPort;

  /**
   * WBSS_Service_15_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_15_Prio;

  /**
   * WBSS_Service_15_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_15_PSID;

  /**
   * WBSS_Service_15_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_15_RCPIThr;

  /**
   * WBSS_Service_15_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_15_WSACntThr;

  /**
   * WBSS_Service_15_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_15_WSACntThrI;

  /**
   * WBSS_Service_16_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_16_IPPort;

  /**
   * WBSS_Service_16_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_16_Prio;

  /**
   * WBSS_Service_16_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_16_PSID;

  /**
   * WBSS_Service_16_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_16_RCPIThr;

  /**
   * WBSS_Service_16_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_16_WSACntThr;

  /**
   * WBSS_Service_16_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_16_WSACntThrI;

  /**
   * WBSS_Service_17_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_17_IPPort;

  /**
   * WBSS_Service_17_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_17_Prio;

  /**
   * WBSS_Service_17_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_17_PSID;

  /**
   * WBSS_Service_17_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_17_RCPIThr;

  /**
   * WBSS_Service_17_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_17_WSACntThr;

  /**
   * WBSS_Service_17_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_17_WSACntThrI;

  /**
   * WBSS_Service_18_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_18_IPPort;

  /**
   * WBSS_Service_18_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_18_Prio;

  /**
   * WBSS_Service_18_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_18_PSID;

  /**
   * WBSS_Service_18_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_18_RCPIThr;

  /**
   * WBSS_Service_18_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_18_WSACntThr;

  /**
   * WBSS_Service_18_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_18_WSACntThrI;

  /**
   * WBSS_Service_19_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_19_IPPort;

  /**
   * WBSS_Service_19_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_19_Prio;

  /**
   * WBSS_Service_19_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_19_PSID;

  /**
   * WBSS_Service_19_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_19_RCPIThr;

  /**
   * WBSS_Service_19_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_19_WSACntThr;

  /**
   * WBSS_Service_19_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_19_WSACntThrI;

  /**
   * WBSS_Service_20_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_20_IPPort;

  /**
   * WBSS_Service_20_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_20_Prio;

  /**
   * WBSS_Service_20_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_20_PSID;

  /**
   * WBSS_Service_20_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_20_RCPIThr;

  /**
   * WBSS_Service_20_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_20_WSACntThr;

  /**
   * WBSS_Service_20_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_20_WSACntThrI;

  /**
   * WBSS_Service_21_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_21_IPPort;

  /**
   * WBSS_Service_21_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_21_Prio;

  /**
   * WBSS_Service_21_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_21_PSID;

  /**
   * WBSS_Service_21_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_21_RCPIThr;

  /**
   * WBSS_Service_21_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_21_WSACntThr;

  /**
   * WBSS_Service_21_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_21_WSACntThrI;

  /**
   * WBSS_Service_22_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_22_IPPort;

  /**
   * WBSS_Service_22_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_22_Prio;

  /**
   * WBSS_Service_22_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_22_PSID;

  /**
   * WBSS_Service_22_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_22_RCPIThr;

  /**
   * WBSS_Service_22_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_22_WSACntThr;

  /**
   * WBSS_Service_22_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_22_WSACntThrI;

  /**
   * WBSS_Service_23_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_23_IPPort;

  /**
   * WBSS_Service_23_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_23_Prio;

  /**
   * WBSS_Service_23_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_23_PSID;

  /**
   * WBSS_Service_23_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_23_RCPIThr;

  /**
   * WBSS_Service_23_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_23_WSACntThr;

  /**
   * WBSS_Service_23_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_23_WSACntThrI;

  /**
   * WBSS_Service_24_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_24_IPPort;

  /**
   * WBSS_Service_24_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_24_Prio;

  /**
   * WBSS_Service_24_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_24_PSID;

  /**
   * WBSS_Service_24_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_24_RCPIThr;

  /**
   * WBSS_Service_24_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_24_WSACntThr;

  /**
   * WBSS_Service_24_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_24_WSACntThrI;

  /**
   * WBSS_Service_25_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_25_IPPort;

  /**
   * WBSS_Service_25_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_25_Prio;

  /**
   * WBSS_Service_25_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_25_PSID;

  /**
   * WBSS_Service_25_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_25_RCPIThr;

  /**
   * WBSS_Service_25_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_25_WSACntThr;

  /**
   * WBSS_Service_25_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_25_WSACntThrI;

  /**
   * WBSS_Service_26_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_26_IPPort;

  /**
   * WBSS_Service_26_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_26_Prio;

  /**
   * WBSS_Service_26_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_26_PSID;

  /**
   * WBSS_Service_26_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_26_RCPIThr;

  /**
   * WBSS_Service_26_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_26_WSACntThr;

  /**
   * WBSS_Service_26_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_26_WSACntThrI;

  /**
   * WBSS_Service_27_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_27_IPPort;

  /**
   * WBSS_Service_27_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_27_Prio;

  /**
   * WBSS_Service_27_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_27_PSID;

  /**
   * WBSS_Service_27_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_27_RCPIThr;

  /**
   * WBSS_Service_27_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_27_WSACntThr;

  /**
   * WBSS_Service_27_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_27_WSACntThrI;

  /**
   * WBSS_Service_28_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_28_IPPort;

  /**
   * WBSS_Service_28_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_28_Prio;

  /**
   * WBSS_Service_28_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_28_PSID;

  /**
   * WBSS_Service_28_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_28_RCPIThr;

  /**
   * WBSS_Service_28_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_28_WSACntThr;

  /**
   * WBSS_Service_28_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_28_WSACntThrI;

  /**
   * WBSS_Service_29_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_29_IPPort;

  /**
   * WBSS_Service_29_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_29_Prio;

  /**
   * WBSS_Service_29_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_29_PSID;

  /**
   * WBSS_Service_29_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_29_RCPIThr;

  /**
   * WBSS_Service_29_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_29_WSACntThr;

  /**
   * WBSS_Service_29_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_29_WSACntThrI;

  /**
   * WBSS_Service_30_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_30_IPPort;

  /**
   * WBSS_Service_30_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_30_Prio;

  /**
   * WBSS_Service_30_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_30_PSID;

  /**
   * WBSS_Service_30_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_30_RCPIThr;

  /**
   * WBSS_Service_30_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_30_WSACntThr;

  /**
   * WBSS_Service_30_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_30_WSACntThrI;

  /**
   * WBSS_Service_31_IPPort default is 0, min/max 0/65535
   */
  int32_t WBSS_Service_31_IPPort;

  /**
   * WBSS_Service_31_Prio default is 0, min/max 0/31
   *
   */
  int32_t WBSS_Service_31_Prio;

  /**
   * WBSS_Service_31_PSID default is 0xfful, min/max 0x0ul/0xeffffffful
   * Use 0x0FF to disable service
   */
  uint32_t WBSS_Service_31_PSID;

  /**
   * WBSS_Service_31_RCPIThr default is 255, min/max 0/255
   * 0-220 = valid, 255 = unavailable
   */
  int32_t WBSS_Service_31_RCPIThr;

  /**
   * WBSS_Service_31_WSACntThr default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid count
   */
  int32_t WBSS_Service_31_WSACntThr;

  /**
   * WBSS_Service_31_WSACntThrI default is 0, min/max 0/255
   * 0 = not set, 1-255 = valid [100ms units]
   */
  int32_t WBSS_Service_31_WSACntThrI;

  /**
   * WBSS_WSA_Verify_Override default is 0, min/max -1/1
   * -1 = Fail, 0 = No override, 1 = Pass
   */
  int32_t WBSS_WSA_Verify_Override;

  /**
   * WBSS_Event_Hook_Script_PSID_Filter default is 0xfful, min/max 0x0ul/0xeffffffful
   * Only call hook script for this PSID
   * Use 0x0FF to disable filter (call for any)
   */
  uint32_t WBSS_Event_Hook_Script_PSID_Filter;

  /**
   * WBSS_WSA_OverridePrefixLength default is 52, min/max 0/128
   */
  int32_t WBSS_WSA_OverridePrefixLength;

  /**
   * WBSS_WSA_Validity_s default is 60, min/max 1/3600
   * Validity time of WSAs in seconds - 1 second to 1 hour
   */
  int32_t WBSS_WSA_Validity_s;

  /**
   * WBSS_ChannelInactivityTimeout_ms default is 5000, min/max 1/60000
   * Disconnect from WBSS if channel is idle for this amount of time (milliseconds)
   */
  int32_t WBSS_ChannelInactivityTimeout_ms;

  /**
   * WBSS_WSA_RepeatRate default is 50, min/max 0/255
   * Repeat rate of WSAs per 5 seconds
   * (0=off, 1=0.2Hz, 5=1Hz, 10=2Hz, 25=5Hz, 50=10Hz)
   */
  int32_t WBSS_WSA_RepeatRate;

  /**
   * WBSS_WSA_STATIC_LOCATION_ELEVATION default is 1.0, min/max -400.0/6000.0
   * Static location elevation in metres upto 1 decimal point.
   */
  float WBSS_WSA_STATIC_LOCATION_ELEVATION;

  /**
   * TxDataSource default is 4, min/max 1/5
   ***************************************************************************
   **                   Data Source Configuration Items                      *
   ***************************************************************************
   * -  1 = Live Data (Vehicle data from CAN, position from GPS)
   * -  2 = Replay (Test Mode, data from Prerecorded Files)
   * -  3 = UDP (Test Mode, data over UDP)
   * -  4 = GPS Only (Test Mode, Vehicle data faked based on GPS data)
   * -  5 = Hybrid (Test Mode)
   */
  int32_t TxDataSource;

  /**
   * Cohda_ReplayFileEOF default is 0, min/max 0/5
   * How to handle replay file EndOfFile
   * -  0 = Close (close replay file)
   * -  1 = Loop (loop replay file)
   * Act when the first of the replay files ends:
   * -  2 = Shutdown (shut down application)
   * -  3 = Kill (kill(SIGTERM))
   * Act when the last of the replay files ends:
   * -  4 = ShutdownLast (shut down application)
   * -  5 = KillLast (kill(SIGTERM))
   */
  int32_t Cohda_ReplayFileEOF;

  /**
   * Cohda_ReplayFileLoopDelay_ms default is 100, min/max 50/1000
   * Delay in ms between transmitting the last record from a
   * pre-recorded file and the first record of the pre-recorded
   * file when repeat is enabled.
   */
  int32_t Cohda_ReplayFileLoopDelay_ms;

  /**
   * TxNoPosAvailable default is 0, min/max 0/2
   * Configures transmit behaviour when position is not set/inaccurate
   * 0 = Tx only when position mode is good and position accuracy satisfies TxPosAccuracyLimit (or ItsGnPaiInterval if set)
   * 1 = Tx when position mode is any (e.g. even when NO_FIX)
   * 2 = Tx only when position mode is OK (e.g. 2D or 3D FIX)
   */
  int32_t TxNoPosAvailable;

  /**
   * TxPosAccuracyLimit default is 0, min/max 0/1000
   * Position Accuracy Determination (95% interval)
   * TxPosAccuracyLimit also sets ItsGnPaiInterval, when ItsGnPaiInterval = -1
   * metres (zero means check is disabled)
   */
  int32_t TxPosAccuracyLimit;

  /**
   * WSMFwdRx_0_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_0_DestPort;

  /**
   * WSMFwdRx_0_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_0_TransportProto;

  /**
   * WSMFwdRx_0_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_0_PSID;

  /**
   * WSMFwdRx_0_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_0_RSSI;

  /**
   * WSMFwdRx_0_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_0_MsgSample;

  /**
   * WSMFwdRx_1_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_1_DestPort;

  /**
   * WSMFwdRx_1_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_1_TransportProto;

  /**
   * WSMFwdRx_1_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_1_PSID;

  /**
   * WSMFwdRx_1_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_1_RSSI;

  /**
   * WSMFwdRx_1_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_1_MsgSample;

  /**
   * WSMFwdRx_2_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_2_DestPort;

  /**
   * WSMFwdRx_2_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_2_TransportProto;

  /**
   * WSMFwdRx_2_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_2_PSID;

  /**
   * WSMFwdRx_2_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_2_RSSI;

  /**
   * WSMFwdRx_2_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_2_MsgSample;

  /**
   * WSMFwdRx_3_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_3_TransportProto;

  /**
   * WSMFwdRx_3_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_3_DestPort;

  /**
   * WSMFwdRx_3_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_3_PSID;

  /**
   * WSMFwdRx_3_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_3_RSSI;

  /**
   * WSMFwdRx_3_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_3_MsgSample;

  /**
   * WSMFwdRx_4_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_4_DestPort;

  /**
   * WSMFwdRx_4_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_4_TransportProto;

  /**
   * WSMFwdRx_4_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_4_PSID;

  /**
   * WSMFwdRx_4_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_4_RSSI;

  /**
   * WSMFwdRx_4_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_4_MsgSample;

  /**
   * WSMFwdRx_5_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_5_DestPort;

  /**
   * WSMFwdRx_5_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_5_TransportProto;

  /**
   * WSMFwdRx_5_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_5_PSID;

  /**
   * WSMFwdRx_5_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_5_RSSI;

  /**
   * WSMFwdRx_5_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_5_MsgSample;

  /**
   * WSMFwdRx_6_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_6_DestPort;

  /**
   * WSMFwdRx_6_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_6_TransportProto;

  /**
   * WSMFwdRx_6_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_6_PSID;

  /**
   * WSMFwdRx_6_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_6_RSSI;

  /**
   * WSMFwdRx_6_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_6_MsgSample;

  /**
   * WSMFwdRx_7_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_7_DestPort;

  /**
   * WSMFwdRx_7_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_7_TransportProto;

  /**
   * WSMFwdRx_7_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_7_PSID;

  /**
   * WSMFwdRx_7_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_7_RSSI;

  /**
   * WSMFwdRx_7_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_7_MsgSample;

  /**
   * WSMFwdRx_8_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_8_DestPort;

  /**
   * WSMFwdRx_8_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_8_TransportProto;

  /**
   * WSMFwdRx_8_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_8_PSID;

  /**
   * WSMFwdRx_8_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_8_RSSI;

  /**
   * WSMFwdRx_8_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_8_MsgSample;

  /**
   * WSMFwdRx_9_DestPort default is 0, min/max 0/65535
   * UDP port to forward recevied WSM OTA packets
   * 0 means disabled
   */
  int32_t WSMFwdRx_9_DestPort;

  /**
   * WSMFwdRx_9_TransportProto default is 0x10ul, min/max 0x1ul/0x10ul
   * Transport protocol to used
   * 0x01 means TCP, 0x10 means UDP
   */
  uint32_t WSMFwdRx_9_TransportProto;

  /**
   * WSMFwdRx_9_PSID default is 0x0ul, min/max 0x0ul/0xeffffffful
   * PSID filter for messages to be forwarded
   * 0x00 means all PSIDs
   */
  uint32_t WSMFwdRx_9_PSID;

  /**
   * WSMFwdRx_9_RSSI default is -100, min/max -100/-60
   * RSSI filter for messages to be forwarded (dBm)
   * -100 means all received messages
   */
  int32_t WSMFwdRx_9_RSSI;

  /**
   * WSMFwdRx_9_MsgSample default is 1, min/max 1/9
   * Sample rate of received messages
   * 1 = forward all received messages,
   * 9 = forwarded every 9th message
   */
  int32_t WSMFwdRx_9_MsgSample;

  /**
   * Cohda_DebugLevel default is 4, min/max 0/256
   * -    0 = EMERG
   * -    1 = ALERT
   * -    2 = CRIT
   * -    3 = ERR
   * -    4 = WARN
   * -    5 = NOTICE
   * -    6 = API
   * -    6 = INFO
   * -    7 = DEBUG
   * -    7 = INTERN (usually)
   * -    8 = TEST
   * -    9 = VERBOSE
   * -  127 = IRQ
   * -  255 = ALL
   * -  256 = No change (if debug available)
   */
  int32_t Cohda_DebugLevel;

  /**
   * Cohda_DebugTimeLevel default is 2, min/max 0/2
   * -    0 = None
   * -    1 = UnixTime
   * -    2 = UTCTime
   */
  int32_t Cohda_DebugTimeLevel;

  /**
   * Cohda_DebugExtraTimeLevel default is 0, min/max 0/7
   * -    0 = None
   * -    1 = UnixTime
   * -    2 = StartDeltaTime
   * -    3 = UTCTime
   * -    4 = MonotonicTime
   * -    5 = ITSTime
   * -    6 = ReplayUnixTime
   * -    7 = ReplayUTCTime
   */
  int32_t Cohda_DebugExtraTimeLevel;

  /**
   * Cohda_DebugInfoLevel default is 0, min/max 0/2
   * -    0 = None
   * -    1 = Level
   * -    2 = ModuleLevel
   */
  int32_t Cohda_DebugInfoLevel;

  /**
   * Cohda_DebugDumpLevel default is 2, min/max 0/2
   * -    0 = None
   * -    1 = Normal
   * -    2 = Wide
   */
  int32_t Cohda_DebugDumpLevel;

  /**
   * Cohda_DebugXER default is 0, min/max 0/3
   * -  0x00=None
   * -  0x01=Decode Tx
   * -  0x02=Decode Rx
   * -  0x03=Decode All
   */
  int32_t Cohda_DebugXER;

  /**
   * Cohda_DebugGSER default is 0, min/max 0/3
   * -  0x00=None
   * -  0x01=Decode Tx
   * -  0x02=Decode Rx
   * -  0x03=Decode All
   */
  int32_t Cohda_DebugGSER;

  /**
   * Cohda_DebugConsole default is 1, min/max 0/2
   * -  0=None
   * -  1=System Status
   * -  2=Packet Status
   */
  int32_t Cohda_DebugConsole;

  /**
   * Cohda_DebugThreads default is 0, min/max 0/2
   * 0=Normal thread start, 1=Threads started from main, 2=Normal, timestamps debug
   */
  int32_t Cohda_DebugThreads;

  /**
   * PktDebugDumpLevel default is 0, min/max 0/3
   * Packet Buffer contents dump on free
   * -  0=None
   * -  1=Payload
   * -  2=Header
   * -  3=Descriptor
   */
  int32_t PktDebugDumpLevel;

  /**
   * PktDebugDropLevel default is 0, min/max 0/3
   * Additional stack packet debug (Rx path)
   * 1 = error, 2 += unusual, 3 += normal
   */
  int32_t PktDebugDropLevel;

  /**
   * PktDebugSendLevel default is 0, min/max 0/3
   * 1 = between layer, 2 += internal
   */
  int32_t PktDebugSendLevel;

  /**
   * PktDebugLocTLevel default is 0, min/max 0/3
   * Additional stack storage debug (Rx path)
   * 1 = periodic, 2 += add/remove, 3 += update
   */
  int32_t PktDebugLocTLevel;

  /**
   * PktDebugFacCacheLevel default is 0, min/max 0/3
   */
  int32_t PktDebugFacCacheLevel;

  /**
   * PktDebugLDMLevel default is 0, min/max 0/3
   */
  int32_t PktDebugLDMLevel;

  /**
   * PktDebugAppLevel default is 0, min/max 0/3
   * Additional stack app debug
   * 1 = error, 2 += unusual, 3 += normal
   */
  int32_t PktDebugAppLevel;

  /**
   * PktDebugFailAction default is 7, min/max 0/7
   * Additional stack packet fail actions (e.g. on buffer overrun)
   * -  0 = nothing
   * -  1 = log
   * -  2 = backtrace
   * -  4 = abort
   */
  int32_t PktDebugFailAction;

  /**
   * Cohda_UDPUserDebugPort default is 42260, min/max 0/65535
   */
  int32_t Cohda_UDPUserDebugPort;

  /**
   * Cohda_UDPUserDebugMv6_HopLimit default is 5, min/max 0/255
   */
  int32_t Cohda_UDPUserDebugMv6_HopLimit;

  /**
   * Cohda_TransmitDelay_s default is 0, min/max -9999/9999
   * Delay after application start for
   * transmit thread to delay TX
   */
  int32_t Cohda_TransmitDelay_s;

  /**
   * Cohda_LogPollingInterval default is 300, min/max 0/86400
   * Log directory polling interval in seconds (0 = disable)
   * Checks periodically the free space and clears old log files
   */
  int32_t Cohda_LogPollingInterval;

  /**
   * Cohda_LogMinimumFreeSpace_pc default is 25, min/max 0/100
   * Minimum free space percentage to maintain on log file system (as percentage)
   */
  int32_t Cohda_LogMinimumFreeSpace_pc;

  /**
   * Cohda_LogCleanupLevel default is 1, min/max 0/3
   * Level of cleanup, 0=none, 1=old log dirs, 2 += current PCAPs, 3+= current logs
   */
  int32_t Cohda_LogCleanupLevel;

  /**
   * Cohda_LogBufferSize default is -1, min/max -1/2048
   * setvbuf() buffer depth [kilobytes] (-1:default, 0:unbuffered, 1..2MB)
   */
  int32_t Cohda_LogBufferSize;

  /**
   * Cohda_LogCaptureSTDOUT default is 0, min/max 0/2000
   * 0=False, 1=True
   * redirect STDOUT to Cohda_LogDirectoryName/stdout
   * > 1 = maximum capture size in MB
   */
  int32_t Cohda_LogCaptureSTDOUT;

  /**
   * Cohda_LogCaptureSTDOUT_Port default is 60501, min/max 0/65535
   * UDP port to redirect STDOUT to (0 to disable)
   */
  int32_t Cohda_LogCaptureSTDOUT_Port;

  /**
   * Cohda_LogCaptureSTDERR default is 1, min/max 0/2000
   * 0=False, 1=True
   * redirect STDERR to Cohda_LogDirectoryName/stderr
   * > 1 = maximum capture size in MB
   */
  int32_t Cohda_LogCaptureSTDERR;

  /**
   * Cohda_LogCaptureSTDERR_Port default is 60500, min/max 0/65535
   * UDP port to redirect STDERR to (0 to disable)
   */
  int32_t Cohda_LogCaptureSTDERR_Port;

  /**
   * Cohda_LogCaptureConf default is 1, min/max 0/2
   * capture configuration
   * -  0 = None
   * -  1 = All
   * -  2 = Minimal
   */
  int32_t Cohda_LogCaptureConf;

  /**
   * Cohda_LogCaptureSTDERR_Mv6_HopLimit default is 5, min/max 0/255
   * Additional parameters needed when redirecting stderr/stdout over IPv6 multicast
   */
  int32_t Cohda_LogCaptureSTDERR_Mv6_HopLimit;

  /**
   * Cohda_LogCaptureSTDOUT_Mv6_HopLimit default is 5, min/max 0/255
   */
  int32_t Cohda_LogCaptureSTDOUT_Mv6_HopLimit;

  /**
   * Cohda_ReplayFakeVerification default is 0, min/max 0/2
   * Mechanism to take information from binary log files (rather than interface)
   * 0=normal
   * 1=fake verification by verifying last tx message
   * 2=skip verification altogether
   */
  int32_t Cohda_ReplayFakeVerification;

  /**
   * Cohda_G5SimulatedStations default is 0, min/max 0/100
   * Number of stations to simulate (Testing only)
   */
  int32_t Cohda_G5SimulatedStations;

  /**
   * Cohda_ReplayDelayModulo default is 60, min/max 0/900
   * pcap replays start at a multiple of this time.
   * intended to allow synchronising multiple MKxs
   * 0 to disable
   */
  int32_t Cohda_ReplayDelayModulo;

  /**
   * Cohda_ReplayDelay default is 0, min/max 0/60
   * pcap replays start after an extra delay of this time.
   * intended to shift time of replay mode
   * 0 to disable
   */
  int32_t Cohda_ReplayDelay;

  /**
   * Cohda_ReplayLongOffset default is 0.0, min/max -360.0/360.0
   * longitudinal offset to apply to GPS pcap data to allow
   * concurrent testing on the same RF channel
   */
  float Cohda_ReplayLongOffset;

  /**
   * Cohda_STATSPollingInterval_ms default is 0, min/max 0/60000
   * Polling interval for STATS thread in milliseconds (0 to disable)
   */
  int32_t Cohda_STATSPollingInterval_ms;

  /**
   * Cohda_STATSSysinfoLogInterval default is 5, min/max 0/10000
   * Add sysinfo(2) information to STATS log every N'th packet (0 to disable)
   */
  int32_t Cohda_STATSSysinfoLogInterval;

  /**
   * Cohda_CONFPollingInterval_s default is -1, min/max -1/788400000
   * Polling interval for CONF thread in seconds
   * (0 for signals only, -1 to disable )
   */
  int32_t Cohda_CONFPollingInterval_s;

  /**
   * Cohda_GPSRx_Source default is 1, min/max 0/6
   * GPS data source
   * -  0 = None
   * -  1 = GPSD (see Cohda_GPSD_XXXX params for GPSD source)
   * -  2 = Fake (see Cohda_GPSRx_Fake_Speed & Cohda_GPSRx_Sys_Time params)
   * -  3 = Replay (see Cohda_GPSReplayFileName)
   * -  4 = Fixed (see Cohda_GPSRx_FixedXXX params)
   * -  5 = QTI Kinematics (see Cohda_GPSx_QTIXXX params)
   * -  6 = ATK POTI (see Cohda_GPSx_ATKXXX params)
   */
  int32_t Cohda_GPSRx_Source;

  /**
   * Cohda_GPSD_Port default is 2947, min/max 1/65535
   * port number of instance of GPSD to connect to
   */
  int32_t Cohda_GPSD_Port;

  /**
   * Cohda_GPSD_Watch default is -1, min/max -1/1
   * -1 = Auto detect
   * 0 = NMEA - Read gps_data_t from gpsd
   * 1 = UBX  - Read raw UBX output from gpsd
   */
  int32_t Cohda_GPSD_Watch;

  /**
   * Cohda_GPSThreshold_mode default is 3, min/max -1/3
   * Mode Threshold for considering position valid
   * 3 = LPH_POS_FIX_MODE_3D
   */
  int32_t Cohda_GPSThreshold_mode;

  /**
   * Cohda_GPSRx_Fake_Speed default is 10, min/max -100/100
   * Speed around circle (+ Clockwise)
   */
  int32_t Cohda_GPSRx_Fake_Speed;

  /**
   * Cohda_GPSRx_FixedAlt default is 5.0, min/max -1000.0/10000.0
   */
  float Cohda_GPSRx_FixedAlt;

  /**
   * Cohda_GPSRx_QTIReportRate default is 10, min/max 1/10
   * QTI GNSS fix generation rate in Hz
   */
  int32_t Cohda_GPSRx_QTIReportRate;

  /**
   * Cohda_GPSRx_max_bad_times default is -1, min/max -1/86400
   * Number of successive bad position times that will cause a shutdown
   * NOTE: check is run once per second
   *  1..n to shutdown after this many bad position times
   *  0 to disable check
   * -1 to warn but not shutdown
   * USE WITH CAUTION!
   */
  int32_t Cohda_GPSRx_max_bad_times;

  /**
   * Cohda_GPSRx_min_diff default is -0.01, min/max -2.0/1.0
   * Minimum allowable difference that system time when GNSS message
   * is processed can be ahead of timestamp in GNSS message
   * Allows for fast GNSS processing and serial comms of message
   * 0 to disable check
   * (NOTE: on simulation platforms processing time can be very fast)
   */
  float Cohda_GPSRx_min_diff;

  /**
   * Cohda_GPSRx_max_diff default is 0.25, min/max 0.0/2.0
   * Maximum allowable difference that system time when GNSS message
   * is processed can be ahead of timestamp in GNSS message
   * Allows for slow GNSS processing and serial comms of message
   * 0 to disable check
   */
  float Cohda_GPSRx_max_diff;

  /**
   * Cohda_GPSRx_max_bad_pos default is 2, min/max 0/10
   * Number of consecutive bad fix modes that will be ignored before
   * the fix is processed. E.g. occasionally GPSD reports a single
   * bad position
   * 0 to disable check
   */
  int32_t Cohda_GPSRx_max_bad_pos;

  /**
   * Cohda_LPH_TAI_Offset default is 5, min/max -30/255
   * TAI offset from UTC (2004 epoch), 255=ignore
   */
  int32_t Cohda_LPH_TAI_Offset;

  /**
   * Cohda_BrakesActiveAccelThreshold_mps2 default is -2.0, min/max -999.0/0.0
   * Brakes active
   */
  float Cohda_BrakesActiveAccelThreshold_mps2;

  /**
   * Cohda_HeavyBrakeAccelThreshold_mps2 default is -4.0, min/max -999.0/0.0
   * Heavy Brake Trigger
   */
  float Cohda_HeavyBrakeAccelThreshold_mps2;

  /**
   * Cohda_HeavyBrakeMinSpeedThreshold_mps default is 4.17, min/max 0.0/999.0
   * Use 4.17 as 15kmph limit
   */
  float Cohda_HeavyBrakeMinSpeedThreshold_mps;

  /**
   * Cohda_HeavyBrakeLonAccClipHigh_mps2 default is -10.0, min/max -999.0/0.0
   * Set this <0. Expect max of 1g in dir of travel
   * (otherwise assume gps error)
   */
  float Cohda_HeavyBrakeLonAccClipHigh_mps2;

  /**
   * Cohda_HeavyBrakeLatAccClipHigh_mps2 default is 3.0, min/max -3.0/3.0
   * Set this >0 (Abs value). Only allow +/- 0.3g orthogonal
   * (otherwise assume gps error)
   */
  float Cohda_HeavyBrakeLatAccClipHigh_mps2;

  /**
   * Cohda_ForceSchedulerPolicy default is -1, min/max -1/2
   * -1 = allow threads to pick their own shceduler policy
   * -   0 = SCHED_OTHER (no priorities)
   * -   1 = SCHED_FIFO  (strict)
   * -   2 = SCHED_RR    (FIFO + timeslice limits)
   */
  int32_t Cohda_ForceSchedulerPolicy;

  /**
   * Cohda_P1609_RxBufMax default is 1408, min/max 0/65535
   * Buffer sizes (for things like DSRC radar)
   * Maximum WSMP Rx buffer size (including trailers)
   */
  int32_t Cohda_P1609_RxBufMax;

  /**
   * Cohda_P1609_TxBufMin default is 0, min/max 0/2500
   * Minimum WSMP Tx buffers size
   */
  int32_t Cohda_P1609_TxBufMin;

  /**
   * Cohda_P1609_TxBufMax default is 1500, min/max 0/65535
   * TX Buffer size for secuirty
   * Maximum WSMP Tx buffer size (including security)
   */
  int32_t Cohda_P1609_TxBufMax;

  /**
   * Cohda_KUC_Mode default is 0, min/max 0/7
   * Kennecott Utah Copper Mine Trial module
   *    0 none
   *   1  emergency response
   *  2   speed based HLW & SVA
   * 4    TBC
   */
  int32_t Cohda_KUC_Mode;

  /**
   * Cohda_PTP_Mode default is 0, min/max 0/3
   * IEEE 1588 operating mode (using ptp4l)
   * 0: none
   * 1: RSU (eth0 only)
   * 2: RSU (eth0 and wave-data)
   * 3: OBU slave (wave-data only)
   */
  int32_t Cohda_PTP_Mode;

  /**
   * ModelDeploymentDeviceID default is 0x0ul, min/max 0x0ul/0xfffful
   * Model Deployment Device ID
   * Set by the Test Conductor at time of device installation.
   * Unprogrammed ID value = 0
   * Programmed ID value range: 0x0001 to 0xffff
   */
  uint32_t ModelDeploymentDeviceID;

  /**
   * antOffsetX default is 0, min/max -8191/8191
   * KILL THIS?
   * UMTRI's overide using /mnt/src/ModelDeploymentRemovable.conf
   * GPS Antenna Offset Values
   * Units follow J2375 definition for antenna offsets.
   * The offset value should be added to the value derived from the GPS
   * receiver to give the desired position value.
   * Units 0.01 meters (centimeters)
   */
  int32_t antOffsetX;

  /**
   * antOffsetY default is 0, min/max -255/255
   */
  int32_t antOffsetY;

  /**
   * antOffsetZ default is 0.0, min/max -819.1/819.1
   */
  float antOffsetZ;

  /**
   * Cohda_Crypto_Config_Check default is 0, min/max 0/2
   * Config check
   * -  0 = None
   * -  1 = Check
   * -  2 = Fix
   */
  int32_t Cohda_Crypto_Config_Check;

  /**
   * Cohda_Crypto_TestCountryCode default is 0, min/max 0/999
   * Test country code for identified region
   * see https://unstats.un.org/unsd/methodology/m49/
   * -  0 = use position
   * -  36 = australia
   * -  156 = china
   * -  276 = germany
   * -  840 = usa
   */
  int32_t Cohda_Crypto_TestCountryCode;

  /**
   * Cohda_Crypto_Verify_Policy default is 0, min/max 0/2
   * Receive packet verification policy
   * Verifying all packets adds significant processing load in busy situations
   * Smart verification rules are still being developed
   * On-demand, only verify a packet if and when it causes an HMI alert
   * -  0 = All
   * -  1 = Smart
   * -  2 = OnDemand
   */
  int32_t Cohda_Crypto_Verify_Policy;

  /**
   * Cohda_Crypto_Verify_Stats default is 0, min/max 0/2
   * Verification stats collection
   * -  0 = NoCollection
   * -  1 = Basic
   * -  2 = Detailed
   */
  int32_t Cohda_Crypto_Verify_Stats;

  /**
   * Cohda_Crypto_InitSelfTest default is 0, min/max 0/2
   * Perform a self test of sign & verify with Aerolink configuration
   * on dummy data. Will terminate ITS NET initialisation on failure
   * -  0 = None
   * -  1 = SignVerify
   * -  2 = EncryptDecryptSV
   */
  int32_t Cohda_Crypto_InitSelfTest;

  /**
   * Cohda_Crypto_SSPBSM default is 0x0ul, min/max 0x0ul/0xfful
   * bit-wise-OR these SSP bits for BSM
   */
  uint32_t Cohda_Crypto_SSPBSM;

  /**
   * Cohda_Crypto_SSPEVA default is 0x1ul, min/max 0x0ul/0xfful
   * bit-wise-OR these SSP bits for EVA
   */
  uint32_t Cohda_Crypto_SSPEVA;

  /**
   * Cohda_Crypto_SmartVerify_TargetDP_0 default is 2, min/max 0/32
   * Smart verification Target traffic class for profile 0 (EMERGENCY)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetDP_0;

  /**
   * Cohda_Crypto_SmartVerify_TargetDP_1 default is 2, min/max 0/32
   * Smart verification Target traffic class for profile 1 (V2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetDP_1;

  /**
   * Cohda_Crypto_SmartVerify_TargetDP_2 default is 4, min/max 0/32
   * Smart verification Target traffic class for profile 2 (I2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetDP_2;

  /**
   * Cohda_Crypto_SmartVerify_TargetDP_3 default is 5, min/max 0/32
   * Smart verification Target traffic class for profile 3 (OTHER)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetDP_3;

  /**
   * Cohda_Crypto_SmartVerify_TargetRange_0 default is 1000, min/max 0/100000
   * Smart verification Target range for profile 0 (EMERGENCY)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRange_0;

  /**
   * Cohda_Crypto_SmartVerify_TargetRange_1 default is 1000, min/max 0/100000
   * Smart verification Target range for profile 1 (V2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRange_1;

  /**
   * Cohda_Crypto_SmartVerify_TargetRange_2 default is 1000, min/max 0/100000
   * Smart verification Target range for profile 2 (I2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRange_2;

  /**
   * Cohda_Crypto_SmartVerify_TargetRange_3 default is 1000, min/max 0/100000
   * Smart verification Target range for profile 3 (OTHER)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRange_3;

  /**
   * Cohda_Crypto_SmartVerify_TargetRate_0 default is 50, min/max 0/5000
   * Smart verification rate for profile 0 (EMERGENCY)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRate_0;

  /**
   * Cohda_Crypto_SmartVerify_TargetRate_1 default is 300, min/max 0/5000
   * Smart verification rate for profile 1 (V2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRate_1;

  /**
   * Cohda_Crypto_SmartVerify_TargetRate_2 default is 100, min/max 0/5000
   * Smart verification rate for profile 2 (I2V)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRate_2;

  /**
   * Cohda_Crypto_SmartVerify_TargetRate_3 default is 100, min/max 0/5000
   * Smart verification rate for profile 3 (OTHER)
   */
  int32_t Cohda_Crypto_SmartVerify_TargetRate_3;

  /**
   * Cohda_Crypto_Boost_Priority default is 5, min/max -20/20
   * Increase Aerolink thread priorities by this amount
   */
  int32_t Cohda_Crypto_Boost_Priority;

  /**
   * Dot2_VerifyPolicy default is 2, min/max 0/2
   * verification policy -
   * -  0 = All
   * -  1 = Smart
   * -  2 = On Demand Only
   */
  int32_t Dot2_VerifyPolicy;

  /**
   * RsuMode default is 4, min/max 2/4
   *RSU Mode
   * -  2 = Standby
   * -  4 = Operate
   */
  int32_t RsuMode;

  /**
   * SCMSProxyPort default is 0, min/max 0/65535
   * Port of HTTP proxy server for SCMS connection
   */
  int32_t SCMSProxyPort;

  /**
   * Cohda_UBX_MODE default is -1, min/max -1/1
   * -1: Auto (prefer GNSS + UDR if available)
   *  0: GNSS
   *  1: GNSS + UDR
   */
  int32_t Cohda_UBX_MODE;

  /**
   * Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS default is 60000, min/max -1/3600000
   * UBX-AID-HUI Polling Interval for Leap Seconds in the future.
   * -1 = Disable. In newer u-blox, this could be replaced by enabling periodic
   * subscription to UBX-NV-TIMELS
   */
  int32_t Cohda_UBX_LEAP_SECONDS_POLL_INTERVAL_MS;

  /**
   * ItsCamInitInterval default is 100, min/max 50/1000
   * Initial/Fast CAM sending interval (T_GenCamMin)
   * millisec
   */
  int32_t ItsCamInitInterval;

  /**
   * ItsCamSlowInterval default is 1000, min/max 50/1000
   * Slow CAM sending interval (T_GenCamMax)
   * millisec
   */
  int32_t ItsCamSlowInterval;

  /**
   * ItsCamDccInterval default is 100, min/max 50/1000
   * CAM sending DCC limit (minimum interval between CAMs, T_GenCam_Dcc)
   * millisec
   */
  int32_t ItsCamDccInterval;

  /**
   * ItsCamNGenCam default is 3, min/max 1/9
   * CAMs sent consecutively after triggering
   * count
   * -  "pCamGenNumber" = aka
   */
  int32_t ItsCamNGenCam;

  /**
   * ItsCamSpeedChangeTrigger default is 0.5, min/max 0.0/10.0
   * thresholds for generating a CAM based on speed, heading or position change.
   * Create limit check for LPH speed change
   * m/s, 0 to disable
   */
  float ItsCamSpeedChangeTrigger;

  /**
   * ItsCamHeadingChangeTrigger default is 4.0, min/max 0.0/45.0
   * Create limit check for LPH heading change
   * degrees, 0 to disable
   */
  float ItsCamHeadingChangeTrigger;

  /**
   * ItsCamDistanceChangeTrigger default is 4.0, min/max 0.0/50.0
   * Create limit check for distance change
   * meters, 0 to disable
   */
  float ItsCamDistanceChangeTrigger;

  /**
   * ItsCamVehicleRole default is 0, min/max 0/15
   * Initial vehicle role (can be changed via CAM API)
   * Vehicle Role
   * default(0)
   * publicTransport(1)
   * specialTransport(2)
   * dangerousGoods(3)
   * roadWork(4)
   * rescue(5)
   * emergency(6)
   * safetyCar(7)
   * agriculture(8)
   * commercial(9)
   * military(10)
   * roadOperator(11)
   * taxi(12)
   * reserved1(13)
   * reserved2(14)
   * reserved3(15)
   */
  int32_t ItsCamVehicleRole;

  /**
   * ItsCamTraceMinLength default is 200, min/max 0/1000
   * C2C minimal length of a trace in CAMs (m)
   * NOTE: Cohda_PH.Distance_m must exceed this value for correct operation
   * -  "pCamTraceMinLength" = aka
   */
  int32_t ItsCamTraceMinLength;

  /**
   * ItsCamTraceMaxLength default is 500, min/max 0/1000
   * C2C maximal length of a trace in CAMs (m)
   * NOTE: ItsCamTraceMinLength must be 0 and Cohda_PH.Distance_m must exceed
   * this value for correct operation
   * -  "pCamTraceMaxLength" = aka
   */
  int32_t ItsCamTraceMaxLength;

  /**
   * ItsCamConfidenceChecks default is 0, min/max 0/2
   * C2C position confidence checks
   * If any positional confidence is unavailable, CAM is not generated (and optionally PH is reset)
   * -  0 = None
   * -  1 = noCAM
   * -  2 = noCAMwithPHReset
   */
  int32_t ItsCamConfidenceChecks;

  /**
   * ItsDenmTraceMinLength default is 600, min/max 0/1000
   * Minimal length of a trace in DENM (m)
   * NOTE: Cohda_PH.Distance_m must exceed this value for correct operation
   * -  "pDenmTraceMinLength" = aka
   */
  int32_t ItsDenmTraceMinLength;

  /**
   * ItsDenmTraceMaxLength default is 1000, min/max 0/1000
   * Maximal length of a trace in DENM (m)
   * NOTE: ItsDenmTraceMinLength must be 0 and Cohda_PH.Distance_m must exceed
   * this value for correct operation
   * -  "pDenmTraceMaxLength" = aka
   */
  int32_t ItsDenmTraceMaxLength;

  /**
   * DenmEventHistoryGenMaxDeltaTime default is 10, min/max 0/3600
   * Limit for time when including Event History Point on update
   * NOTE: For Event History Point on any update set time to zero
   * Sec
   */
  int32_t DenmEventHistoryGenMaxDeltaTime;

  /**
   * DenmEventHistoryGenMaxDeltaDistance default is 10, min/max 0/1000
   * Limit for distance when including Event History Point on update
   * metres
   */
  int32_t DenmEventHistoryGenMaxDeltaDistance;

  /**
   * DenmEventHistoryGenMaxDeltaHeading default is 4, min/max 0/90
   * Limit for heading when including Event History Point on update
   * degrees
   */
  int32_t DenmEventHistoryGenMaxDeltaHeading;

  /**
   * ItsImzmJurisdictionId default is 0xc70001ul, min/max 0x0ul/0xfffffful
   * Identification of entity that rules the jurisdiction for which the IMZM is sent out
   * Same as ASN.1 Provider type
   */
  uint32_t ItsImzmJurisdictionId;

  /**
   * ItsSAMContentSetting default is 1, min/max 0/2
   * Allow empty Services Announcement (i.e. indicates no services)
   * -  0 = empty SA
   * -  1 = empty SA times out
   * -  2 = no empty SA
   */
  int32_t ItsSAMContentSetting;

  /**
   * ItsTRXHandleMultipleEvents default is 0, min/max 0/20
   * Determine number of multiple TRX Tx message table events on same processing iteration
   * count, 0 = no limit
   */
  int32_t ItsTRXHandleMultipleEvents;

  /**
   * ItsCenDsrcIntZonePowerdBm default is 10, min/max -20/43
   * MaxPower for interference mitigation
   * -  "pDccPToll" = aka
   */
  int32_t ItsCenDsrcIntZonePowerdBm;

  /**
   * ItsFacilitiesTollValidDistance_m default is 250, min/max 10/1000
   * Distance to consider toll stations valid (after query from toll database)
   */
  int32_t ItsFacilitiesTollValidDistance_m;

  /**
   * ItsFacilitiesStationID default is 0xfffffffeul, min/max 0x0ul/0xfffffffful
   * Local FAC Station ID selection
   * AUTO (0xXXXXXXXX): Determine own ID
   *  > Station ID is defined value in ItsFacilitiesStationID
   *  > Note: recommend not using Station ID = 0
   * TEST (0xfffffffd): Conformance testing purpose
   *  > Station ID based on IPv4 address of Ethernet interface (useful for identification on a network)
   * MANAGED (0xfffffffe, default): MGMT provides ID
   *  > Station ID is from local (WLAN) MAC
   * ANONYMOUS (0xffffffff): Identity service interface provides ID
   *  > Station ID set from value from identity service (if ItsGnSecurity is active)
   *  > Station ID otherwise is random
   */
  uint32_t ItsFacilitiesStationID;

  /**
   * ItsFacilitiesDefaultCommProfile default is 0xfful, min/max 0x0ul/0xfful
   * FAC GN profile
   * Override Communication Profile
   * To force selection of profile regardless of client API request
   * See eETSIFACGNProfile for values
   * -  0xFF = ignore
   */
  uint32_t ItsFacilitiesDefaultCommProfile;

  /**
   * ItsFacilitiesSysTimeError_ms default is 1000, min/max 0/5000
   * FAC Time check accuracy check
   * Allowable (absolute) error in millisec between GPS time and system time, 0 to disable
   * Due to sampling rate in ItsFacilities, accuracy limited to TRX sample interval
   */
  int32_t ItsFacilitiesSysTimeError_ms;

  /**
   * ItsFacilitiesAllowedRelevantDist_km default is 0, min/max 0/1000
   * Limit of distance (km) from ego position to message reference point
   * Used in geo-broadcast messages such as DENM/IVIM/MAPEM to filter out rogue position information
   * -  0 = None
   */
  int32_t ItsFacilitiesAllowedRelevantDist_km;

  /**
   * ItsG5Enabled default is 2, min/max 0/3
   * Control the used G5 interface module
   * -    0 = None (interface inactive)
   * -    1 = RAW (Raw Ethernet interface)
   * -    2 = LLC (802.11p via LLC)
   * -    3 = ATK (802.11p via ATK)
   */
  int32_t ItsG5Enabled;

  /**
   * ItsG5Ethertype default is 0x8947ul, min/max 0x0ul/0xfffful
   * Ethertype (0x8947 == GeoNetworking)
   */
  uint32_t ItsG5Ethertype;

  /**
   * ItsG5CchChanNum default is 180, min/max 166/186
   * IEEE Channel number to use for CCH (SCH0)
   * (166-170 for TEST FEATUREs)
   * (184-186 for Urban Rail)
   */
  int32_t ItsG5CchChanNum;

  /**
   * ItsG5CchTxPwrLevel default is 23, min/max -10/33
   * Default transmit power for CCH (SCH0), Valid values: -10 to 33 in increments of 1 dBm
   */
  int32_t ItsG5CchTxPwrLevel;

  /**
   * ItsG5CchTxDataRate default is 12, min/max 6/54
   * Default data rate, parameter is twice the actual 10 MHz channel rate (i.e.,12=6Mbps)
   *   Valid values: 6,9,12,18,24,36,48,54
   * -  "pAlDataRateCch" = aka (note scaling from param to Mbps)
   * pAlDataRateCchHigh and pAlDataRateCchLow are optional
   */
  int32_t ItsG5CchTxDataRate;

  /**
   * ItsG5SchChanNum default is 176, min/max 172/186
   * IEEE Channel number to use for SCHX
   */
  int32_t ItsG5SchChanNum;

  /**
   * ItsG5SchTxPwrLevel default is 23, min/max -10/33
   * Default transmit power for SCHX, Valid values: -10 to 33 in increments of 1 dBm
   */
  int32_t ItsG5SchTxPwrLevel;

  /**
   * ItsG5SchTxDataRate default is 12, min/max 6/54
   * Default data rate, parameter is twice the actual 10 MHz channel rate (i.e.,12=6Mbps)
   *   Valid values: 6,9,12,18,24,36,48,54
   */
  int32_t ItsG5SchTxDataRate;

  /**
   * ItsG5TransceiverDevices default is 1, min/max 1/2
   * Define number of transceiver devices used
   * -  1 = One (e.g. SAF5100, has twin radios)
   * -  2 = Two (e.g. 2xSAF5400)
   */
  int32_t ItsG5TransceiverDevices;

  /**
   * ItsG5TransceiverConfig default is 1, min/max 1/3
   * Define mode of operation for transceivers
   * -  1 = Single (T1(SCH0) only)
   * -  2 = Dual (T1(SCH0) + T2(SCHX))
   * -  3 = NonSafety (T2/T3, Non-safety)
   */
  int32_t ItsG5TransceiverConfig;

  /**
   * ItsG5DataFrameLPDEPDSupport default is 0x13ul, min/max 0x11ul/0x23ul
   * Support LPD or EPD LLC protocol for transmit and receive
   * G5 LLC transmit support of LPD (0x1X) or EPD (0x2X)
   * G5 LLC receive support of LPD (0xX1) and/or EPD (0xX2)
   */
  uint32_t ItsG5DataFrameLPDEPDSupport;

  /**
   * ItsPC5Enabled default is 0, min/max 0/5
   * Control the used PC5 interface module
   * -    0 = None (interface inactive)
   * -    4 = QTI (LTE-V2X via QTI)
   * -    5 = ATK (LTE-V2X via ATK)
   */
  int32_t ItsPC5Enabled;

  /**
   * ItsPC5SPS0_Interval_ms default is 100, min/max 0/1000
   * Bandwidth-reserved periodicity interval in milliseconds
   */
  int32_t ItsPC5SPS0_Interval_ms;

  /**
   * ItsPC5SPS0_Size default is 365, min/max 0/65535
   * Number of bytes of Tx bandwidth that are sent every periodicity interval
   */
  int32_t ItsPC5SPS0_Size;

  /**
   * ItsPC5SPS0_Priority default is 4, min/max 0/7
   * Priority (PPPP) to use for this SPS flow
   */
  int32_t ItsPC5SPS0_Priority;

  /**
   * ItsPC5SPS0_ITSAID default is 0x24ul, min/max 0x0ul/0xfffffffful
   * ITS-AID to use this SPS flow (0 = unused)
   */
  uint32_t ItsPC5SPS0_ITSAID;

  /**
   * ItsPC5SPS1_Interval_ms default is 100, min/max 0/1000
   * Bandwidth-reserved periodicity interval in milliseconds
   */
  int32_t ItsPC5SPS1_Interval_ms;

  /**
   * ItsPC5SPS1_Size default is 500, min/max 0/65535
   * Number of bytes of Tx bandwidth that are sent every periodicity interval
   */
  int32_t ItsPC5SPS1_Size;

  /**
   * ItsPC5SPS1_Priority default is 5, min/max 0/7
   * Priority (PPPP) to use for this SPS flow
   */
  int32_t ItsPC5SPS1_Priority;

  /**
   * ItsPC5SPS1_ITSAID default is 0x0ul, min/max 0x0ul/0xfffffffful
   * ITS-AID to use this SPS flow (0 = unused)
   */
  uint32_t ItsPC5SPS1_ITSAID;

  /**
   * ItsGnLocalAddrConfMethod default is 1, min/max 0/2
   * Local GN address configuration method
   * AUTO (0): Determine own ID (cannot change)
   *  > GN_ADDR is combination of ItsGnStationType and MID from ItsGnLocalAddr
   *  > GN_ADDR is random if ItsGnLocalAddr is 0xXXXXFFFFFFFFFFFF
   * MANAGED (1, default): MGMT provides ID
   *  > GN_ADDR is from local (WLAN) MAC
   * ANONYMOUS (2): Identity service interface provides ID
   *  > GN_ADDR set from value from identity service (if ItsGnSecurity is active)
   *  > GN_ADDR otherwise is random
   * -  0 = Auto
   * -  1 = Managed
   * -  2 = Anonymous
   */
  int32_t ItsGnLocalAddrConfMethod;

  /**
   * ItsGnProtocolVersion default is 1, min/max 0/255
   * GeoNetworking protocol version set in the GeoNetworking protocol headers
   */
  int32_t ItsGnProtocolVersion;

  /**
   * ItsGnIfType default is 1, min/max 0/2
   * Indicates type of interface
   * -  0 = Unspecified
   * -  1 = ITS-G5
   * -  2 = LTE-V2X
   */
  int32_t ItsGnIfType;

  /**
   * ItsGnMinUpdateFrequencyLPV default is 1000, min/max 100/2000
   * Minimum update frequency of ego position vector (EPV) in milliseconds
   */
  int32_t ItsGnMinUpdateFrequencyLPV;

  /**
   * ItsGnPaiInterval default is 80, min/max -1/1000
   * PAI (Position Accuracy Indicator) determining
   * Distance related to the confidence interval for latitude and longitude [m]
   * Note: 0 means "any" and hence PAI will always be set
   * Note: -1 means "not set" and hence is automatically set by TxPosAccuracyLimit
   * metres
   */
  int32_t ItsGnPaiInterval;

  /**
   * ItsGnMaxSduSize default is 1398, min/max 0/2600
   * Maximum size of GN-SDU in octets
   * Note: For G5 interface maximum 802.11p packet size must be less than 2304 octets
   * Note: For BTP-transport 4 octets required for BTP header
   * Note: Max size limited by implementation
   */
  int32_t ItsGnMaxSduSize;

  /**
   * ItsGnMaxGeoNetworkingHeaderSize default is 88, min/max 0/1024
   * Maximum size of GeoNetworking header in bytes
   */
  int32_t ItsGnMaxGeoNetworkingHeaderSize;

  /**
   * ItsGnLifetimeLocTE default is 20, min/max 0/3600
   * Location table maintenance: Lifetime of an entry in the location table in seconds
   */
  int32_t ItsGnLifetimeLocTE;

  /**
   * ItsGnNeighbourFlagExpiry default is 3750, min/max 1000/20000
   * Location table maintenance: Lifetime of IsNeighbour flag in an entry in the location table in milliseconds
   */
  int32_t ItsGnNeighbourFlagExpiry;

  /**
   * ItsGnStationType default is 5, min/max 0/15
   * ITS Station type (NOTE: No longer used in GN, but used in CAM)
   * -   0 = Unknown
   * -   1 = Pedestrian
   * -   2 = Cyclist
   * -   3 = Moped
   * -   4 = Motorcycle
   * -   5 = PassengerCar
   * -   6 = Bus
   * -   7 = LightTruck
   * -   8 = HeavyTruck
   * -   9 = Trailer
   * -  10 = SpecialVehicles
   * -  11 = Tram
   * -  15 = RoadSideUnit
   */
  int32_t ItsGnStationType;

  /**
   * ItsGnReserved default is 0, min/max 0/1023
   * ITS GNADDR Reserved field (formerly Country Code)
   * Assuming 'Reserved' field should be zero, but not specified
   * Also allows former ItsGnCountryCode to be set in case of compatibility issues
   * Formerly ItsGnCountryCode
   */
  int32_t ItsGnReserved;

  /**
   * ItsGnCompactTimeConfidence default is 0, min/max 0/7
   * GeoNetworking protocol constant for LTE-V2X
   * Absolute accuracy of the reported timing values in the
   * SDU with a predefined confidence level, i.e. 95 %.
   */
  int32_t ItsGnCompactTimeConfidence;

  /**
   * ItsGnMaxLocTEntries default is 200, min/max 0/1000
   * Location table maximum entries: Maximum number of LocTEs that can be stored
   */
  int32_t ItsGnMaxLocTEntries;

  /**
   * ItsGnTxAccLayerMode default is 0, min/max 0/4
   * Control the Tx behaviour with multiple access layers
   * -    0 = Default (single active technology, or G5 with multi-tech operation)
   * -    1 = G5 only
   * -    2 = PC5 only
   * -    3 = G5/PC5 layer clone (Test mode - no media specific adaptation)
   * -    4 = GN layer clone (TBD - awaiting ETSI specs)
   */
  int32_t ItsGnTxAccLayerMode;

  /**
   * ItsGnLocationServiceMaxRetrans default is 10, min/max 0/255
   * Location service: Maximum number of retransmissions for a LS Request
   */
  int32_t ItsGnLocationServiceMaxRetrans;

  /**
   * ItsGnLocationServiceRetransmitTimer default is 1000, min/max 0/65535
   * Location service: Duration of LS request retransmit timer in milliseconds
   */
  int32_t ItsGnLocationServiceRetransmitTimer;

  /**
   * ItsGnLocationServicePacketBufferSize default is 1024, min/max 0/65535
   * Location service: Size of LS packet buffer in bytes
   */
  int32_t ItsGnLocationServicePacketBufferSize;

  /**
   * ItsGnBeaconServiceRetransmitTimer default is 3000, min/max 0/65535
   * Beacon service: Duration of Beacon retransmit timer in ms
   * -  0 = DisableBeaconing
   */
  int32_t ItsGnBeaconServiceRetransmitTimer;

  /**
   * ItsGnBeaconServiceMaxJitter default is 750, min/max 0/65535
   * Beacon service: Maximum Beacon jitter in ms
   */
  int32_t ItsGnBeaconServiceMaxJitter;

  /**
   * ItsGnBeaconServiceLPVInitWait default is 10, min/max 0/255
   * Beacon service: Number of ItsGnMinUpdateFrequencyLPV intervals to wait for
   * valid position fix before starting Beacon service
   */
  int32_t ItsGnBeaconServiceLPVInitWait;

  /**
   * ItsGnDefaultHopLimit default is 10, min/max 0/255
   * Default hop limit indicating the maximum number of hops a packet travels
   */
  int32_t ItsGnDefaultHopLimit;

  /**
   * ItsGnDPLLength default is 8, min/max 0/255
   * Length of Duplicate Packet List (DPL) per source
   */
  int32_t ItsGnDPLLength;

  /**
   * ItsGnMaxPacketLifetime default is 600, min/max 0/6300
   * Upper limit of the maximum lifetime of a packet in s
   */
  int32_t ItsGnMaxPacketLifetime;

  /**
   * ItsGnDefaultPacketLifetime default is 60, min/max 0/6300
   * Default lifetime of a packet in s
   */
  int32_t ItsGnDefaultPacketLifetime;

  /**
   * ItsGnMaxPacketDataRate default is 100, min/max 0/10000
   * Maximum packet data rate for a GeoAdhoc router (Ko/sec).
   * If the mean (EMA) packet data rate a of a GeoAdhoc router exceeds the value,
   * packets from this GeoAdhoc router (source or sender) are not forwarded.
   */
  int32_t ItsGnMaxPacketDataRate;

  /**
   * ItsGnMaxPacketDataRateEmaBeta default is 90, min/max 0/100
   * Weight factor for the Exponential Moving Average of the packet data rate PDR in percent
   */
  int32_t ItsGnMaxPacketDataRateEmaBeta;

  /**
   * ItsGnMaxGeoAreaSize default is 10, min/max 0/1000
   * Maximum size of the geographical area for a GBC and GAC packet [km2]
   * If the geographical area size exceeds the maximum value, the GeoNetworking
   * packet shall not be sent (source) and not be forwarded (forwarder)
   * Note: 0 to disable check
   */
  int32_t ItsGnMaxGeoAreaSize;

  /**
   * ItsGnMaxDestAreaRange default is 0, min/max 0/1000
   * Maximum range of centre of destination area DestArea for a GBC and GAC packet [km]
   * Note: 0 to disable check
   */
  int32_t ItsGnMaxDestAreaRange;

  /**
   * ItsGnMinCBFProgressionDist default is 0, min/max 0/1000
   * Minimum progression (in metres) to achieve in CBF non-Area forwarding
   * Progression is how much closer ego is to destination than sender
   * Avoid unnecessary forwarding when only a small amount of progression is possible
   * Note: 0 to allow ANY positive progression (ETSI GN Spec compliance)
   */
  int32_t ItsGnMinCBFProgressionDist;

  /**
   * ItsGnMinCBFAreaCheckDist default is 0, min/max 0/1000
   * Enable a minimum distance check (in metres) for CBF Area forwarding
   * Ensures ego has some progression over the sender (even if both in destination area)
   * Avoid unnecessary forwarding when sender is already closer to the destination area
   * Note: 0 to disable check (ETSI GN Spec compliance)
   */
  int32_t ItsGnMinCBFAreaCheckDist;

  /**
   * ItsGnMinRepetitionInterval default is 100, min/max 0/1000
   * Lower limit of the packet repetition interval in ms
   */
  int32_t ItsGnMinRepetitionInterval;

  /**
   * ItsGnNonAreaForwardingAlgorithm default is 1, min/max 0/2
   * Default forwarding algorithm outside target area
   * -  0 = Unspecified
   * -  1 = Greedy
   * -  2 = CBF
   */
  int32_t ItsGnNonAreaForwardingAlgorithm;

  /**
   * ItsGnAreaForwardingAlgorithm default is 2, min/max 0/3
   * Default forwarding algorithm inside target area
   * -  0 = Unspecified
   * -  1 = Simple
   * -  2 = CBF
   * -  3 = Advanced
   */
  int32_t ItsGnAreaForwardingAlgorithm;

  /**
   * ItsGnCbfMinTime default is 1, min/max 0/65535
   * Minimum duration a packet shall be buffered in the CBF packet buffer in ms
   */
  int32_t ItsGnCbfMinTime;

  /**
   * ItsGnCbfMaxTime default is 100, min/max 0/65535
   * Maximum duration a packet shall be buffered in the CBF packet buffer in ms
   */
  int32_t ItsGnCbfMaxTime;

  /**
   * ItsGnDefaultMaxCommunicationRange default is 1000, min/max 0/65535
   * Default theoretical maximum communication range in m
   */
  int32_t ItsGnDefaultMaxCommunicationRange;

  /**
   * ItsGnBroadcastCBFDefSectorAngle default is 30, min/max 0/180
   * Default threshold angle for advanced GeoBroadcast algorithm
   */
  int32_t ItsGnBroadcastCBFDefSectorAngle;

  /**
   * ItsGnUcForwardingPacketBufferSize default is 256, min/max 0/65535
   * Forwarding: Size of UC forwarding packet buffer in kByte
   */
  int32_t ItsGnUcForwardingPacketBufferSize;

  /**
   * ItsGnBcForwardingPacketBufferSize default is 1024, min/max 0/65535
   * Forwarding: Size of BC forwarding packet buffer in kByte
   */
  int32_t ItsGnBcForwardingPacketBufferSize;

  /**
   * ItsGnCbfPacketBufferSize default is 256, min/max 0/65535
   * Forwarding: Size of CBF packet buffer in kByte
   */
  int32_t ItsGnCbfPacketBufferSize;

  /**
   * ItsGnBroadcastAdvMaxCounter default is 3, min/max 1/32
   * Forwarding: Value for Advanced forwarding MAX_COUNTER
   */
  int32_t ItsGnBroadcastAdvMaxCounter;

  /**
   * ItsGnDefaultTrafficClass default is 0x2ul, min/max 0x0ul/0xfful
   * Traffic Class: Default (e.g. NET packets)
   * 0x80 : SCF bit
   * 0x40 : ChannelOffload bit
   * 0x3F : DP number (mask)
   */
  uint32_t ItsGnDefaultTrafficClass;

  /**
   * ItsGnDefaultTrafficClassCAM default is 0x2ul, min/max 0x0ul/0xfful
   * Traffic Class: CAM (no SCF, no ChannelOffload, DP=2)
   * -  "pCamTrafficClass" = aka
   */
  uint32_t ItsGnDefaultTrafficClassCAM;

  /**
   * ItsGnDefaultTrafficClassFWD default is 0x3ul, min/max 0x0ul/0xfful
   * Traffic Class: Forwarding (no SCF, no ChannelOffload, DP=3)
   */
  uint32_t ItsGnDefaultTrafficClassFWD;

  /**
   * ItsGnRegionCode default is 1, min/max 0/999
   * Region Code (UN M49) for regional features, 0 = None, 1 = World, XXX = others
   * Based on the region, country code will be auto-detected using internal database
   * For explicit setting of country code via API, disable auto-detect by setting to 0
   */
  int32_t ItsGnRegionCode;

  /**
   * ItsGn6aslGvlAreaCenterLatitude default is 0, min/max -900000000/900000000
   * GN6 Virtual Links table entry
   * 0 for 'local position'
   */
  int32_t ItsGn6aslGvlAreaCenterLatitude;

  /**
   * ItsGn6aslGvlAreaCenterLongitude default is 0, min/max -1800000000/1800000000
   * 0 for 'local position'
   */
  int32_t ItsGn6aslGvlAreaCenterLongitude;

  /**
   * ItsGn6aslGvlAreaShape default is 0, min/max 0/2
   * Shape: 0=circle,1=rect,2=ellipse
   */
  int32_t ItsGn6aslGvlAreaShape;

  /**
   * ItsGn6aslGvlAreaDistA default is 1000, min/max 1/65535
   */
  int32_t ItsGn6aslGvlAreaDistA;

  /**
   * ItsGn6aslGvlAreaDistB default is 0, min/max 0/65535
   */
  int32_t ItsGn6aslGvlAreaDistB;

  /**
   * ItsGn6aslGvlAreaAngle default is 0, min/max 0/359
   */
  int32_t ItsGn6aslGvlAreaAngle;

  /**
   * ItsNativeIPv6RadioAddressPrefixLength default is 0, min/max 0/64
   * IPv6 address prefix length - 0 disabled
   */
  int32_t ItsNativeIPv6RadioAddressPrefixLength;

  /**
   * ItsBtpCAMDestPort default is 2001, min/max 0/65535
   * BTP port numbers to use
   * Note: Other Well-known BTP port numbers cannot be changed
   * -  "bBtpCamPort" = aka
   */
  int32_t ItsBtpCAMDestPort;

  /**
   * ItsBtpDENMDestPort default is 2002, min/max 0/65535
   * -  "bBtpDenmPort" = aka
   */
  int32_t ItsBtpDENMDestPort;

  /**
   * ItsBtpShellDestPort default is 65535, min/max 0/65535
   */
  int32_t ItsBtpShellDestPort;

  /**
   * ItsDCCEnabled default is 2, min/max 0/4
   * DCC Control
   * -  0 = None
   * -  1 = Basic (satisfies EN 302 571)
   * -  2 = C2C
   * -  3 = ETSI Adaptive
   * -  4 = ETSI Reactive
   */
  int32_t ItsDCCEnabled;

  /**
   * ItsDCC_CCH_TxPowerThr_minTxPower_dBm default is -10, min/max -20/43
   * Limit values
   */
  int32_t ItsDCC_CCH_TxPowerThr_minTxPower_dBm;

  /**
   * ItsDCC_CCH_TxPowerThr_maxTxPower_dBm default is 33, min/max -20/43
   */
  int32_t ItsDCC_CCH_TxPowerThr_maxTxPower_dBm;

  /**
   * ItsDCC_SCH_TxPowerThr_minTxPower_dBm default is -10, min/max -20/43
   */
  int32_t ItsDCC_SCH_TxPowerThr_minTxPower_dBm;

  /**
   * ItsDCC_SCH_TxPowerThr_maxTxPower_dBm default is 33, min/max -20/43
   */
  int32_t ItsDCC_SCH_TxPowerThr_maxTxPower_dBm;

  /**
   * ItsDCC_CCH_PktTimingThr_minPacketInterval_ms default is 40, min/max 0/40950
   */
  int32_t ItsDCC_CCH_PktTimingThr_minPacketInterval_ms;

  /**
   * ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms default is 960, min/max 0/40950
   */
  int32_t ItsDCC_CCH_PktTimingThr_maxPacketInterval_ms;

  /**
   * ItsDCC_SCH_PktTimingThr_minPacketInterval_ms default is 40, min/max 0/40950
   */
  int32_t ItsDCC_SCH_PktTimingThr_minPacketInterval_ms;

  /**
   * ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms default is 960, min/max 0/40950
   */
  int32_t ItsDCC_SCH_PktTimingThr_maxPacketInterval_ms;

  /**
   * ItsDCC_CCH_PktDataRateThr_minDataRate_MCS default is 0, min/max 0/7
   * as per 102687, MCS 0=3Mbps,1=4.5,2=6,3=9,4=12,5=18,6=24,7=27
   */
  int32_t ItsDCC_CCH_PktDataRateThr_minDataRate_MCS;

  /**
   * ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS default is 4, min/max 0/7
   */
  int32_t ItsDCC_CCH_PktDataRateThr_maxDataRate_MCS;

  /**
   * ItsDCC_SCH_PktDataRateThr_minDataRate_MCS default is 2, min/max 0/7
   */
  int32_t ItsDCC_SCH_PktDataRateThr_minDataRate_MCS;

  /**
   * ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS default is 5, min/max 0/7
   */
  int32_t ItsDCC_SCH_PktDataRateThr_maxDataRate_MCS;

  /**
   * ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC default is 300, min/max 0/1000
   */
  int32_t ItsDCC_CCH_ChanLoadThr_minChannelLoad_TenthPC;

  /**
   * ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC default is 650, min/max 0/1000
   */
  int32_t ItsDCC_CCH_ChanLoadThr_maxChannelLoad_TenthPC;

  /**
   * ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC default is 300, min/max 0/1000
   */
  int32_t ItsDCC_SCH_ChanLoadThr_minChannelLoad_TenthPC;

  /**
   * ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC default is 650, min/max 0/1000
   */
  int32_t ItsDCC_SCH_ChanLoadThr_maxChannelLoad_TenthPC;

  /**
   * ItsDCC_CCH_General_timeUp_ms default is 1000, min/max 0/40950
   */
  int32_t ItsDCC_CCH_General_timeUp_ms;

  /**
   * ItsDCC_CCH_General_timeDown_ms default is 5000, min/max 0/40950
   */
  int32_t ItsDCC_CCH_General_timeDown_ms;

  /**
   * ItsDCC_CCH_General_numActiveState default is 3, min/max 0/3
   */
  int32_t ItsDCC_CCH_General_numActiveState;

  /**
   * ItsDCC_SCH_General_timeUp_ms default is 1000, min/max 0/40950
   */
  int32_t ItsDCC_SCH_General_timeUp_ms;

  /**
   * ItsDCC_SCH_General_timeDown_ms default is 5000, min/max 0/40950
   */
  int32_t ItsDCC_SCH_General_timeDown_ms;

  /**
   * ItsDCC_SCH_General_numActiveState default is 3, min/max 0/3
   */
  int32_t ItsDCC_SCH_General_numActiveState;

  /**
   * ItsDCC_CCH_Relaxed_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_CCH_Relaxed_DCC_AC_VO;

  /**
   * ItsDCC_CCH_Relaxed_DCC_AC_VI default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Relaxed_DCC_AC_VI;

  /**
   * ItsDCC_CCH_Relaxed_DCC_AC_BE default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Relaxed_DCC_AC_BE;

  /**
   * ItsDCC_CCH_Relaxed_DCC_AC_BK default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Relaxed_DCC_AC_BK;

  /**
   * ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC default is 400, min/max 0/1000
   */
  int32_t ItsDCC_CCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC;

  /**
   * ItsDCC_CCH_ActiveState_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState_DCC_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState_DCC_AC_VI default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_ActiveState_DCC_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState_DCC_AC_BE default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_ActiveState_DCC_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState_DCC_AC_BK default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_ActiveState_DCC_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState1_TxPower_AC_VO default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState1_TxPower_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState1_TxPower_AC_VI default is 90, min/max 0/127
   * 25dBm
   */
  int32_t ItsDCC_CCH_ActiveState1_TxPower_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState1_TxPower_AC_BE default is 80, min/max 0/127
   * 20dBm
   */
  int32_t ItsDCC_CCH_ActiveState1_TxPower_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState1_TxPower_AC_BK default is 70, min/max 0/127
   * 15dBm
   */
  int32_t ItsDCC_CCH_ActiveState1_TxPower_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState1_PktInterval_AC_VO default is 9, min/max 0/1023
   * 90mS
   */
  int32_t ItsDCC_CCH_ActiveState1_PktInterval_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState1_PktInterval_AC_VI default is 9, min/max 0/1023
   * 90mS
   */
  int32_t ItsDCC_CCH_ActiveState1_PktInterval_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState1_PktInterval_AC_BE default is 9, min/max 0/1023
   * 90mS
   */
  int32_t ItsDCC_CCH_ActiveState1_PktInterval_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState1_PktInterval_AC_BK default is 9, min/max 0/1023
   * 90mS
   */
  int32_t ItsDCC_CCH_ActiveState1_PktInterval_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState1_DataRate_AC_VO default is 2, min/max 0/7
   * 6mpbs
   */
  int32_t ItsDCC_CCH_ActiveState1_DataRate_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState1_DataRate_AC_VI default is 2, min/max 0/7
   * 6mpbs
   */
  int32_t ItsDCC_CCH_ActiveState1_DataRate_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState1_DataRate_AC_BE default is 2, min/max 0/7
   * 6mpbs
   */
  int32_t ItsDCC_CCH_ActiveState1_DataRate_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState1_DataRate_AC_BK default is 2, min/max 0/7
   * 6mpbs
   */
  int32_t ItsDCC_CCH_ActiveState1_DataRate_AC_BK;

  /**
   * ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC default is 500, min/max 0/1000
   */
  int32_t ItsDCC_CCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC;

  /**
   * ItsDCC_CCH_ActiveState2_TxPower_AC_VO default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_TxPower_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState2_TxPower_AC_VI default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_TxPower_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState2_TxPower_AC_BE default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_TxPower_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState2_TxPower_AC_BK default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_TxPower_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState2_PktInterval_AC_VO default is 19, min/max 0/1023
   * 190mS
   */
  int32_t ItsDCC_CCH_ActiveState2_PktInterval_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState2_PktInterval_AC_VI default is 19, min/max 0/1023
   * 190mS
   */
  int32_t ItsDCC_CCH_ActiveState2_PktInterval_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState2_PktInterval_AC_BE default is 19, min/max 0/1023
   * 190mS
   */
  int32_t ItsDCC_CCH_ActiveState2_PktInterval_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState2_PktInterval_AC_BK default is 19, min/max 0/1023
   * 190mS
   */
  int32_t ItsDCC_CCH_ActiveState2_PktInterval_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState2_DataRate_AC_VO default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_DataRate_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState2_DataRate_AC_VI default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_DataRate_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState2_DataRate_AC_BE default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_DataRate_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState2_DataRate_AC_BK default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState2_DataRate_AC_BK;

  /**
   * ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC default is 650, min/max 0/1000
   */
  int32_t ItsDCC_CCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC;

  /**
   * ItsDCC_CCH_ActiveState3_TxPower_AC_VO default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_TxPower_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState3_TxPower_AC_VI default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_TxPower_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState3_TxPower_AC_BE default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_TxPower_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState3_TxPower_AC_BK default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_TxPower_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState3_PktInterval_AC_VO default is 24, min/max 0/1023
   * 240mS
   */
  int32_t ItsDCC_CCH_ActiveState3_PktInterval_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState3_PktInterval_AC_VI default is 24, min/max 0/1023
   * 240mS
   */
  int32_t ItsDCC_CCH_ActiveState3_PktInterval_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState3_PktInterval_AC_BE default is 24, min/max 0/1023
   * 240mS
   */
  int32_t ItsDCC_CCH_ActiveState3_PktInterval_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState3_PktInterval_AC_BK default is 24, min/max 0/1023
   * 240mS
   */
  int32_t ItsDCC_CCH_ActiveState3_PktInterval_AC_BK;

  /**
   * ItsDCC_CCH_ActiveState3_DataRate_AC_VO default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_DataRate_AC_VO;

  /**
   * ItsDCC_CCH_ActiveState3_DataRate_AC_VI default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_DataRate_AC_VI;

  /**
   * ItsDCC_CCH_ActiveState3_DataRate_AC_BE default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_DataRate_AC_BE;

  /**
   * ItsDCC_CCH_ActiveState3_DataRate_AC_BK default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_CCH_ActiveState3_DataRate_AC_BK;

  /**
   * ItsDCC_CCH_Restrictive_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_CCH_Restrictive_DCC_AC_VO;

  /**
   * ItsDCC_CCH_Restrictive_DCC_AC_VI default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Restrictive_DCC_AC_VI;

  /**
   * ItsDCC_CCH_Restrictive_DCC_AC_BE default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Restrictive_DCC_AC_BE;

  /**
   * ItsDCC_CCH_Restrictive_DCC_AC_BK default is 2, min/max 0/63
   * TRC
   */
  int32_t ItsDCC_CCH_Restrictive_DCC_AC_BK;

  /**
   * ItsDCC_SCH_Relaxed_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_SCH_Relaxed_DCC_AC_VO;

  /**
   * ItsDCC_SCH_Relaxed_DCC_AC_VI default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Relaxed_DCC_AC_VI;

  /**
   * ItsDCC_SCH_Relaxed_DCC_AC_BE default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Relaxed_DCC_AC_BE;

  /**
   * ItsDCC_SCH_Relaxed_DCC_AC_BK default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Relaxed_DCC_AC_BK;

  /**
   * ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC default is 250, min/max 0/1000
   */
  int32_t ItsDCC_SCH_ChanLoadThr_ActiveState1_ChannelLoad_TenthPC;

  /**
   * ItsDCC_SCH_ActiveState_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState_DCC_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState_DCC_AC_VI default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState_DCC_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState_DCC_AC_BE default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_ActiveState_DCC_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState_DCC_AC_BK default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_ActiveState_DCC_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState1_TxPower_AC_VO default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_TxPower_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState1_TxPower_AC_VI default is 0, min/max 0/127
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_TxPower_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState1_TxPower_AC_BE default is 90, min/max 0/127
   * 25dBm
   */
  int32_t ItsDCC_SCH_ActiveState1_TxPower_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState1_TxPower_AC_BK default is 80, min/max 0/127
   * 20dBm
   */
  int32_t ItsDCC_SCH_ActiveState1_TxPower_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState1_PktInterval_AC_VO default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_PktInterval_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState1_PktInterval_AC_VI default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_PktInterval_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState1_PktInterval_AC_BE default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_PktInterval_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState1_PktInterval_AC_BK default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_PktInterval_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState1_DataRate_AC_VO default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_DataRate_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState1_DataRate_AC_VI default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_DataRate_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState1_DataRate_AC_BE default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_DataRate_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState1_DataRate_AC_BK default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState1_DataRate_AC_BK;

  /**
   * ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC default is 300, min/max 0/1000
   */
  int32_t ItsDCC_SCH_ChanLoadThr_ActiveState2_ChannelLoad_TenthPC;

  /**
   * ItsDCC_SCH_ActiveState2_TxPower_AC_VO default is 90, min/max 0/127
   * 25dBm
   */
  int32_t ItsDCC_SCH_ActiveState2_TxPower_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState2_TxPower_AC_VI default is 90, min/max 0/127
   * 25dBm
   */
  int32_t ItsDCC_SCH_ActiveState2_TxPower_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState2_TxPower_AC_BE default is 80, min/max 0/127
   * 20dBm
   */
  int32_t ItsDCC_SCH_ActiveState2_TxPower_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState2_TxPower_AC_BK default is 60, min/max 0/127
   * 10dBm
   */
  int32_t ItsDCC_SCH_ActiveState2_TxPower_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState2_PktInterval_AC_VO default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_PktInterval_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState2_PktInterval_AC_VI default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_PktInterval_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState2_PktInterval_AC_BE default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_PktInterval_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState2_PktInterval_AC_BK default is 100, min/max 0/1023
   * 1000mS
   */
  int32_t ItsDCC_SCH_ActiveState2_PktInterval_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState2_DataRate_AC_VO default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_DataRate_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState2_DataRate_AC_VI default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_DataRate_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState2_DataRate_AC_BE default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_DataRate_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState2_DataRate_AC_BK default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState2_DataRate_AC_BK;

  /**
   * ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC default is 350, min/max 0/1000
   */
  int32_t ItsDCC_SCH_ChanLoadThr_ActiveState3_ChannelLoad_TenthPC;

  /**
   * ItsDCC_SCH_ActiveState3_TxPower_AC_VO default is 70, min/max 0/127
   * 15dBm
   */
  int32_t ItsDCC_SCH_ActiveState3_TxPower_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState3_TxPower_AC_VI default is 70, min/max 0/127
   * 15dBm
   */
  int32_t ItsDCC_SCH_ActiveState3_TxPower_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState3_TxPower_AC_BE default is 60, min/max 0/127
   * 10dBm
   */
  int32_t ItsDCC_SCH_ActiveState3_TxPower_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState3_TxPower_AC_BK default is 50, min/max 0/127
   * 5dBm
   */
  int32_t ItsDCC_SCH_ActiveState3_TxPower_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState3_PktInterval_AC_VO default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState3_PktInterval_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState3_PktInterval_AC_VI default is 0, min/max 0/1023
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState3_PktInterval_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState3_PktInterval_AC_BE default is 100, min/max 0/1023
   * 1000mS
   */
  int32_t ItsDCC_SCH_ActiveState3_PktInterval_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState3_PktInterval_AC_BK default is 150, min/max 0/1023
   * 1500mS
   */
  int32_t ItsDCC_SCH_ActiveState3_PktInterval_AC_BK;

  /**
   * ItsDCC_SCH_ActiveState3_DataRate_AC_VO default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState3_DataRate_AC_VO;

  /**
   * ItsDCC_SCH_ActiveState3_DataRate_AC_VI default is 0, min/max 0/7
   * Not used
   */
  int32_t ItsDCC_SCH_ActiveState3_DataRate_AC_VI;

  /**
   * ItsDCC_SCH_ActiveState3_DataRate_AC_BE default is 3, min/max 0/7
   * 9Mbps
   */
  int32_t ItsDCC_SCH_ActiveState3_DataRate_AC_BE;

  /**
   * ItsDCC_SCH_ActiveState3_DataRate_AC_BK default is 3, min/max 0/7
   * 9Mbps
   */
  int32_t ItsDCC_SCH_ActiveState3_DataRate_AC_BK;

  /**
   * ItsDCC_SCH_Restrictive_DCC_AC_VO default is 0, min/max 0/63
   * Not used
   */
  int32_t ItsDCC_SCH_Restrictive_DCC_AC_VO;

  /**
   * ItsDCC_SCH_Restrictive_DCC_AC_VI default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Restrictive_DCC_AC_VI;

  /**
   * ItsDCC_SCH_Restrictive_DCC_AC_BE default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Restrictive_DCC_AC_BE;

  /**
   * ItsDCC_SCH_Restrictive_DCC_AC_BK default is 1, min/max 0/63
   * TPC
   */
  int32_t ItsDCC_SCH_Restrictive_DCC_AC_BK;

  /**
   * ItsG5MonUpdateFrequency default is 100, min/max 50/500
   * Update frequency of G5Monitoring in milliseconds
   */
  int32_t ItsG5MonUpdateFrequency;

  /**
   * ItsUdpBtpIfIndPort default is 4400, min/max 1/65535
   * port number for sending BTP Data Ind to Shell
   */
  int32_t ItsUdpBtpIfIndPort;

  /**
   * ItsUdpBtpIfReqPort default is 4401, min/max 1/65535
   * port number for receiving BTP Data Req from Shell
   */
  int32_t ItsUdpBtpIfReqPort;

  /**
   * Cohda_SecIdChangeCheckInterval default is 1, min/max 0/3600
   * Periodic check interval
   * -  0 = Disable
   * -  1 = OneSecond
   */
  int32_t Cohda_SecIdChangeCheckInterval;

  /**
   * Cohda_SecIdChangeIntervalMin default is 300, min/max 0/3600
   * Min time interval for ID change, in seconds
   * -  0 = Disable
   */
  int32_t Cohda_SecIdChangeIntervalMin;

  /**
   * Cohda_SecIdChangeIntervalMax default is 300, min/max 0/3600
   * Max time interval for ID change, in seconds
   * -  0 = Disable
   */
  int32_t Cohda_SecIdChangeIntervalMax;

  /**
   * Cohda_SecIdChangeDistanceMin default is 2000, min/max 0/100000
   * Min distance interval for ID change, in metres
   * -  0 = Disable
   */
  int32_t Cohda_SecIdChangeDistanceMin;

  /**
   * Cohda_SecIdChangeDistanceMax default is 15000, min/max 0/100000
   * Max distance interval for ID change, in metres
   * -  0 = Disable
   */
  int32_t Cohda_SecIdChangeDistanceMax;

  /**
   * Cohda_SecDuplicateMacHandling default is 2, min/max 0/3
   * Behaviour when duplicate ID (MAC) is detected, in seconds
   * -  0 = AllowChange
   * -  1 = NoSequentialChanges
   * -  2 = NoFrequentChanges
   */
  int32_t Cohda_SecDuplicateMacHandling;

  /**
   * Cohda_SecDuplicateMacInterval default is 1800, min/max -1/3600
   * Hold period when duplicate MAC address is detected, in seconds
   * -  -1 = Disable
   * -  0 = AlwaysChange
   */
  int32_t Cohda_SecDuplicateMacInterval;

  /**
   * Cohda_SecIdChangeRetryInterval default is 5, min/max -1/3600
   * Retry Id change interval when id change failed, in seconds
   * -  -1 = Disable
   */
  int32_t Cohda_SecIdChangeRetryInterval;

  /**
   * Cohda_SecIdChangeScheme default is 0, min/max 0/2
   * ID change scheme
   * -  0 = Cohda
   * -  1 = C2C
   * -  2 = EUCP
   */
  int32_t Cohda_SecIdChangeScheme;

  /**
   * Cohda_SecRestartBlockingTime default is 0, min/max 0/30
   * Time in minutes between consecutive restarts with same AT
   * -  0 = Disable
   * -  1 = OneMinute
   */
  int32_t Cohda_SecRestartBlockingTime;

  /**
   * Cohda_SecChangeBlockingMaxTime default is 0, min/max 0/60
   * Max time in minutes applications can lock ID change (when moving)
   * Time should be inferior to Aerolink's idChange_max_block_time
   * -  0 = Disable
   * -  1 = OneMinute
   */
  int32_t Cohda_SecChangeBlockingMaxTime;

  /**
   * Cohda_SecCertMinTal default is 0, min/max 0/4
   * Minimal TAL assurance level
   */
  int32_t Cohda_SecCertMinTal;

  /**
   * Cohda_SecMinValidATCerts default is 0, min/max 0/100
   * Minimum number of required valid AT certs for signing
   * -  0 = Disable
   * -  1 = OneATCert
   */
  int32_t Cohda_SecMinValidATCerts;

  /**
   * UpperTesterUdpRxPort default is 12345, min/max 1/65535
   *  port number to use for Upper Tester Rx port
   */
  int32_t UpperTesterUdpRxPort;

  /**
   * UpperTesterNotifCtrl default is 0x0ul, min/max 0x0ul/0x3ul
   * Notification control
   * -  0x01 = GN
   * -  0x02 = BTP
   */
  uint32_t UpperTesterNotifCtrl;

  /**
   * UpperTesterAutoStart default is 0x0ul, min/max 0x0ul/0x87ul
   * -  0x01 = start MAP
   * -  0x02 = start SPAT
   * -  0x04 = start IVI
   * -  0x80 = start Unsecured GN
   */
  uint32_t UpperTesterAutoStart;

  /**
   * UpperTesterGNExtra default is 0x1ul, min/max 0x0ul/0xfful
   * extra payload on GN triggers
   */
  uint32_t UpperTesterGNExtra;

  /**
   * SecurityEnable default is true
   ***************************************************************************
   **                    1609.2 Configuration Items                          *
   ***************************************************************************
   * Enables / Disables the security functionality
   *   0 = False
   *   1 = True
   */
  bool SecurityEnable;

  /**
   * SendUnsecuredDot2Header default is false
   * Enables / Disables transmitting BSMs with unsecured
   * Dot 2 header if security is disabled
   *   0 = False
   *   1 = True
   */
  bool SendUnsecuredDot2Header;

  /**
   * VerFailMsgParseFlag default is false
   * Indicates if message processing, parsing, and logging should continue
   *   if message verification fails.
   *   0 = False, stop
   *   1 = True, continue
   */
  bool VerFailMsgParseFlag;

  /**
   * RandMAC default is true
   * Randomize the radio MAC address with a certificate change.
   *   0 = False
   *   1 = True
   */
  bool RandMAC;

  /**
   * RandTemporaryID default is true
   * Randomize the J2735 Temporary ID with a certificate change.
   *   0 = False
   *   1 = True
   */
  bool RandTemporaryID;

  /**
   * RandMsgCount default is true
   * Randomize the J2735 message count with a certificate change.
   *   0 = False
   *   1 = True
   */
  bool RandMsgCount;

  /**
   * WSMPSafetySuppSupport default is false
   * Enables / Disables adding the safety supplement data to the WSM header
   *   0 = False
   *   1 = True
   */
  bool WSMPSafetySuppSupport;

  /**
   * WSATxEnable default is true
   * Provider WSA transmission master enable
   * 0 = Disabled (will not request provider service WSA)
   * 1 = Enabled
   */
  bool WSATxEnable;

  /**
   * WSAIncludeRepeatRateExt default is true
   * Include Repeat Rate extension in WSA Tx?
   */
  bool WSAIncludeRepeatRateExt;

  /**
   * WSAInclude2DLocationExt default is false
   * Include 2D Location extension in WSA Tx?
   */
  bool WSAInclude2DLocationExt;

  /**
   * WSAInclude3DLocationExt default is true
   * Include 3D Location extension in WSA Tx?
   */
  bool WSAInclude3DLocationExt;

  /**
   * WSAIncludeAdvertiserIDExt default is true
   * Include Advertiser ID extension in WSA Tx?
   */
  bool WSAIncludeAdvertiserIDExt;

  /**
   * WSAIncludeChanAccExt default is true
   * Include Channel Access extension in WSA Tx?
   */
  bool WSAIncludeChanAccExt;

  /**
   * WSAIncludeEDCAExt default is false
   * EDCA parameters to be included in WSA channel info section
   * are taken from "SCH_AC_" parameters.
   * The format of the EDCA Parameter set is given in "8.2.4.8.1 EDCA Parameter Set"
   * (in IEEE Std 1609.3-2016)
   * The EDCA Parameter Set contains four Parameter Records.
   * Each Parameter Record occupies four octets.
   * Each Parameter Record is encoded as specified in 8.4.2.31 of IEEE Std 802.11-2012.
   * Include EDCA Parameters extension in WSA Tx?
   */
  bool WSAIncludeEDCAExt;

  /**
   * BSMEnabled default is true
   * Basic Safety Message Part I   Configuration Items
   * Enables / Disables support for transmitting a BSM
   *   0 = False
   *   1 = True
   */
  bool BSMEnabled;

  /**
   * HeadingLatchSpeedWithConfidence default is false
   * Enables / Disables C2C heading latch feature
   *   0 = False
   *   1 = True
   */
  bool HeadingLatchSpeedWithConfidence;

  /**
   * HeadingPersistency default is true
   * Enables / Disables persistently storing the heading at shutdown
   *   and using on startup
   *   0 = False
   *   1 = True
   */
  bool HeadingPersistency;

  /**
   * HeadingUseDefault default is false
   * Enables / Disables a default heading of 0 degree when heading
   *   cannot be loaded from persistent memory
   *   0 = False
   *   1 = True
   */
  bool HeadingUseDefault;

  /**
   * StatsLogEnableFlag default is false
   * Support logging of the stats log data
   *   0 = False
   *   1 = True
   */
  bool StatsLogEnableFlag;

  /**
   * PcapWriteMetrics default is false
   * Capture log writing metrics
   */
  bool PcapWriteMetrics;

  /**
   * PcapWriteCounters default is false
   * Capture log writing data
   */
  bool PcapWriteCounters;

  /**
   * TxALogEnableFlag default is true
   ***************************************************************************
   **                    Tcpdump Logging Configuration Items                 *
   ***************************************************************************
   * Support logging of the Tx log data from Radio A
   *   0 = False
   *   1 = True
   */
  bool TxALogEnableFlag;

  /**
   * TxBLogEnableFlag default is true
   * Support logging of the Tx log data from Radio B
   *   0 = False
   *   1 = True
   */
  bool TxBLogEnableFlag;

  /**
   * RxALogEnableFlag default is true
   * Support logging of the Rx log data from Radio A
   *   0 = False
   *   1 = True
   */
  bool RxALogEnableFlag;

  /**
   * RxBLogEnableFlag default is true
   * Support logging of the Rx log data from Radio B
   *   0 = False
   *   1 = True
   */
  bool RxBLogEnableFlag;

  /**
   * OTALogEnableFlag default is false
   * Support logging of the Tx (over the air) log data
   *   0 = False
   *   1 = True
   */
  bool OTALogEnableFlag;

  /**
   * SSLLogEnableFlag default is false
   * Support pcap logging of the rsyslog data
   *   0 = False
   *   1 = True
   */
  bool SSLLogEnableFlag;

  /**
   * GenLogEnableFlag default is false
   * Support pcap logging of the modbus data
   *   0 = False
   *   1 = True
   */
  bool GenLogEnableFlag;

  /**
   * WBSS_Service_Mode default is false
   ***************************************************************************
   **                     WBSS Configuration Items                           *
   ***************************************************************************
   * -  0 = User
   * -  1 = Provider
   */
  bool WBSS_Service_Mode;

  /**
   * WBSS_Service_0_IPService default is true
   * 0 = False, 1 = True
   */
  bool WBSS_Service_0_IPService;

  /**
   * WBSS_Service_1_IPService default is true
   * Security (over IPv6)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_1_IPService;

  /**
   * WBSS_Service_2_IPService default is false
   * Placeholder for 3th service (service number 2)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_2_IPService;

  /**
   * WBSS_Service_3_IPService default is false
   * Placeholder for 4th service (service number 3)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_3_IPService;

  /**
   * WBSS_Service_4_IPService default is false
   * Placeholder for 5th service (service number 4)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_4_IPService;

  /**
   * WBSS_Service_5_IPService default is false
   * Placeholder for 6th service (service number 5)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_5_IPService;

  /**
   * WBSS_Service_6_IPService default is false
   * Placeholder for 7th service (service number 6)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_6_IPService;

  /**
   * WBSS_Service_7_IPService default is false
   * Placeholder for 8th service (service number 7)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_7_IPService;

  /**
   * WBSS_Service_8_IPService default is false
   * Placeholder for 9th service (service number 8)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_8_IPService;

  /**
   * WBSS_Service_9_IPService default is false
   * Placeholder for 10th service (service number 9)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_9_IPService;

  /**
   * WBSS_Service_10_IPService default is false
   * Placeholder for 11th service (service number 10)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_10_IPService;

  /**
   * WBSS_Service_11_IPService default is false
   * Placeholder for 12th service (service number 11)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_11_IPService;

  /**
   * WBSS_Service_12_IPService default is false
   * Placeholder for 13th service (service number 12)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_12_IPService;

  /**
   * WBSS_Service_13_IPService default is false
   * Placeholder for 14th service (service number 13)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_13_IPService;

  /**
   * WBSS_Service_14_IPService default is false
   * Placeholder for 15th service (service number 14)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_14_IPService;

  /**
   * WBSS_Service_15_IPService default is false
   * Placeholder for 16th service (service number 15)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_15_IPService;

  /**
   * WBSS_Service_16_IPService default is false
   * Placeholder for 17th service (service number 16)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_16_IPService;

  /**
   * WBSS_Service_17_IPService default is false
   * Placeholder for 18th service (service number 17)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_17_IPService;

  /**
   * WBSS_Service_18_IPService default is false
   * Placeholder for 19th service (service number 18)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_18_IPService;

  /**
   * WBSS_Service_19_IPService default is false
   * Placeholder for 20th service (service number 19)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_19_IPService;

  /**
   * WBSS_Service_20_IPService default is false
   * Placeholder for 21st service (service number 20)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_20_IPService;

  /**
   * WBSS_Service_21_IPService default is false
   * Placeholder for 22nd service (service number 21)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_21_IPService;

  /**
   * WBSS_Service_22_IPService default is false
   * Placeholder for 23rd service (service number 22)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_22_IPService;

  /**
   * WBSS_Service_23_IPService default is false
   * Placeholder for 24th service (service number 23)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_23_IPService;

  /**
   * WBSS_Service_24_IPService default is false
   * Placeholder for 25th service (service number 24)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_24_IPService;

  /**
   * WBSS_Service_25_IPService default is false
   * Placeholder for 26th service (service number 25)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_25_IPService;

  /**
   * WBSS_Service_26_IPService default is false
   * Placeholder for 27th service (service number 26)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_26_IPService;

  /**
   * WBSS_Service_27_IPService default is false
   * Placeholder for 28th service (service number 27)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_27_IPService;

  /**
   * WBSS_Service_28_IPService default is false
   * Placeholder for 29th service (service number 28)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_28_IPService;

  /**
   * WBSS_Service_29_IPService default is false
   * Placeholder for 30th service (service number 29)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_29_IPService;

  /**
   * WBSS_Service_30_IPService default is false
   * Placeholder for 31st service (service number 30)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_30_IPService;

  /**
   * WBSS_Service_31_IPService default is false
   * Placeholder for 32nd service (service number 31)
   * 0 = False, 1 = True
   */
  bool WBSS_Service_31_IPService;

  /**
   * WBSS_WSA_GatewayMode default is false
   * Specify if the gateway should be the global address or the link-local
   * 0 = Link Local Address
   * 1 = Global Address
   */
  bool WBSS_WSA_GatewayMode;

  /**
   * WBSS_WSA_USE_STATIC_LOCATION default is false
   * Use static locations for 1609 location broadcasts
   * 0 = Use LPH provided location
   * 1 = Use static location provided via configuration items
   */
  bool WBSS_WSA_USE_STATIC_LOCATION;

  /**
   * WSMFwdRx_Enabled default is false
   ***************************************************************************
   **                   WSM Forwarding Configuration Items                   *
   ***************************************************************************
   * Enable/Disbale the forwarding of received WSMs
   */
  bool WSMFwdRx_Enabled;

  /**
   * WSMFwdRx_0_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_0_Enabled;

  /**
   * WSMFwdRx_1_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_1_Enabled;

  /**
   * WSMFwdRx_2_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_2_Enabled;

  /**
   * WSMFwdRx_3_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_3_Enabled;

  /**
   * WSMFwdRx_4_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_4_Enabled;

  /**
   * WSMFwdRx_5_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_5_Enabled;

  /**
   * WSMFwdRx_6_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_6_Enabled;

  /**
   * WSMFwdRx_7_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_7_Enabled;

  /**
   * WSMFwdRx_8_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_8_Enabled;

  /**
   * WSMFwdRx_9_Enabled default is false
   * Enable/Disable this fowarding entry
   */
  bool WSMFwdRx_9_Enabled;

  /**
   * Cohda_DebugThreadLevel default is false
   * -    0 = None
   * -    1 = ThreadID
   */
  bool Cohda_DebugThreadLevel;

  /**
   * Cohda_DebugThreadKill default is false
   * Whether threads can kill app (send SIGTERM)
   */
  bool Cohda_DebugThreadKill;

  /**
   * Cohda_UDPUserDebugMv6_Loopback default is false
   */
  bool Cohda_UDPUserDebugMv6_Loopback;

  /**
   * Cohda_MultipleInstance default is false
   * Create unique identifiers (e.g. message queues)
   */
  bool Cohda_MultipleInstance;

  /**
   * Cohda_PCAP_LoggingDisabled default is false
   * 0=False, 1=True.
   * Disable PCAP logging (other than tx_ota.pcap)
   */
  bool Cohda_PCAP_LoggingDisabled;

  /**
   * Cohda_P1609RxLogEnableFlag default is false
   * Allow fine-level control over additional binary log files
   * 0=False, 1=True (Enable/Disable rx.pcap)
   */
  bool Cohda_P1609RxLogEnableFlag;

  /**
   * Cohda_P1609TxLogEnableFlag default is false
   * 0=False, 1=True (Enable/Disable tx.pcap)
   */
  bool Cohda_P1609TxLogEnableFlag;

  /**
   * Cohda_P1609PC5RxLogEnableFlag default is true
   * 0=False, 1=True (Enable/Disable rx_pc5.pcap)
   */
  bool Cohda_P1609PC5RxLogEnableFlag;

  /**
   * Cohda_P1609PC5TxLogEnableFlag default is true
   * 0=False, 1=True (Enable/Disable tx_pc5.pcap)
   */
  bool Cohda_P1609PC5TxLogEnableFlag;

  /**
   * Cohda_C2XLogEnableFlag default is true
   * 0=False, 1=True (Enable/Disable tx.pcap & rx.pcap)
   */
  bool Cohda_C2XLogEnableFlag;

  /**
   * Cohda_SAECRxLogEnableFlag default is false
   * 0=False, 1=True (Enable/Disable rx.pcap)
   */
  bool Cohda_SAECRxLogEnableFlag;

  /**
   * Cohda_SAECTxLogEnableFlag default is false
   * 0=False, 1=True (Enable/Disable tx.pcap)
   */
  bool Cohda_SAECTxLogEnableFlag;

  /**
   * Cohda_GPSLogEnableFlag default is true
   * 0=False, 1=True
   */
  bool Cohda_GPSLogEnableFlag;

  /**
   * Cohda_CANLogEnableFlag default is false
   * 0=False, 1=True
   */
  bool Cohda_CANLogEnableFlag;

  /**
   * Cohda_VStateLogEnableFlag default is false
   * 0=False, 1=True
   */
  bool Cohda_VStateLogEnableFlag;

  /**
   * Cohda_VStateCsvEnableFlag default is false
   * 0=False, 1=True
   */
  bool Cohda_VStateCsvEnableFlag;

  /**
   * Cohda_LogSequentialLogNumbers default is false
   * 0=Log number is process PID, 1=Log number is sequentially incrementing
   */
  bool Cohda_LogSequentialLogNumbers;

  /**
   * Cohda_LogSystemInfo default is true
   * 0=False, 1=True
   * log system information Cohda_LogDirectoryName/info on startup
   */
  bool Cohda_LogSystemInfo;

  /**
   * Cohda_LogCaptureSyslog default is false
   * 0=False, 1=True
   * log syslog Cohda_LogDirectoryName/syslog
   */
  bool Cohda_LogCaptureSyslog;

  /**
   * Cohda_LogAerolinkConfig default is false
   * 0=False, 1=True
   * log Aerolink configuration
   */
  bool Cohda_LogAerolinkConfig;

  /**
   * Cohda_KillallTcpDump default is true
   * 0=False, 1=True
   * "killall -9 tcpdump" at startup
   */
  bool Cohda_KillallTcpDump;

  /**
   * Cohda_LogCaptureSTDERR_Mv6_Loopback default is false
   */
  bool Cohda_LogCaptureSTDERR_Mv6_Loopback;

  /**
   * Cohda_LogCaptureSTDOUT_Mv6_Loopback default is false
   */
  bool Cohda_LogCaptureSTDOUT_Mv6_Loopback;

  /**
   * Cohda_ReplaySimulation default is false
   * pcap replays at time of PCAP recording
   * 0 = replay 'now', 1 = fake system time in past
   */
  bool Cohda_ReplaySimulation;

  /**
   * Cohda_PRXReplayHasNoWSMPExtra default is false
   * Older logs have no Extra field within the WSMP header - set
   * to 1 when replaying using old logs which do not have the
   * Extra field within the WSMP header
   */
  bool Cohda_PRXReplayHasNoWSMPExtra;

  /**
   * Cohda_CAN_BounceInterfaceOnRestart default is false
   * Take can network interface down/up on a can lockup/restart event. Robustly restores CAN I/O on failure. (0 to disable)
   */
  bool Cohda_CAN_BounceInterfaceOnRestart;

  /**
   * Cohda_CAN_RestartInterfaceHack default is false
   * attempt to dynamically restart interface on certain CAN errors
   */
  bool Cohda_CAN_RestartInterfaceHack;

  /**
   * Cohda_CAN_ProcessShortFrames default is false
   * Flag to enable processing of short frames
   */
  bool Cohda_CAN_ProcessShortFrames;

  /**
   * Cohda_CAN_TestMode default is false
   * Flag to enable CAN test mode (simulates certain events during drive tests)
   */
  bool Cohda_CAN_TestMode;

  /**
   * Cohda_GPSRx_Sys_Time default is false
   * whether to use system time in place of gps source time
   */
  bool Cohda_GPSRx_Sys_Time;

  /**
   * Cohda_P1609TxPosInterpolation default is true
   * Interpolate between GPS fixes 0=False, 1=True
   */
  bool Cohda_P1609TxPosInterpolation;

  /**
   * Cohda_LPH_Ext_Update default is false
   * Enable/disable EXT notification of LPH update
   */
  bool Cohda_LPH_Ext_Update;

  /**
   * Cohda_LPH_Recalculate_Heading default is false
   * Enable/disable heading recalculation in LPH module
   * 0 : Disable heading recalculation in LPH module. We trust heading from GPS at low speed.
   * 1 : Enable heading recalculation in LPH module. We don't trust heading from GPS at low speed.
   */
  bool Cohda_LPH_Recalculate_Heading;

  /**
   * Cohda_P1609RxDecodeJ2735Enabled default is true
   * 0=False, 1=True (Enable Decoding J2735 in P1609-RX)
   * When disabled, the other decoder needs to be call
   * P1609RX_CheckAndUpdateTempID() to check for duplicated
   * temp IDs.
   */
  bool Cohda_P1609RxDecodeJ2735Enabled;

  /**
   * TemporaryIDControl default is true
   * Fixed/Random TemporaryID value
   * Fixed two bytes with random two bytes TemporaryID, Full random TemporaryID
   *   control flag.
   * If Fixed is chosen, the fixed value shall be the two low-order bytes of the
   *   ModelDeploymentDeviceID assigned above
   * Fixed - low order two bytes (big endien notation) = 0, Random = 1
   */
  bool TemporaryIDControl;

  /**
   * Cohda_Crypto_SMX_Check default is false
   * HSM check
   * -  0 = None
   * -  1 = Check
   */
  bool Cohda_Crypto_SMX_Check;

  /**
   * Cohda_Crypto_Sign_Type default is false
   * Signing type
   * NOTE: only synchronous operations are guaranteed to execute
   * but on a busy system this can lead to lots of blocking. Prefer
   * asynchronous as it generally works better with HSMs
   * -  0 = Asynchronous
   * -  1 = Synchronous
   */
  bool Cohda_Crypto_Sign_Type;

  /**
   * Cohda_Crypto_Verify_Type default is false
   * Verification type
   * NOTE: only synchronous operations are guaranteed to execute
   * but on a busy system this can lead to lots of blocking. Prefer
   * asynchronous as it generally works better with HW accelerators
   * -  0 = Asynchronous
   * -  1 = Synchronous
   */
  bool Cohda_Crypto_Verify_Type;

  /**
   * Cohda_Crypto_SmartVerify_ContinueUnverified default is false
   * Smart verification choice for unverified packets
   * -  0 = Drop
   * -  1 = Continue
   */
  bool Cohda_Crypto_SmartVerify_ContinueUnverified;

  /**
   * SCMSProxyEnable default is false
   * SCMS/PKI connection support
   * If enabled, SCMS connection is via HTTP proxy
   */
  bool SCMSProxyEnable;

  /**
   * SCMSIncludeServerName default is true
   * If enabled, SCMS server name is included in TLS hello
   */
  bool SCMSIncludeServerName;

  /**
   * SCMSSSLVerifyResult default is true
   * If enabled, verify SSL certificate chain
   */
  bool SCMSSSLVerifyResult;

  /**
   * ItsCamEnabled default is true
   * Enables / Disables support for CAM messages
   * 0 = disabled, 1 = enabled
   */
  bool ItsCamEnabled;

  /**
   * ItsCamAutoStart default is true
   * Enables / Disables auto start of CAM sending
   * 0 = disabled, 1 = enabled
   */
  bool ItsCamAutoStart;

  /**
   * ItsCamIncludeSpeed default is true
   * Determines if the vehicle speed will be included in the CAM message
   * 0 = not included
   * 1 = included
   */
  bool ItsCamIncludeSpeed;

  /**
   * ItsDenmEnabled default is true
   * Enables / Disables support for DENM messages
   * 0 = disabled, 1 = enabled
   */
  bool ItsDenmEnabled;

  /**
   * ItsDenmExpiryCheck default is true
   * Denm timestamp expiry check (Rx)
   * 0 = disabled, 1 = enabled
   */
  bool ItsDenmExpiryCheck;

  /**
   * ItsDenmRelevanceAreaCheck default is false
   * DENM relevance area check (Rx)
   */
  bool ItsDenmRelevanceAreaCheck;

  /**
   * ItsDenmAlwaysNotify default is true
   * Denm Notification scheme (can disable notitifcations from repeated DENMs)
   * 0 = disabled, 1 = enabled
   */
  bool ItsDenmAlwaysNotify;

  /**
   * ItsInfraEnabled default is true
   * Enables / Disables support for Infrastructure messages
   * 0 = disabled, 1 = enabled
   */
  bool ItsInfraEnabled;

  /**
   * ItsPlatoonSupport default is false
   * Enable Platoon messaging
   */
  bool ItsPlatoonSupport;

  /**
   * ItsTRXPeriodicExtrapolatePosition default is false
   * Enables /Disables support for position extrapolation in TRX module
   * 0 = disabled, 1 = enabled
   */
  bool ItsTRXPeriodicExtrapolatePosition;

  /**
   * ItsTRXIDChangeFlushesDENM default is true
   * Determine whether ID change clears active DENMs
   * 0 = disabled, 1 = enabled
   */
  bool ItsTRXIDChangeFlushesDENM;

  /**
   * ItsFacilitiesTRXEnabled default is true
   * Enables / Disables support Facilities CAM/DENM as a whole
   */
  bool ItsFacilitiesTRXEnabled;

  /**
   * ItsFacilitiesShellEnabled default is false
   * Enables / Disables support Facilities Shell interface
   */
  bool ItsFacilitiesShellEnabled;

  /**
   * ItsFacilitiesUpperTesterEnabled default is false
   * Enables / Disables support Facilities Upper Tester
   */
  bool ItsFacilitiesUpperTesterEnabled;

  /**
   * ItsFacilitiesTxInfoExtUpdate default is false
   * Enables / Disables support Facilities Tx Info EXT notifications
   */
  bool ItsFacilitiesTxInfoExtUpdate;

  /**
   * ItsFacilitiesTollDatabaseQuery default is false
   * Enables / Disables support Facilities Toll Database Query
   */
  bool ItsFacilitiesTollDatabaseQuery;

  /**
   * ItsFacilitiesTollStartLimited default is false
   * Start with limited max Tx Power (until tolling zone known)
   */
  bool ItsFacilitiesTollStartLimited;

  /**
   * ItsFacilitiesSecResultHandling default is false
   * FAC security checks strictness -
   * -  0 = STRICT
   * -  1 = NON-STRICT
   * When NON-STRICT, the AID & SSP check status is ignored, so signed packets with
   * incorrect parameters are handled and passed up the stack
   * When STRICT, incorrectly signed packets are dropped
   */
  bool ItsFacilitiesSecResultHandling;

  /**
   * ItsFacilitiesSecSSPVerMatch default is false
   * SSP version in signing permissions check
   * With zeroed version field any matching permission bitmap (for the ITS-AID/PSID) can be used
   * With exact version field only exactly matching permission bitmap (for the ITS-AID/PSID) can be used
   */
  bool ItsFacilitiesSecSSPVerMatch;

  /**
   * ItsFacilitiesRandomiseSequenceOnATchange default is false
   * Randomize ActionID sequence number at initialisation and on AT cert change.
   * This is a privacy enhancing feature.
   * Note that this is may break some tests.
   */
  bool ItsFacilitiesRandomiseSequenceOnATchange;

  /**
   * ItsG5ATKCchIndex default is false
   * If ItsG5Enabled == 3, define which interface to use for CCH (SCH0)
   * 0 = interface 0 for CCH (SCH0), interface 1 for SCHX (if configured)
   * 1 = interface 1 for CCH (SCH0), interface 0 for SCHX (if configured)
   */
  bool ItsG5ATKCchIndex;

  /**
   * ItsG5NoAck default is false
   * Force 802.11 'NoAck' policy (TEST FEATURE)
   */
  bool ItsG5NoAck;

  /**
   * ItsG5DataFrameNonQosSupport default is true
   * Support non-QoS 802.11 frames received at G5 interface
   */
  bool ItsG5DataFrameNonQosSupport;

  /**
   * ItsGnEnabled default is true
   * Enables / Disables support for transmitting GN messages
   */
  bool ItsGnEnabled;

  /**
   * ItsGnIsMobile default is true
   * Indicates whether ITS-S is stationary or mobile
   * -  0 = Stationary
   * -  1 = Mobile
   */
  bool ItsGnIsMobile;

  /**
   * ItsGnAlwaysUpdateLPV default is true
   * Update of ego position vector (EPV) on Tx packet
   * Improves freshness of LPV in GN packet
   */
  bool ItsGnAlwaysUpdateLPV;

  /**
   * ItsGnDestinationAreaCheck default is true
   * Destination area check enabling (in GBC/GAC) (TEST FEATURE)
   * Can be disabled so always considered inside any destination area
   */
  bool ItsGnDestinationAreaCheck;

  /**
   * ItsGnFlushAllBufferedGUC default is false
   * Flush buffered GUC on any message (TEST FEATURE)
   * Normally flush GUC only when sought address is detected as neighbour
   */
  bool ItsGnFlushAllBufferedGUC;

  /**
   * ItsGnSecurity default is true
   * GN security is disabled/enabled
   */
  bool ItsGnSecurity;

  /**
   * ItsGnSnDecapResultHandling default is false
   * GN security strictness
   * When STRICT, received GN packets that are not correctly verified and decrypted
   * are always dropped
   * When NON-STRICT, GN packets that are not correctly verified and decrypted can
   * be passed to the upper protocol entity for further processing
   * -  0 = STRICT
   * -  1 = NON-STRICT
   */
  bool ItsGnSnDecapResultHandling;

  /**
   * ItsDuplicateGNAddrCheckLSB32 default is false
   * GN duplicate address check size - 48-bits (0),32-bits (1)
   * When enabled, detect duplicate GN addresses by only comparing the least
   * significant 32-bits of GN Address, otherwise compare 48-bits.
   * This smaller sized check is required for C2CCC-compatible systems
   */
  bool ItsDuplicateGNAddrCheckLSB32;

  /**
   * ItsGnMixedSecurityHandling default is false
   * GN mixed security handling - Only same mode (0), any mode (1)
   * When any-mode, this allows signed packets to be handled when ItsGnSecurity is
   * not enabled and allows unsigned packets to be handled when ItsGnSecurity
   * is enabled. When disabled, packets with mismatched security mode are dropped
   */
  bool ItsGnMixedSecurityHandling;

  /**
   * ItsC2CGnGbcScf default is false
   * Value for the store-carry-forward field in cases of GBC
   * 0 = No SCF,1 = SCF (Used in C2C API only)
   */
  bool ItsC2CGnGbcScf;

  /**
   * ItsC2CGnRandomiseGNSN default is false
   * Randomise GN SN on ID change (C2C feature)
   */
  bool ItsC2CGnRandomiseGNSN;

  /**
   * ItsGn6Enabled default is false
   * GN6 enabling top level control
   */
  bool ItsGn6Enabled;

  /**
   * ItsGn6aslVIResolAddr default is false
   * GN6 address resolution control
   * 0 = Disabled,1 = Enabled
   */
  bool ItsGn6aslVIResolAddr;

  /**
   * ItsGn6IPv4Enabled default is false
   * GN6 module IPv4 support (TEST FEATURE)
   */
  bool ItsGn6IPv4Enabled;

  /**
   * ItsNativeIPv6Enabled default is false
   * IPv6 enabling top level control
   * Allows IPv6 traffic to use service channel directly (bypass GN/G5)
   * 0 = Disabled,1 = Enabled
   */
  bool ItsNativeIPv6Enabled;

  /**
   * ItsNativeIPv6ForceStart default is false
   * Force the IPv6 interface to start on stack initialisation.
   * If false, IPv6 will not be started, and will need to be brought up in response
   * to an external influence - e.g. SAM message
   * 0 = Disabled,1 = Enabled
   */
  bool ItsNativeIPv6ForceStart;

  /**
   * Cohda_SecIdChangeIntervalRand default is false
   * Randomise interval between Min and Max when selecting next ID change interval
   */
  bool Cohda_SecIdChangeIntervalRand;

  /**
   * Cohda_SecIdChangeDistanceRand default is false
   * Randomise distance between Min and Max when selecting next ID change distance
   */
  bool Cohda_SecIdChangeDistanceRand;

  /**
   * Cohda_SecShuffleCerts default is false
   * Shuffle certs at initialisation
   */
  bool Cohda_SecShuffleCerts;

  /**
   * Cohda_SecIdChangeSchemeSchedOnly default is false
   * ID change scheme targets set on schedule only
   * Enforced ID changes don't affect the schedule
   */
  bool Cohda_SecIdChangeSchemeSchedOnly;

  /**
   * Cohda_SecIdChangeDistanceMethod default is false
   * ID change distance method (since last ID change)
   * -  0 = AbsoluteAsTheCrowFlies
   * -  1 = CumulativeTravel
   */
  bool Cohda_SecIdChangeDistanceMethod;
} tdefault_stack;

#define default_stack_NUM_SUB (28)
#define default_stack_NUM_FLD (1106)

/// compiled-in defaults
extern const tdefault_stack default_stack_DEF;
/// Internals.... only for unit test...
const struct Conf_Callbacks * default_stack_Callbacks(void);

/**
 * @brief Get a R/O copy.
 *
 * Release with @ref default_stack_Release.
 *
 * @return Read-only instance of @ref default_stack.
 */
const tdefault_stack * default_stack_Get(void);

/**
 * @brief Get a R/W copy.
 *
 * Discard with @ref default_stack_Clean
 * or commit and retain with with @ref default_stack_Put.
 * or commit and discard with with @ref default_stack_Push.
 *
 * @return Read/Write instance of @ref default_stack.
 */
tdefault_stack * default_stack_Clone(void);

/**
 * @brief Release a R/O copy.
 *
 * Discard with a copy obtained with @ref default_stack_Get
 * *ppdefault_stack is set to NULL to help avoid use-after-free.
 *
 * @param ppdefault_stack Pointer to tdefault_stack to be cleaned up a f free(3)'d
 */
void default_stack_Release(const tdefault_stack ** ppdefault_stack);

/**
 * @brief Commit a R/O copy.
 *
 * Deep clean pdefault_stack.
 * pdefault_stack is not altered or free(3)'d
 *
 * @param pdefault_stack Pointer to tdefault_stack to update parameters with.
 */
void default_stack_Put(const tdefault_stack * pdefault_stack);

/**
 * @brief Commit and clean up ppdefault_stack.
 *
 * Applies *ppdefault_stack as the new configuration.
 * *ppdefault_stack is set to NULL to help avoid use-after-free.
 * Use with @ref default_stack_Clone.
 *
 * @param ppdefault_stack Pointer to tdefault_stack to update parameters with and clean up.
 */
void default_stack_Push(tdefault_stack ** ppdefault_stack);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Dump(
  FILE * pFile,
  const tdefault_stack * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_ADR_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_ADR * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_MAW_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_MAW * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_MAW_MAW_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_MAW_MAW * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_MAW_MAW_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_MAW_MAW_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_PCW_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_PCW * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_PCW_PCW_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_PCW_PCW * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_PCW_PCW_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_PCW_PCW_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_UAVD_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_UAVD * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_VTRW_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_VTRW * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_App_VTRW_Rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_App_VTRW_Rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_GeoFence_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_GeoFence * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_GeoFence_main_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_GeoFence_main * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_GeoFence_ray_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_GeoFence_ray * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_GeoFence_read_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_GeoFence_read * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_HMI_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_HMI * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_IVI_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_IVI * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LDM_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LDM * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LDM_ldm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LDM_ldm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LDM_ldm_online_backup_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LDM_ldm_online_backup * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LDM_ldm_sql_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LDM_ldm_sql * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LDM_ldm_thread_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LDM_ldm_thread * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_LTE_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_LTE * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PC5_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PC5 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_api_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_api * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_circular_buffer_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_circular_buffer * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_concise_algr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_concise_algr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_haversine_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_haversine * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_iir_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_iir * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_kalman_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_kalman * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_leap_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_leap * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_lib_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_lib * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_ph_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_ph * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_pos_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_pos * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_pos_api_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_pos_api * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_poshandler_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_poshandler * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_tai_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_tai * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PH_lph_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PH_lph_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PP_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PP * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_PP_lph_pp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_PP_lph_pp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_QTI_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_QTI * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_RPS_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_RPS * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_RSICN_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_RSICN * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_SPATMAP_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_SPATMAP * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_SPATMAP_spat_cn_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_SPATMAP_spat_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_SPATMAP_spat_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_SPATMAP_spat_utils_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_SPATMAP_spat_utils * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_dump_stats_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_dump_stats * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_fac_1609_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_fac_1609 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609_dot2_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609_dot2 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609dot2_dot2_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609_j2735_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609_j2735 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_common_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_map_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_message_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609_j2945cc_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609_j2945cc * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609_p1609_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609_time_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609_time * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_1609time_time_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_1609time_time_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_fac_cn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_fac_cn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cn_libcnfac_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cn_libcnfac * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cn_libsaecsec_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cn_saec_bsm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cn_saec_trx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cn_saec_trx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_fac_its_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_fac_its * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_cam_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cam * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_cpm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_denm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_denm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_evcsn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_imzm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_ivi_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_map_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_map * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_mcdm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_msg_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_msg * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_pmm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_rtcm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_sa_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_sa * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_spat_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_spat * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_srmssm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_toll_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_toll * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_trx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_trx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_uppertester_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_util_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_util * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_etsi_vam_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_etsi_vam * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_its_libitsfacilities_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_interface_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_interface * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackinterface_aerolink_scms_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackinterface_aerolink_scms * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_net_1609_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_net_1609 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609_dot3_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609_dot3 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot3_wsmp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609_dot4_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609_dot4 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4_wmac_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_net_cn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_net_cn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cn_libcnnet_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cn_libcnnet * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cn_saec_pc5_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_net_its_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_net_its * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_3gpp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_btp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_btp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_dcc_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_g5_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_gn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_gn6_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_etsi_pc5_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_libc2xsec_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_libc2xsec * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_libitsnet_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_libitsnet * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacknet_its_udp_btp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacknet_its_udp_btp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_plat_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_plat * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplat_libplat_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplat_libplat * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplat_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplat_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_log_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_log_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_log_udp_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_log_udp * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_pcap_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_pcap_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_pcap_raw_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_pcap_raw * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_sys_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_sys_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatlog_tcpdump_log_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplat_persistence_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplat_persistence * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplat_plugin_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplat_plugin * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplat_util_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplat_util * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatutil_Inhibit_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatutil_Inhibit * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatutil_PacketBuffer_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatutil_thread_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatutil_thread * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatutil_util_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatutil_util * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stackplatutil_worker_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stackplatutil_worker * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stack_sensors_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stack_sensors * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_can_ipc_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_can_ipc * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_can_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_can_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_can_vsc3_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_can_vsc3 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_gps_rx_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_gps_rx * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_ivi_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_ivi * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsivi_ivi_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsivi_ivi * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_rsicn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_rsicn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsrsicn_rsicn_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensors_tim_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensors_tim * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorstim_tim_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorstim_tim * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_Stacksensorstim_tim_region_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_Stacksensorstim_tim_region * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_ADR_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA_ADR * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TAADR_JSON_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TAADR_JSON * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_Map_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA_Map * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_Replay_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA_Replay * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_Threat_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA_Threat * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TA_Utils_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TA_Utils * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Classify_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_Classify * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_ETSI_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_ETSI * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Ext_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_Ext * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_J2735_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_J2735 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_J3224_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_J3224 * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Remote_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_Remote * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_SAEC_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_SAEC * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Thread_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_Thread * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TC_TC_Util_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TC_TC_Util * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TIM_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TIM * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_TM_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_TM * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_UBX_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_UBX * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_vstate_data_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS_vstate_data * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_vstate_gen_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS_vstate_gen * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_vstate_skel_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS_vstate_skel * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_vstate_stub_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS_vstate_stub * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VS_vstate_thr_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VS_vstate_thr * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_Cohda_VehicleConfig_Dump(
  FILE * pFile,
  const tdefault_stack_Cohda_VehicleConfig * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_J2945CC_Dump(
  FILE * pFile,
  const tdefault_stack_J2945CC * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_SAEC_Dump(
  FILE * pFile,
  const tdefault_stack_SAEC * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Write to file
 *
 * @param pFile where to dump
 * @param pDump what to dump
 * @param SkipDefault skip values at their default
 * @param SkipDisabled skip structure where DISABLED is false
 * @param ShowLimits show min/max
 */
void default_stack_SAEC_TRX_Dump(
  FILE * pFile,
  const tdefault_stack_SAEC_TRX * pDump,
  /*int MaxParamNameLen,*/
  bool SkipDefault,
  bool SkipDisabled,
  bool ShowLimits);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_ADR_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_ADR * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_MAW_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_MAW * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_MAW_MAW_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_MAW_MAW * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_MAW_MAW_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_MAW_MAW_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_PCW_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_PCW * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_PCW_PCW_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_PCW_PCW * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_PCW_PCW_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_PCW_PCW_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_UAVD_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_UAVD * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_VTRW_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_VTRW * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_App_VTRW_Rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_App_VTRW_Rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_GeoFence_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_GeoFence * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_GeoFence_main_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_GeoFence_main * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_GeoFence_ray_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_GeoFence_ray * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_GeoFence_read_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_GeoFence_read * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_HMI_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_HMI * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_IVI_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_IVI * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LDM_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LDM * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LDM_ldm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LDM_ldm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LDM_ldm_online_backup_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LDM_ldm_online_backup * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LDM_ldm_sql_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LDM_ldm_sql * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LDM_ldm_thread_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LDM_ldm_thread * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_LTE_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_LTE * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PC5_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PC5 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_api_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_api * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_circular_buffer_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_circular_buffer * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_concise_algr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_concise_algr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_haversine_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_haversine * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_iir_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_iir * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_kalman_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_kalman * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_leap_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_leap * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_lib_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_lib * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_ph_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_ph * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_pos_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_pos * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_pos_api_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_pos_api * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_poshandler_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_poshandler * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_tai_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_tai * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PH_lph_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PH_lph_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PP_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PP * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_PP_lph_pp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_PP_lph_pp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_QTI_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_QTI * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_RPS_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_RPS * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_RSICN_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_RSICN * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_SPATMAP_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_SPATMAP * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_SPATMAP_spat_cn_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_SPATMAP_spat_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_SPATMAP_spat_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_SPATMAP_spat_utils_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_SPATMAP_spat_utils * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_dump_stats_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_dump_stats * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_fac_1609_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_fac_1609 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609_dot2_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609_dot2 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609_j2735_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609_j2735 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_common_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_map_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_message_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609_j2945cc_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609_j2945cc * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609_p1609_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609_time_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609_time * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_1609time_time_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_1609time_time_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_fac_cn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_fac_cn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cn_libcnfac_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cn_libcnfac * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cn_libsaecsec_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cn_saec_bsm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cn_saec_trx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cn_saec_trx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_fac_its_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_fac_its * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_cam_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_cam * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_cpm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_denm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_denm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_evcsn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_imzm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_ivi_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_map_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_map * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_mcdm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_msg_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_msg * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_pmm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_rtcm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_sa_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_sa * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_spat_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_spat * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_srmssm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_toll_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_toll * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_trx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_trx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_uppertester_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_util_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_util * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_etsi_vam_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_etsi_vam * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_its_libitsfacilities_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_interface_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_interface * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackinterface_aerolink_scms_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackinterface_aerolink_scms * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_net_1609_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_net_1609 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609_dot3_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609_dot3 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot3_wsmp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609_dot4_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609_dot4 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4_wmac_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_net_cn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_net_cn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cn_libcnnet_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cn_libcnnet * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cn_saec_pc5_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_net_its_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_net_its * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_3gpp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_btp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_btp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_dcc_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_g5_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_gn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn6_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_etsi_pc5_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_libc2xsec_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_libc2xsec * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_libitsnet_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_libitsnet * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacknet_its_udp_btp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacknet_its_udp_btp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_plat_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_plat * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplat_libplat_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplat_libplat * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplat_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplat_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_log_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_log_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_log_udp_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_log_udp * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_pcap_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_pcap_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_pcap_raw_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_pcap_raw * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_sys_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_sys_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatlog_tcpdump_log_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplat_persistence_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplat_persistence * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplat_plugin_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplat_plugin * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplat_util_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplat_util * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatutil_Inhibit_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatutil_Inhibit * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatutil_PacketBuffer_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatutil_thread_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatutil_thread * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatutil_util_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatutil_util * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stackplatutil_worker_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stackplatutil_worker * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stack_sensors_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stack_sensors * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_can_ipc_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_can_ipc * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_can_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_can_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_can_vsc3_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_can_vsc3 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_gps_rx_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_gps_rx * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_ivi_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_ivi * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsivi_ivi_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsivi_ivi * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_rsicn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_rsicn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensors_tim_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensors_tim * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorstim_tim_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorstim_tim * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_Stacksensorstim_tim_region_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_Stacksensorstim_tim_region * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_ADR_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA_ADR * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TAADR_JSON_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TAADR_JSON * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_Map_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA_Map * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_Replay_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA_Replay * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_Threat_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA_Threat * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TA_Utils_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TA_Utils * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Classify_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_Classify * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_ETSI_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_ETSI * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Ext_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_Ext * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_J2735_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_J2735 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_J3224_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_J3224 * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Remote_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_Remote * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_SAEC_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_SAEC * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Thread_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_Thread * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TC_TC_Util_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TC_TC_Util * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TIM_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TIM * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_TM_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_TM * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_UBX_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_UBX * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_vstate_data_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS_vstate_data * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_vstate_gen_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS_vstate_gen * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_vstate_skel_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS_vstate_skel * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_vstate_stub_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS_vstate_stub * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VS_vstate_thr_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VS_vstate_thr * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_Cohda_VehicleConfig_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_Cohda_VehicleConfig * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_J2945CC_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_J2945CC * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_SAEC_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_SAEC * pParse,
  int Mode);

/**
 * @brief Parse the given key/value
 *
 * @param pKey Key to assign it to
 * @param pValue Value to parse
 * @param pParse where to store it
 * @param Mode Deprecated?
 *
 * @return 0 if parsed without error
 */
int  default_stack_SAEC_TRX_Parse(
  const char * pKey,
  const char * pValue,
  tdefault_stack_SAEC_TRX * pParse,
  int Mode);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Check(
  const tdefault_stack * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_ADR_Check(
  const tdefault_stack_Cohda_ADR * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_MAW_Check(
  const tdefault_stack_Cohda_App_MAW * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_MAW_MAW_Check(
  const tdefault_stack_Cohda_App_MAW_MAW * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_MAW_MAW_rx_Check(
  const tdefault_stack_Cohda_App_MAW_MAW_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_PCW_Check(
  const tdefault_stack_Cohda_App_PCW * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_PCW_PCW_Check(
  const tdefault_stack_Cohda_App_PCW_PCW * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_PCW_PCW_rx_Check(
  const tdefault_stack_Cohda_App_PCW_PCW_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_UAVD_Check(
  const tdefault_stack_Cohda_App_UAVD * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_VTRW_Check(
  const tdefault_stack_Cohda_App_VTRW * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_App_VTRW_Rx_Check(
  const tdefault_stack_Cohda_App_VTRW_Rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_GeoFence_Check(
  const tdefault_stack_Cohda_GeoFence * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_GeoFence_main_Check(
  const tdefault_stack_Cohda_GeoFence_main * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_GeoFence_ray_Check(
  const tdefault_stack_Cohda_GeoFence_ray * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_GeoFence_read_Check(
  const tdefault_stack_Cohda_GeoFence_read * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_HMI_Check(
  const tdefault_stack_Cohda_HMI * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_IVI_Check(
  const tdefault_stack_Cohda_IVI * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LDM_Check(
  const tdefault_stack_Cohda_LDM * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LDM_ldm_Check(
  const tdefault_stack_Cohda_LDM_ldm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LDM_ldm_online_backup_Check(
  const tdefault_stack_Cohda_LDM_ldm_online_backup * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LDM_ldm_sql_Check(
  const tdefault_stack_Cohda_LDM_ldm_sql * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LDM_ldm_thread_Check(
  const tdefault_stack_Cohda_LDM_ldm_thread * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_LTE_Check(
  const tdefault_stack_Cohda_LTE * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PC5_Check(
  const tdefault_stack_Cohda_PC5 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_Check(
  const tdefault_stack_Cohda_PH * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_api_Check(
  const tdefault_stack_Cohda_PH_lph_api * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_circular_buffer_Check(
  const tdefault_stack_Cohda_PH_lph_circular_buffer * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_concise_algr_Check(
  const tdefault_stack_Cohda_PH_lph_concise_algr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_haversine_Check(
  const tdefault_stack_Cohda_PH_lph_haversine * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_iir_Check(
  const tdefault_stack_Cohda_PH_lph_iir * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_kalman_Check(
  const tdefault_stack_Cohda_PH_lph_kalman * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_leap_Check(
  const tdefault_stack_Cohda_PH_lph_leap * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_lib_Check(
  const tdefault_stack_Cohda_PH_lph_lib * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_ph_Check(
  const tdefault_stack_Cohda_PH_lph_ph * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_pos_Check(
  const tdefault_stack_Cohda_PH_lph_pos * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_pos_api_Check(
  const tdefault_stack_Cohda_PH_lph_pos_api * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_poshandler_Check(
  const tdefault_stack_Cohda_PH_lph_poshandler * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_tai_Check(
  const tdefault_stack_Cohda_PH_lph_tai * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PH_lph_thr_Check(
  const tdefault_stack_Cohda_PH_lph_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PP_Check(
  const tdefault_stack_Cohda_PP * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_PP_lph_pp_Check(
  const tdefault_stack_Cohda_PP_lph_pp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_QTI_Check(
  const tdefault_stack_Cohda_QTI * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_RPS_Check(
  const tdefault_stack_Cohda_RPS * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_RSICN_Check(
  const tdefault_stack_Cohda_RSICN * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_SPATMAP_Check(
  const tdefault_stack_Cohda_SPATMAP * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_SPATMAP_spat_cn_rx_Check(
  const tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_SPATMAP_spat_rx_Check(
  const tdefault_stack_Cohda_SPATMAP_spat_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_SPATMAP_spat_utils_Check(
  const tdefault_stack_Cohda_SPATMAP_spat_utils * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_Check(
  const tdefault_stack_Cohda_Stack * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_dump_stats_Check(
  const tdefault_stack_Cohda_Stack_dump_stats * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_fac_1609_Check(
  const tdefault_stack_Cohda_Stack_fac_1609 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609_dot2_Check(
  const tdefault_stack_Cohda_Stackfac_1609_dot2 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_Check(
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Check(
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609_j2735_Check(
  const tdefault_stack_Cohda_Stackfac_1609_j2735 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_common_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_map_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_message_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609_j2945cc_Check(
  const tdefault_stack_Cohda_Stackfac_1609_j2945cc * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Check(
  const tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609_p1609_tx_Check(
  const tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Check(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Check(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Check(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Check(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609_time_Check(
  const tdefault_stack_Cohda_Stackfac_1609_time * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_1609time_time_thr_Check(
  const tdefault_stack_Cohda_Stackfac_1609time_time_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_fac_cn_Check(
  const tdefault_stack_Cohda_Stack_fac_cn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cn_libcnfac_Check(
  const tdefault_stack_Cohda_Stackfac_cn_libcnfac * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cn_libsaecsec_Check(
  const tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cn_saec_bsm_Check(
  const tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Check(
  const tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cn_saec_trx_Check(
  const tdefault_stack_Cohda_Stackfac_cn_saec_trx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Check(
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Check(
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_fac_its_Check(
  const tdefault_stack_Cohda_Stack_fac_its * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_cam_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_cam * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_cpm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_denm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_denm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_evcsn_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_imzm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_ivi_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_map_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_map * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_mcdm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_msg_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_msg * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_pmm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_rtcm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_sa_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_sa * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_spat_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_spat * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_srmssm_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_toll_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_toll * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_trx_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_trx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_uppertester_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Check(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_util_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_util * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_etsi_vam_Check(
  const tdefault_stack_Cohda_Stackfac_its_etsi_vam * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_its_libitsfacilities_Check(
  const tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Check(
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Check(
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_interface_Check(
  const tdefault_stack_Cohda_Stack_interface * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackinterface_aerolink_scms_Check(
  const tdefault_stack_Cohda_Stackinterface_aerolink_scms * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_net_1609_Check(
  const tdefault_stack_Cohda_Stack_net_1609 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609_dot3_Check(
  const tdefault_stack_Cohda_Stacknet_1609_dot3 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot3_wsmp_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609_dot4_Check(
  const tdefault_stack_Cohda_Stacknet_1609_dot4 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4_wmac_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Check(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_net_cn_Check(
  const tdefault_stack_Cohda_Stack_net_cn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cn_libcnnet_Check(
  const tdefault_stack_Cohda_Stacknet_cn_libcnnet * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Check(
  const tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cn_saec_pc5_Check(
  const tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Check(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Check(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_net_its_Check(
  const tdefault_stack_Cohda_Stack_net_its * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_3gpp_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_btp_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_btp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_dcc_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_g5_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn6_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_etsi_pc5_Check(
  const tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Check(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_libc2xsec_Check(
  const tdefault_stack_Cohda_Stacknet_its_libc2xsec * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Check(
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Check(
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_libitsnet_Check(
  const tdefault_stack_Cohda_Stacknet_its_libitsnet * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Check(
  const tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Check(
  const tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacknet_its_udp_btp_Check(
  const tdefault_stack_Cohda_Stacknet_its_udp_btp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_plat_Check(
  const tdefault_stack_Cohda_Stack_plat * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplat_libplat_Check(
  const tdefault_stack_Cohda_Stackplat_libplat * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Check(
  const tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplat_log_Check(
  const tdefault_stack_Cohda_Stackplat_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_log_Check(
  const tdefault_stack_Cohda_Stackplatlog_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_log_thr_Check(
  const tdefault_stack_Cohda_Stackplatlog_log_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_log_udp_Check(
  const tdefault_stack_Cohda_Stackplatlog_log_udp * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_pcap_log_Check(
  const tdefault_stack_Cohda_Stackplatlog_pcap_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_pcap_raw_Check(
  const tdefault_stack_Cohda_Stackplatlog_pcap_raw * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_sys_log_Check(
  const tdefault_stack_Cohda_Stackplatlog_sys_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatlog_tcpdump_log_Check(
  const tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplat_persistence_Check(
  const tdefault_stack_Cohda_Stackplat_persistence * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplat_plugin_Check(
  const tdefault_stack_Cohda_Stackplat_plugin * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Check(
  const tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplat_util_Check(
  const tdefault_stack_Cohda_Stackplat_util * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatutil_Inhibit_Check(
  const tdefault_stack_Cohda_Stackplatutil_Inhibit * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatutil_PacketBuffer_Check(
  const tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatutil_thread_Check(
  const tdefault_stack_Cohda_Stackplatutil_thread * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatutil_util_Check(
  const tdefault_stack_Cohda_Stackplatutil_util * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stackplatutil_worker_Check(
  const tdefault_stack_Cohda_Stackplatutil_worker * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stack_sensors_Check(
  const tdefault_stack_Cohda_Stack_sensors * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_can_ipc_Check(
  const tdefault_stack_Cohda_Stacksensors_can_ipc * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Check(
  const tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_can_rx_Check(
  const tdefault_stack_Cohda_Stacksensors_can_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Check(
  const tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_can_vsc3_Check(
  const tdefault_stack_Cohda_Stacksensors_can_vsc3 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Check(
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Check(
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_gps_rx_Check(
  const tdefault_stack_Cohda_Stacksensors_gps_rx * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Check(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_ivi_Check(
  const tdefault_stack_Cohda_Stacksensors_ivi * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsivi_ivi_Check(
  const tdefault_stack_Cohda_Stacksensorsivi_ivi * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_rsicn_Check(
  const tdefault_stack_Cohda_Stacksensors_rsicn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_Check(
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Check(
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensors_tim_Check(
  const tdefault_stack_Cohda_Stacksensors_tim * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorstim_tim_Check(
  const tdefault_stack_Cohda_Stacksensorstim_tim * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_Stacksensorstim_tim_region_Check(
  const tdefault_stack_Cohda_Stacksensorstim_tim_region * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_Check(
  const tdefault_stack_Cohda_TA * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_ADR_Check(
  const tdefault_stack_Cohda_TA_ADR * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TAADR_JSON_Check(
  const tdefault_stack_Cohda_TAADR_JSON * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_Map_Check(
  const tdefault_stack_Cohda_TA_Map * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_Replay_Check(
  const tdefault_stack_Cohda_TA_Replay * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_Threat_Check(
  const tdefault_stack_Cohda_TA_Threat * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TA_Utils_Check(
  const tdefault_stack_Cohda_TA_Utils * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_Check(
  const tdefault_stack_Cohda_TC * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Check(
  const tdefault_stack_Cohda_TC_TC * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Classify_Check(
  const tdefault_stack_Cohda_TC_TC_Classify * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_ETSI_Check(
  const tdefault_stack_Cohda_TC_TC_ETSI * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Ext_Check(
  const tdefault_stack_Cohda_TC_TC_Ext * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_J2735_Check(
  const tdefault_stack_Cohda_TC_TC_J2735 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_J3224_Check(
  const tdefault_stack_Cohda_TC_TC_J3224 * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Remote_Check(
  const tdefault_stack_Cohda_TC_TC_Remote * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_SAEC_Check(
  const tdefault_stack_Cohda_TC_TC_SAEC * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Thread_Check(
  const tdefault_stack_Cohda_TC_TC_Thread * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TC_TC_Util_Check(
  const tdefault_stack_Cohda_TC_TC_Util * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TIM_Check(
  const tdefault_stack_Cohda_TIM * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_TM_Check(
  const tdefault_stack_Cohda_TM * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_UBX_Check(
  const tdefault_stack_Cohda_UBX * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_Check(
  const tdefault_stack_Cohda_VS * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_vstate_data_Check(
  const tdefault_stack_Cohda_VS_vstate_data * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_vstate_gen_Check(
  const tdefault_stack_Cohda_VS_vstate_gen * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_vstate_skel_Check(
  const tdefault_stack_Cohda_VS_vstate_skel * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_vstate_stub_Check(
  const tdefault_stack_Cohda_VS_vstate_stub * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VS_vstate_thr_Check(
  const tdefault_stack_Cohda_VS_vstate_thr * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_Cohda_VehicleConfig_Check(
  const tdefault_stack_Cohda_VehicleConfig * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_J2945CC_Check(
  const tdefault_stack_J2945CC * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_SAEC_Check(
  const tdefault_stack_SAEC * pCheck);

/**
 * @brief Sanity Check
 *
 * @param pCheck what to check
 *
 * @return 0 iff sane
 */
int  default_stack_SAEC_TRX_Check(
  const tdefault_stack_SAEC_TRX * pCheck);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Copy with pSrc set to NULL
 */
int  default_stack_Init(
  tdefault_stack * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_ADR_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_ADR_Init(
  tdefault_stack_Cohda_ADR * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_MAW_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_MAW_Init(
  tdefault_stack_Cohda_App_MAW * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_MAW_MAW_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_MAW_MAW_Init(
  tdefault_stack_Cohda_App_MAW_MAW * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_MAW_MAW_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_MAW_MAW_rx_Init(
  tdefault_stack_Cohda_App_MAW_MAW_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_PCW_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_PCW_Init(
  tdefault_stack_Cohda_App_PCW * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_PCW_PCW_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_PCW_PCW_Init(
  tdefault_stack_Cohda_App_PCW_PCW * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_PCW_PCW_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_PCW_PCW_rx_Init(
  tdefault_stack_Cohda_App_PCW_PCW_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_UAVD_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_UAVD_Init(
  tdefault_stack_Cohda_App_UAVD * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_VTRW_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_VTRW_Init(
  tdefault_stack_Cohda_App_VTRW * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_App_VTRW_Rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_App_VTRW_Rx_Init(
  tdefault_stack_Cohda_App_VTRW_Rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_GeoFence_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_GeoFence_Init(
  tdefault_stack_Cohda_GeoFence * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_GeoFence_main_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_GeoFence_main_Init(
  tdefault_stack_Cohda_GeoFence_main * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_GeoFence_ray_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_GeoFence_ray_Init(
  tdefault_stack_Cohda_GeoFence_ray * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_GeoFence_read_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_GeoFence_read_Init(
  tdefault_stack_Cohda_GeoFence_read * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_HMI_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_HMI_Init(
  tdefault_stack_Cohda_HMI * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_IVI_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_IVI_Init(
  tdefault_stack_Cohda_IVI * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LDM_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LDM_Init(
  tdefault_stack_Cohda_LDM * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LDM_ldm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LDM_ldm_Init(
  tdefault_stack_Cohda_LDM_ldm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LDM_ldm_online_backup_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LDM_ldm_online_backup_Init(
  tdefault_stack_Cohda_LDM_ldm_online_backup * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LDM_ldm_sql_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LDM_ldm_sql_Init(
  tdefault_stack_Cohda_LDM_ldm_sql * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LDM_ldm_thread_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LDM_ldm_thread_Init(
  tdefault_stack_Cohda_LDM_ldm_thread * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_LTE_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_LTE_Init(
  tdefault_stack_Cohda_LTE * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PC5_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PC5_Init(
  tdefault_stack_Cohda_PC5 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_Init(
  tdefault_stack_Cohda_PH * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_api_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_api_Init(
  tdefault_stack_Cohda_PH_lph_api * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_circular_buffer_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_circular_buffer_Init(
  tdefault_stack_Cohda_PH_lph_circular_buffer * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_concise_algr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_concise_algr_Init(
  tdefault_stack_Cohda_PH_lph_concise_algr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_haversine_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_haversine_Init(
  tdefault_stack_Cohda_PH_lph_haversine * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_iir_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_iir_Init(
  tdefault_stack_Cohda_PH_lph_iir * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_kalman_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_kalman_Init(
  tdefault_stack_Cohda_PH_lph_kalman * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_leap_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_leap_Init(
  tdefault_stack_Cohda_PH_lph_leap * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_lib_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_lib_Init(
  tdefault_stack_Cohda_PH_lph_lib * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_ph_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_ph_Init(
  tdefault_stack_Cohda_PH_lph_ph * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_pos_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_pos_Init(
  tdefault_stack_Cohda_PH_lph_pos * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_pos_api_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_pos_api_Init(
  tdefault_stack_Cohda_PH_lph_pos_api * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_poshandler_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_poshandler_Init(
  tdefault_stack_Cohda_PH_lph_poshandler * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_tai_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_tai_Init(
  tdefault_stack_Cohda_PH_lph_tai * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PH_lph_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PH_lph_thr_Init(
  tdefault_stack_Cohda_PH_lph_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PP_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PP_Init(
  tdefault_stack_Cohda_PP * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_PP_lph_pp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_PP_lph_pp_Init(
  tdefault_stack_Cohda_PP_lph_pp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_QTI_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_QTI_Init(
  tdefault_stack_Cohda_QTI * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_RPS_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_RPS_Init(
  tdefault_stack_Cohda_RPS * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_RSICN_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_RSICN_Init(
  tdefault_stack_Cohda_RSICN * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_SPATMAP_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_SPATMAP_Init(
  tdefault_stack_Cohda_SPATMAP * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_SPATMAP_spat_cn_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_SPATMAP_spat_cn_rx_Init(
  tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_SPATMAP_spat_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_SPATMAP_spat_rx_Init(
  tdefault_stack_Cohda_SPATMAP_spat_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_SPATMAP_spat_utils_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_SPATMAP_spat_utils_Init(
  tdefault_stack_Cohda_SPATMAP_spat_utils * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_Init(
  tdefault_stack_Cohda_Stack * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_dump_stats_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_dump_stats_Init(
  tdefault_stack_Cohda_Stack_dump_stats * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_fac_1609_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_fac_1609_Init(
  tdefault_stack_Cohda_Stack_fac_1609 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609_dot2_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609_dot2_Init(
  tdefault_stack_Cohda_Stackfac_1609_dot2 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609dot2_dot2_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_Init(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Init(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609_j2735_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609_j2735_Init(
  tdefault_stack_Cohda_Stackfac_1609_j2735 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_common_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_common_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_map_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_map_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_message_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_message_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Init(
  tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609_j2945cc_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609_j2945cc_Init(
  tdefault_stack_Cohda_Stackfac_1609_j2945cc * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Init(
  tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609_p1609_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609_p1609_tx_Init(
  tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Init(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Init(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Init(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Init(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609_time_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609_time_Init(
  tdefault_stack_Cohda_Stackfac_1609_time * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_1609time_time_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_1609time_time_thr_Init(
  tdefault_stack_Cohda_Stackfac_1609time_time_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_fac_cn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_fac_cn_Init(
  tdefault_stack_Cohda_Stack_fac_cn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cn_libcnfac_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cn_libcnfac_Init(
  tdefault_stack_Cohda_Stackfac_cn_libcnfac * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cn_libsaecsec_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cn_libsaecsec_Init(
  tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cn_saec_bsm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cn_saec_bsm_Init(
  tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Init(
  tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cn_saec_trx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cn_saec_trx_Init(
  tdefault_stack_Cohda_Stackfac_cn_saec_trx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Init(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Init(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_fac_its_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_fac_its_Init(
  tdefault_stack_Cohda_Stack_fac_its * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_cam_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_cam_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_cam * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_cpm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_cpm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_denm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_denm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_denm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_evcsn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_evcsn_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_imzm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_imzm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_ivi_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_ivi_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_map_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_map_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_map * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_mcdm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_mcdm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_msg_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_msg_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_msg * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_pmm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_pmm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_rtcm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_rtcm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_sa_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_sa_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_sa * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_spat_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_spat_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_spat * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_srmssm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_srmssm_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_toll_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_toll_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_toll * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_trx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_trx_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_trx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_uppertester_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_uppertester_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Init(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_util_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_util_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_util * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_etsi_vam_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_vam_Init(
  tdefault_stack_Cohda_Stackfac_its_etsi_vam * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_its_libitsfacilities_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_its_libitsfacilities_Init(
  tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Init(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Init(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_interface_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_interface_Init(
  tdefault_stack_Cohda_Stack_interface * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackinterface_aerolink_scms_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackinterface_aerolink_scms_Init(
  tdefault_stack_Cohda_Stackinterface_aerolink_scms * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_net_1609_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_net_1609_Init(
  tdefault_stack_Cohda_Stack_net_1609 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609_dot3_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609_dot3_Init(
  tdefault_stack_Cohda_Stacknet_1609_dot3 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot3_wsmp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3_wsmp_Init(
  tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Init(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Init(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609_dot4_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609_dot4_Init(
  tdefault_stack_Cohda_Stacknet_1609_dot4 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4_wmac_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4_wmac_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Init(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_net_cn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_net_cn_Init(
  tdefault_stack_Cohda_Stack_net_cn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cn_libcnnet_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cn_libcnnet_Init(
  tdefault_stack_Cohda_Stacknet_cn_libcnnet * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Init(
  tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cn_saec_pc5_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cn_saec_pc5_Init(
  tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Init(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Init(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_net_its_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_net_its_Init(
  tdefault_stack_Cohda_Stack_net_its * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_3gpp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_3gpp_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_btp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_btp_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_btp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_dcc_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_dcc_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_g5_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_g5_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_gn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_gn6_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn6_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_etsi_pc5_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_pc5_Init(
  tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Init(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_libc2xsec_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_libc2xsec_Init(
  tdefault_stack_Cohda_Stacknet_its_libc2xsec * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Init(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Init(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_libitsnet_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_libitsnet_Init(
  tdefault_stack_Cohda_Stacknet_its_libitsnet * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Init(
  tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Init(
  tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacknet_its_udp_btp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacknet_its_udp_btp_Init(
  tdefault_stack_Cohda_Stacknet_its_udp_btp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_plat_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_plat_Init(
  tdefault_stack_Cohda_Stack_plat * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplat_libplat_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplat_libplat_Init(
  tdefault_stack_Cohda_Stackplat_libplat * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Init(
  tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplat_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplat_log_Init(
  tdefault_stack_Cohda_Stackplat_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_log_Init(
  tdefault_stack_Cohda_Stackplatlog_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_log_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_log_thr_Init(
  tdefault_stack_Cohda_Stackplatlog_log_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_log_udp_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_log_udp_Init(
  tdefault_stack_Cohda_Stackplatlog_log_udp * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_pcap_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_pcap_log_Init(
  tdefault_stack_Cohda_Stackplatlog_pcap_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_pcap_raw_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_pcap_raw_Init(
  tdefault_stack_Cohda_Stackplatlog_pcap_raw * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_sys_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_sys_log_Init(
  tdefault_stack_Cohda_Stackplatlog_sys_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatlog_tcpdump_log_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatlog_tcpdump_log_Init(
  tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplat_persistence_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplat_persistence_Init(
  tdefault_stack_Cohda_Stackplat_persistence * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplat_plugin_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplat_plugin_Init(
  tdefault_stack_Cohda_Stackplat_plugin * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Init(
  tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplat_util_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplat_util_Init(
  tdefault_stack_Cohda_Stackplat_util * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatutil_Inhibit_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatutil_Inhibit_Init(
  tdefault_stack_Cohda_Stackplatutil_Inhibit * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatutil_PacketBuffer_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatutil_PacketBuffer_Init(
  tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatutil_thread_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatutil_thread_Init(
  tdefault_stack_Cohda_Stackplatutil_thread * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatutil_util_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatutil_util_Init(
  tdefault_stack_Cohda_Stackplatutil_util * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stackplatutil_worker_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stackplatutil_worker_Init(
  tdefault_stack_Cohda_Stackplatutil_worker * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stack_sensors_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stack_sensors_Init(
  tdefault_stack_Cohda_Stack_sensors * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_can_ipc_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_can_ipc_Init(
  tdefault_stack_Cohda_Stacksensors_can_ipc * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Init(
  tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_can_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_can_rx_Init(
  tdefault_stack_Cohda_Stacksensors_can_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Init(
  tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_can_vsc3_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_can_vsc3_Init(
  tdefault_stack_Cohda_Stacksensors_can_vsc3 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Init(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Init(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_gps_rx_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_gps_rx_Init(
  tdefault_stack_Cohda_Stacksensors_gps_rx * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Init(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_ivi_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_ivi_Init(
  tdefault_stack_Cohda_Stacksensors_ivi * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsivi_ivi_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsivi_ivi_Init(
  tdefault_stack_Cohda_Stacksensorsivi_ivi * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_rsicn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_rsicn_Init(
  tdefault_stack_Cohda_Stacksensors_rsicn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsrsicn_rsicn_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_Init(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Init(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensors_tim_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensors_tim_Init(
  tdefault_stack_Cohda_Stacksensors_tim * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorstim_tim_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorstim_tim_Init(
  tdefault_stack_Cohda_Stacksensorstim_tim * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_Stacksensorstim_tim_region_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_Stacksensorstim_tim_region_Init(
  tdefault_stack_Cohda_Stacksensorstim_tim_region * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_Init(
  tdefault_stack_Cohda_TA * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_ADR_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_ADR_Init(
  tdefault_stack_Cohda_TA_ADR * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TAADR_JSON_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TAADR_JSON_Init(
  tdefault_stack_Cohda_TAADR_JSON * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_Map_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_Map_Init(
  tdefault_stack_Cohda_TA_Map * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_Replay_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_Replay_Init(
  tdefault_stack_Cohda_TA_Replay * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_Threat_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_Threat_Init(
  tdefault_stack_Cohda_TA_Threat * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TA_Utils_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TA_Utils_Init(
  tdefault_stack_Cohda_TA_Utils * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_Init(
  tdefault_stack_Cohda_TC * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Init(
  tdefault_stack_Cohda_TC_TC * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Classify_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Classify_Init(
  tdefault_stack_Cohda_TC_TC_Classify * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_ETSI_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_ETSI_Init(
  tdefault_stack_Cohda_TC_TC_ETSI * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Ext_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Ext_Init(
  tdefault_stack_Cohda_TC_TC_Ext * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_J2735_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_J2735_Init(
  tdefault_stack_Cohda_TC_TC_J2735 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_J3224_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_J3224_Init(
  tdefault_stack_Cohda_TC_TC_J3224 * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Remote_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Remote_Init(
  tdefault_stack_Cohda_TC_TC_Remote * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_SAEC_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_SAEC_Init(
  tdefault_stack_Cohda_TC_TC_SAEC * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Thread_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Thread_Init(
  tdefault_stack_Cohda_TC_TC_Thread * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TC_TC_Util_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TC_TC_Util_Init(
  tdefault_stack_Cohda_TC_TC_Util * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TIM_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TIM_Init(
  tdefault_stack_Cohda_TIM * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_TM_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_TM_Init(
  tdefault_stack_Cohda_TM * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_UBX_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_UBX_Init(
  tdefault_stack_Cohda_UBX * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_Init(
  tdefault_stack_Cohda_VS * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_vstate_data_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_vstate_data_Init(
  tdefault_stack_Cohda_VS_vstate_data * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_vstate_gen_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_vstate_gen_Init(
  tdefault_stack_Cohda_VS_vstate_gen * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_vstate_skel_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_vstate_skel_Init(
  tdefault_stack_Cohda_VS_vstate_skel * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_vstate_stub_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_vstate_stub_Init(
  tdefault_stack_Cohda_VS_vstate_stub * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VS_vstate_thr_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VS_vstate_thr_Init(
  tdefault_stack_Cohda_VS_vstate_thr * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_Cohda_VehicleConfig_Copy with pSrc set to NULL
 */
int  default_stack_Cohda_VehicleConfig_Init(
  tdefault_stack_Cohda_VehicleConfig * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_J2945CC_Copy with pSrc set to NULL
 */
int  default_stack_J2945CC_Init(
  tdefault_stack_J2945CC * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_SAEC_Copy with pSrc set to NULL
 */
int  default_stack_SAEC_Init(
  tdefault_stack_SAEC * pInit);

/**
 * @brief Load with compiled-in defaults
 *
 * This is probably not what you want.
 * Try @ref default_stack_SAEC_TRX_Copy with pSrc set to NULL
 */
int  default_stack_SAEC_TRX_Init(
  tdefault_stack_SAEC_TRX * pInit);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Clean(
  tdefault_stack * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_ADR_Clean(
  tdefault_stack_Cohda_ADR * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_MAW_Clean(
  tdefault_stack_Cohda_App_MAW * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_MAW_MAW_Clean(
  tdefault_stack_Cohda_App_MAW_MAW * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_MAW_MAW_rx_Clean(
  tdefault_stack_Cohda_App_MAW_MAW_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_PCW_Clean(
  tdefault_stack_Cohda_App_PCW * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_PCW_PCW_Clean(
  tdefault_stack_Cohda_App_PCW_PCW * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_PCW_PCW_rx_Clean(
  tdefault_stack_Cohda_App_PCW_PCW_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_UAVD_Clean(
  tdefault_stack_Cohda_App_UAVD * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_VTRW_Clean(
  tdefault_stack_Cohda_App_VTRW * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_App_VTRW_Rx_Clean(
  tdefault_stack_Cohda_App_VTRW_Rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_GeoFence_Clean(
  tdefault_stack_Cohda_GeoFence * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_GeoFence_main_Clean(
  tdefault_stack_Cohda_GeoFence_main * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_GeoFence_ray_Clean(
  tdefault_stack_Cohda_GeoFence_ray * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_GeoFence_read_Clean(
  tdefault_stack_Cohda_GeoFence_read * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_HMI_Clean(
  tdefault_stack_Cohda_HMI * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_IVI_Clean(
  tdefault_stack_Cohda_IVI * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LDM_Clean(
  tdefault_stack_Cohda_LDM * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LDM_ldm_Clean(
  tdefault_stack_Cohda_LDM_ldm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LDM_ldm_online_backup_Clean(
  tdefault_stack_Cohda_LDM_ldm_online_backup * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LDM_ldm_sql_Clean(
  tdefault_stack_Cohda_LDM_ldm_sql * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LDM_ldm_thread_Clean(
  tdefault_stack_Cohda_LDM_ldm_thread * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_LTE_Clean(
  tdefault_stack_Cohda_LTE * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PC5_Clean(
  tdefault_stack_Cohda_PC5 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_Clean(
  tdefault_stack_Cohda_PH * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_api_Clean(
  tdefault_stack_Cohda_PH_lph_api * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_circular_buffer_Clean(
  tdefault_stack_Cohda_PH_lph_circular_buffer * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_concise_algr_Clean(
  tdefault_stack_Cohda_PH_lph_concise_algr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_haversine_Clean(
  tdefault_stack_Cohda_PH_lph_haversine * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_iir_Clean(
  tdefault_stack_Cohda_PH_lph_iir * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_kalman_Clean(
  tdefault_stack_Cohda_PH_lph_kalman * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_leap_Clean(
  tdefault_stack_Cohda_PH_lph_leap * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_lib_Clean(
  tdefault_stack_Cohda_PH_lph_lib * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_ph_Clean(
  tdefault_stack_Cohda_PH_lph_ph * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_pos_Clean(
  tdefault_stack_Cohda_PH_lph_pos * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_pos_api_Clean(
  tdefault_stack_Cohda_PH_lph_pos_api * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_poshandler_Clean(
  tdefault_stack_Cohda_PH_lph_poshandler * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_tai_Clean(
  tdefault_stack_Cohda_PH_lph_tai * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PH_lph_thr_Clean(
  tdefault_stack_Cohda_PH_lph_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PP_Clean(
  tdefault_stack_Cohda_PP * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_PP_lph_pp_Clean(
  tdefault_stack_Cohda_PP_lph_pp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_QTI_Clean(
  tdefault_stack_Cohda_QTI * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_RPS_Clean(
  tdefault_stack_Cohda_RPS * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_RSICN_Clean(
  tdefault_stack_Cohda_RSICN * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_SPATMAP_Clean(
  tdefault_stack_Cohda_SPATMAP * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_SPATMAP_spat_cn_rx_Clean(
  tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_SPATMAP_spat_rx_Clean(
  tdefault_stack_Cohda_SPATMAP_spat_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_SPATMAP_spat_utils_Clean(
  tdefault_stack_Cohda_SPATMAP_spat_utils * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_Clean(
  tdefault_stack_Cohda_Stack * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_dump_stats_Clean(
  tdefault_stack_Cohda_Stack_dump_stats * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_fac_1609_Clean(
  tdefault_stack_Cohda_Stack_fac_1609 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609_dot2_Clean(
  tdefault_stack_Cohda_Stackfac_1609_dot2 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609dot2_dot2_Clean(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Clean(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609_j2735_Clean(
  tdefault_stack_Cohda_Stackfac_1609_j2735 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_common_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_map_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_message_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609_j2945cc_Clean(
  tdefault_stack_Cohda_Stackfac_1609_j2945cc * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Clean(
  tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609_p1609_tx_Clean(
  tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Clean(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Clean(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Clean(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Clean(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609_time_Clean(
  tdefault_stack_Cohda_Stackfac_1609_time * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_1609time_time_thr_Clean(
  tdefault_stack_Cohda_Stackfac_1609time_time_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_fac_cn_Clean(
  tdefault_stack_Cohda_Stack_fac_cn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cn_libcnfac_Clean(
  tdefault_stack_Cohda_Stackfac_cn_libcnfac * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cn_libsaecsec_Clean(
  tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cn_saec_bsm_Clean(
  tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Clean(
  tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cn_saec_trx_Clean(
  tdefault_stack_Cohda_Stackfac_cn_saec_trx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Clean(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Clean(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_fac_its_Clean(
  tdefault_stack_Cohda_Stack_fac_its * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_cam_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_cam * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_cpm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_denm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_denm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_evcsn_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_imzm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_ivi_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_map_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_map * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_mcdm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_msg_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_msg * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_pmm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_rtcm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_sa_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_sa * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_spat_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_spat * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_srmssm_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_toll_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_toll * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_trx_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_trx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_uppertester_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Clean(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_util_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_util * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_etsi_vam_Clean(
  tdefault_stack_Cohda_Stackfac_its_etsi_vam * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_its_libitsfacilities_Clean(
  tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Clean(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Clean(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_interface_Clean(
  tdefault_stack_Cohda_Stack_interface * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackinterface_aerolink_scms_Clean(
  tdefault_stack_Cohda_Stackinterface_aerolink_scms * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_net_1609_Clean(
  tdefault_stack_Cohda_Stack_net_1609 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609_dot3_Clean(
  tdefault_stack_Cohda_Stacknet_1609_dot3 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot3_wsmp_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609_dot4_Clean(
  tdefault_stack_Cohda_Stacknet_1609_dot4 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4_wmac_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Clean(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_net_cn_Clean(
  tdefault_stack_Cohda_Stack_net_cn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cn_libcnnet_Clean(
  tdefault_stack_Cohda_Stacknet_cn_libcnnet * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Clean(
  tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cn_saec_pc5_Clean(
  tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Clean(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Clean(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_net_its_Clean(
  tdefault_stack_Cohda_Stack_net_its * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_3gpp_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_btp_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_btp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_dcc_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_g5_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_gn_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_gn6_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_etsi_pc5_Clean(
  tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Clean(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_libc2xsec_Clean(
  tdefault_stack_Cohda_Stacknet_its_libc2xsec * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Clean(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Clean(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_libitsnet_Clean(
  tdefault_stack_Cohda_Stacknet_its_libitsnet * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Clean(
  tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Clean(
  tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacknet_its_udp_btp_Clean(
  tdefault_stack_Cohda_Stacknet_its_udp_btp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_plat_Clean(
  tdefault_stack_Cohda_Stack_plat * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplat_libplat_Clean(
  tdefault_stack_Cohda_Stackplat_libplat * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Clean(
  tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplat_log_Clean(
  tdefault_stack_Cohda_Stackplat_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_log_Clean(
  tdefault_stack_Cohda_Stackplatlog_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_log_thr_Clean(
  tdefault_stack_Cohda_Stackplatlog_log_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_log_udp_Clean(
  tdefault_stack_Cohda_Stackplatlog_log_udp * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_pcap_log_Clean(
  tdefault_stack_Cohda_Stackplatlog_pcap_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_pcap_raw_Clean(
  tdefault_stack_Cohda_Stackplatlog_pcap_raw * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_sys_log_Clean(
  tdefault_stack_Cohda_Stackplatlog_sys_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatlog_tcpdump_log_Clean(
  tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplat_persistence_Clean(
  tdefault_stack_Cohda_Stackplat_persistence * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplat_plugin_Clean(
  tdefault_stack_Cohda_Stackplat_plugin * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Clean(
  tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplat_util_Clean(
  tdefault_stack_Cohda_Stackplat_util * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatutil_Inhibit_Clean(
  tdefault_stack_Cohda_Stackplatutil_Inhibit * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatutil_PacketBuffer_Clean(
  tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatutil_thread_Clean(
  tdefault_stack_Cohda_Stackplatutil_thread * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatutil_util_Clean(
  tdefault_stack_Cohda_Stackplatutil_util * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stackplatutil_worker_Clean(
  tdefault_stack_Cohda_Stackplatutil_worker * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stack_sensors_Clean(
  tdefault_stack_Cohda_Stack_sensors * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_can_ipc_Clean(
  tdefault_stack_Cohda_Stacksensors_can_ipc * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Clean(
  tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_can_rx_Clean(
  tdefault_stack_Cohda_Stacksensors_can_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Clean(
  tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_can_vsc3_Clean(
  tdefault_stack_Cohda_Stacksensors_can_vsc3 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Clean(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Clean(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_gps_rx_Clean(
  tdefault_stack_Cohda_Stacksensors_gps_rx * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Clean(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_ivi_Clean(
  tdefault_stack_Cohda_Stacksensors_ivi * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsivi_ivi_Clean(
  tdefault_stack_Cohda_Stacksensorsivi_ivi * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_rsicn_Clean(
  tdefault_stack_Cohda_Stacksensors_rsicn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsrsicn_rsicn_Clean(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Clean(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensors_tim_Clean(
  tdefault_stack_Cohda_Stacksensors_tim * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorstim_tim_Clean(
  tdefault_stack_Cohda_Stacksensorstim_tim * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_Stacksensorstim_tim_region_Clean(
  tdefault_stack_Cohda_Stacksensorstim_tim_region * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_Clean(
  tdefault_stack_Cohda_TA * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_ADR_Clean(
  tdefault_stack_Cohda_TA_ADR * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TAADR_JSON_Clean(
  tdefault_stack_Cohda_TAADR_JSON * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_Map_Clean(
  tdefault_stack_Cohda_TA_Map * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_Replay_Clean(
  tdefault_stack_Cohda_TA_Replay * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_Threat_Clean(
  tdefault_stack_Cohda_TA_Threat * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TA_Utils_Clean(
  tdefault_stack_Cohda_TA_Utils * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_Clean(
  tdefault_stack_Cohda_TC * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Clean(
  tdefault_stack_Cohda_TC_TC * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Classify_Clean(
  tdefault_stack_Cohda_TC_TC_Classify * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_ETSI_Clean(
  tdefault_stack_Cohda_TC_TC_ETSI * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Ext_Clean(
  tdefault_stack_Cohda_TC_TC_Ext * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_J2735_Clean(
  tdefault_stack_Cohda_TC_TC_J2735 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_J3224_Clean(
  tdefault_stack_Cohda_TC_TC_J3224 * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Remote_Clean(
  tdefault_stack_Cohda_TC_TC_Remote * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_SAEC_Clean(
  tdefault_stack_Cohda_TC_TC_SAEC * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Thread_Clean(
  tdefault_stack_Cohda_TC_TC_Thread * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TC_TC_Util_Clean(
  tdefault_stack_Cohda_TC_TC_Util * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TIM_Clean(
  tdefault_stack_Cohda_TIM * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_TM_Clean(
  tdefault_stack_Cohda_TM * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_UBX_Clean(
  tdefault_stack_Cohda_UBX * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_Clean(
  tdefault_stack_Cohda_VS * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_vstate_data_Clean(
  tdefault_stack_Cohda_VS_vstate_data * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_vstate_gen_Clean(
  tdefault_stack_Cohda_VS_vstate_gen * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_vstate_skel_Clean(
  tdefault_stack_Cohda_VS_vstate_skel * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_vstate_stub_Clean(
  tdefault_stack_Cohda_VS_vstate_stub * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VS_vstate_thr_Clean(
  tdefault_stack_Cohda_VS_vstate_thr * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_Cohda_VehicleConfig_Clean(
  tdefault_stack_Cohda_VehicleConfig * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_J2945CC_Clean(
  tdefault_stack_J2945CC * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_SAEC_Clean(
  tdefault_stack_SAEC * pClean);

/**
 * @brief Clean up
 *
 * pClean is not free(d)'d
 *
 * @param pClean what to clean
 */
void default_stack_SAEC_TRX_Clean(
  tdefault_stack_SAEC_TRX * pClean);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Copy(
  tdefault_stack * pDst,
  const tdefault_stack * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_ADR_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_ADR_Copy(
  tdefault_stack_Cohda_ADR * pDst,
  const tdefault_stack_Cohda_ADR * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_MAW_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_MAW_Copy(
  tdefault_stack_Cohda_App_MAW * pDst,
  const tdefault_stack_Cohda_App_MAW * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_MAW_MAW_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_MAW_MAW_Copy(
  tdefault_stack_Cohda_App_MAW_MAW * pDst,
  const tdefault_stack_Cohda_App_MAW_MAW * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_MAW_MAW_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_MAW_MAW_rx_Copy(
  tdefault_stack_Cohda_App_MAW_MAW_rx * pDst,
  const tdefault_stack_Cohda_App_MAW_MAW_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_PCW_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_PCW_Copy(
  tdefault_stack_Cohda_App_PCW * pDst,
  const tdefault_stack_Cohda_App_PCW * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_PCW_PCW_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_PCW_PCW_Copy(
  tdefault_stack_Cohda_App_PCW_PCW * pDst,
  const tdefault_stack_Cohda_App_PCW_PCW * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_PCW_PCW_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_PCW_PCW_rx_Copy(
  tdefault_stack_Cohda_App_PCW_PCW_rx * pDst,
  const tdefault_stack_Cohda_App_PCW_PCW_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_UAVD_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_UAVD_Copy(
  tdefault_stack_Cohda_App_UAVD * pDst,
  const tdefault_stack_Cohda_App_UAVD * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_VTRW_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_VTRW_Copy(
  tdefault_stack_Cohda_App_VTRW * pDst,
  const tdefault_stack_Cohda_App_VTRW * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_App_VTRW_Rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_App_VTRW_Rx_Copy(
  tdefault_stack_Cohda_App_VTRW_Rx * pDst,
  const tdefault_stack_Cohda_App_VTRW_Rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_GeoFence_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_GeoFence_Copy(
  tdefault_stack_Cohda_GeoFence * pDst,
  const tdefault_stack_Cohda_GeoFence * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_GeoFence_main_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_GeoFence_main_Copy(
  tdefault_stack_Cohda_GeoFence_main * pDst,
  const tdefault_stack_Cohda_GeoFence_main * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_GeoFence_ray_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_GeoFence_ray_Copy(
  tdefault_stack_Cohda_GeoFence_ray * pDst,
  const tdefault_stack_Cohda_GeoFence_ray * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_GeoFence_read_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_GeoFence_read_Copy(
  tdefault_stack_Cohda_GeoFence_read * pDst,
  const tdefault_stack_Cohda_GeoFence_read * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_HMI_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_HMI_Copy(
  tdefault_stack_Cohda_HMI * pDst,
  const tdefault_stack_Cohda_HMI * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_IVI_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_IVI_Copy(
  tdefault_stack_Cohda_IVI * pDst,
  const tdefault_stack_Cohda_IVI * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LDM_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LDM_Copy(
  tdefault_stack_Cohda_LDM * pDst,
  const tdefault_stack_Cohda_LDM * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LDM_ldm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LDM_ldm_Copy(
  tdefault_stack_Cohda_LDM_ldm * pDst,
  const tdefault_stack_Cohda_LDM_ldm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LDM_ldm_online_backup_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LDM_ldm_online_backup_Copy(
  tdefault_stack_Cohda_LDM_ldm_online_backup * pDst,
  const tdefault_stack_Cohda_LDM_ldm_online_backup * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LDM_ldm_sql_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LDM_ldm_sql_Copy(
  tdefault_stack_Cohda_LDM_ldm_sql * pDst,
  const tdefault_stack_Cohda_LDM_ldm_sql * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LDM_ldm_thread_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LDM_ldm_thread_Copy(
  tdefault_stack_Cohda_LDM_ldm_thread * pDst,
  const tdefault_stack_Cohda_LDM_ldm_thread * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_LTE_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_LTE_Copy(
  tdefault_stack_Cohda_LTE * pDst,
  const tdefault_stack_Cohda_LTE * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PC5_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PC5_Copy(
  tdefault_stack_Cohda_PC5 * pDst,
  const tdefault_stack_Cohda_PC5 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_Copy(
  tdefault_stack_Cohda_PH * pDst,
  const tdefault_stack_Cohda_PH * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_api_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_api_Copy(
  tdefault_stack_Cohda_PH_lph_api * pDst,
  const tdefault_stack_Cohda_PH_lph_api * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_circular_buffer_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_circular_buffer_Copy(
  tdefault_stack_Cohda_PH_lph_circular_buffer * pDst,
  const tdefault_stack_Cohda_PH_lph_circular_buffer * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_concise_algr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_concise_algr_Copy(
  tdefault_stack_Cohda_PH_lph_concise_algr * pDst,
  const tdefault_stack_Cohda_PH_lph_concise_algr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_haversine_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_haversine_Copy(
  tdefault_stack_Cohda_PH_lph_haversine * pDst,
  const tdefault_stack_Cohda_PH_lph_haversine * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_iir_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_iir_Copy(
  tdefault_stack_Cohda_PH_lph_iir * pDst,
  const tdefault_stack_Cohda_PH_lph_iir * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_kalman_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_kalman_Copy(
  tdefault_stack_Cohda_PH_lph_kalman * pDst,
  const tdefault_stack_Cohda_PH_lph_kalman * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_leap_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_leap_Copy(
  tdefault_stack_Cohda_PH_lph_leap * pDst,
  const tdefault_stack_Cohda_PH_lph_leap * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_lib_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_lib_Copy(
  tdefault_stack_Cohda_PH_lph_lib * pDst,
  const tdefault_stack_Cohda_PH_lph_lib * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_ph_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_ph_Copy(
  tdefault_stack_Cohda_PH_lph_ph * pDst,
  const tdefault_stack_Cohda_PH_lph_ph * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_pos_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_pos_Copy(
  tdefault_stack_Cohda_PH_lph_pos * pDst,
  const tdefault_stack_Cohda_PH_lph_pos * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_pos_api_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_pos_api_Copy(
  tdefault_stack_Cohda_PH_lph_pos_api * pDst,
  const tdefault_stack_Cohda_PH_lph_pos_api * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_poshandler_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_poshandler_Copy(
  tdefault_stack_Cohda_PH_lph_poshandler * pDst,
  const tdefault_stack_Cohda_PH_lph_poshandler * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_tai_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_tai_Copy(
  tdefault_stack_Cohda_PH_lph_tai * pDst,
  const tdefault_stack_Cohda_PH_lph_tai * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PH_lph_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PH_lph_thr_Copy(
  tdefault_stack_Cohda_PH_lph_thr * pDst,
  const tdefault_stack_Cohda_PH_lph_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PP_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PP_Copy(
  tdefault_stack_Cohda_PP * pDst,
  const tdefault_stack_Cohda_PP * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_PP_lph_pp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_PP_lph_pp_Copy(
  tdefault_stack_Cohda_PP_lph_pp * pDst,
  const tdefault_stack_Cohda_PP_lph_pp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_QTI_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_QTI_Copy(
  tdefault_stack_Cohda_QTI * pDst,
  const tdefault_stack_Cohda_QTI * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_RPS_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_RPS_Copy(
  tdefault_stack_Cohda_RPS * pDst,
  const tdefault_stack_Cohda_RPS * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_RSICN_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_RSICN_Copy(
  tdefault_stack_Cohda_RSICN * pDst,
  const tdefault_stack_Cohda_RSICN * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_SPATMAP_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_SPATMAP_Copy(
  tdefault_stack_Cohda_SPATMAP * pDst,
  const tdefault_stack_Cohda_SPATMAP * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_SPATMAP_spat_cn_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_SPATMAP_spat_cn_rx_Copy(
  tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pDst,
  const tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_SPATMAP_spat_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_SPATMAP_spat_rx_Copy(
  tdefault_stack_Cohda_SPATMAP_spat_rx * pDst,
  const tdefault_stack_Cohda_SPATMAP_spat_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_SPATMAP_spat_utils_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_SPATMAP_spat_utils_Copy(
  tdefault_stack_Cohda_SPATMAP_spat_utils * pDst,
  const tdefault_stack_Cohda_SPATMAP_spat_utils * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_Copy(
  tdefault_stack_Cohda_Stack * pDst,
  const tdefault_stack_Cohda_Stack * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_dump_stats_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_dump_stats_Copy(
  tdefault_stack_Cohda_Stack_dump_stats * pDst,
  const tdefault_stack_Cohda_Stack_dump_stats * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_fac_1609_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_fac_1609_Copy(
  tdefault_stack_Cohda_Stack_fac_1609 * pDst,
  const tdefault_stack_Cohda_Stack_fac_1609 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609_dot2_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609_dot2_Copy(
  tdefault_stack_Cohda_Stackfac_1609_dot2 * pDst,
  const tdefault_stack_Cohda_Stackfac_1609_dot2 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609dot2_dot2_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_Copy(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pDst,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Copy(
  tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pDst,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609_j2735_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609_j2735_Copy(
  tdefault_stack_Cohda_Stackfac_1609_j2735 * pDst,
  const tdefault_stack_Cohda_Stackfac_1609_j2735 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_common_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_common_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_map_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_map_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_message_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_message_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609_j2945cc_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609_j2945cc_Copy(
  tdefault_stack_Cohda_Stackfac_1609_j2945cc * pDst,
  const tdefault_stack_Cohda_Stackfac_1609_j2945cc * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Copy(
  tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pDst,
  const tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609_p1609_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609_p1609_tx_Copy(
  tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pDst,
  const tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Copy(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pDst,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Copy(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pDst,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Copy(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pDst,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Copy(
  tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pDst,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609_time_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609_time_Copy(
  tdefault_stack_Cohda_Stackfac_1609_time * pDst,
  const tdefault_stack_Cohda_Stackfac_1609_time * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_1609time_time_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_1609time_time_thr_Copy(
  tdefault_stack_Cohda_Stackfac_1609time_time_thr * pDst,
  const tdefault_stack_Cohda_Stackfac_1609time_time_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_fac_cn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_fac_cn_Copy(
  tdefault_stack_Cohda_Stack_fac_cn * pDst,
  const tdefault_stack_Cohda_Stack_fac_cn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cn_libcnfac_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cn_libcnfac_Copy(
  tdefault_stack_Cohda_Stackfac_cn_libcnfac * pDst,
  const tdefault_stack_Cohda_Stackfac_cn_libcnfac * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cn_libsaecsec_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cn_libsaecsec_Copy(
  tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pDst,
  const tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cn_saec_bsm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cn_saec_bsm_Copy(
  tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pDst,
  const tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Copy(
  tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pDst,
  const tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cn_saec_trx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cn_saec_trx_Copy(
  tdefault_stack_Cohda_Stackfac_cn_saec_trx * pDst,
  const tdefault_stack_Cohda_Stackfac_cn_saec_trx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Copy(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pDst,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Copy(
  tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pDst,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_fac_its_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_fac_its_Copy(
  tdefault_stack_Cohda_Stack_fac_its * pDst,
  const tdefault_stack_Cohda_Stack_fac_its * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_cam_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_cam_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_cam * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cam * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_cpm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_cpm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_denm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_denm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_denm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_denm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_evcsn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_evcsn_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_imzm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_imzm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_ivi_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_ivi_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_map_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_map_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_map * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_map * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_mcdm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_mcdm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_msg_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_msg_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_msg * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_msg * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_pmm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_pmm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_rtcm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_rtcm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_sa_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_sa_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_sa * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_sa * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_spat_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_spat_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_spat * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_spat * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_srmssm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_srmssm_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_toll_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_toll_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_toll * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_toll * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_trx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_trx_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_trx * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_trx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_uppertester_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_uppertester_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Copy(
  tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pDst,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_util_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_util_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_util * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_util * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_etsi_vam_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_etsi_vam_Copy(
  tdefault_stack_Cohda_Stackfac_its_etsi_vam * pDst,
  const tdefault_stack_Cohda_Stackfac_its_etsi_vam * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_its_libitsfacilities_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_its_libitsfacilities_Copy(
  tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pDst,
  const tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Copy(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pDst,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Copy(
  tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pDst,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_interface_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_interface_Copy(
  tdefault_stack_Cohda_Stack_interface * pDst,
  const tdefault_stack_Cohda_Stack_interface * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackinterface_aerolink_scms_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackinterface_aerolink_scms_Copy(
  tdefault_stack_Cohda_Stackinterface_aerolink_scms * pDst,
  const tdefault_stack_Cohda_Stackinterface_aerolink_scms * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_net_1609_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_net_1609_Copy(
  tdefault_stack_Cohda_Stack_net_1609 * pDst,
  const tdefault_stack_Cohda_Stack_net_1609 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609_dot3_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609_dot3_Copy(
  tdefault_stack_Cohda_Stacknet_1609_dot3 * pDst,
  const tdefault_stack_Cohda_Stacknet_1609_dot3 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot3_wsmp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3_wsmp_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609_dot4_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609_dot4_Copy(
  tdefault_stack_Cohda_Stacknet_1609_dot4 * pDst,
  const tdefault_stack_Cohda_Stacknet_1609_dot4 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4_wmac_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4_wmac_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Copy(
  tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_net_cn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_net_cn_Copy(
  tdefault_stack_Cohda_Stack_net_cn * pDst,
  const tdefault_stack_Cohda_Stack_net_cn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cn_libcnnet_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cn_libcnnet_Copy(
  tdefault_stack_Cohda_Stacknet_cn_libcnnet * pDst,
  const tdefault_stack_Cohda_Stacknet_cn_libcnnet * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Copy(
  tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pDst,
  const tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cn_saec_pc5_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cn_saec_pc5_Copy(
  tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pDst,
  const tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Copy(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Copy(
  tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_net_its_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_net_its_Copy(
  tdefault_stack_Cohda_Stack_net_its * pDst,
  const tdefault_stack_Cohda_Stack_net_its * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_3gpp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_3gpp_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_btp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_btp_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_btp * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_btp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_dcc_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_dcc_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_g5_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_g5_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_gn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_gn6_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn6_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_etsi_pc5_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_etsi_pc5_Copy(
  tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pDst,
  const tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Copy(
  tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pDst,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_libc2xsec_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_libc2xsec_Copy(
  tdefault_stack_Cohda_Stacknet_its_libc2xsec * pDst,
  const tdefault_stack_Cohda_Stacknet_its_libc2xsec * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Copy(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pDst,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Copy(
  tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pDst,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_libitsnet_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_libitsnet_Copy(
  tdefault_stack_Cohda_Stacknet_its_libitsnet * pDst,
  const tdefault_stack_Cohda_Stacknet_its_libitsnet * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Copy(
  tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pDst,
  const tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Copy(
  tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pDst,
  const tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacknet_its_udp_btp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacknet_its_udp_btp_Copy(
  tdefault_stack_Cohda_Stacknet_its_udp_btp * pDst,
  const tdefault_stack_Cohda_Stacknet_its_udp_btp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_plat_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_plat_Copy(
  tdefault_stack_Cohda_Stack_plat * pDst,
  const tdefault_stack_Cohda_Stack_plat * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplat_libplat_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplat_libplat_Copy(
  tdefault_stack_Cohda_Stackplat_libplat * pDst,
  const tdefault_stack_Cohda_Stackplat_libplat * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Copy(
  tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pDst,
  const tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplat_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplat_log_Copy(
  tdefault_stack_Cohda_Stackplat_log * pDst,
  const tdefault_stack_Cohda_Stackplat_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_log_Copy(
  tdefault_stack_Cohda_Stackplatlog_log * pDst,
  const tdefault_stack_Cohda_Stackplatlog_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_log_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_log_thr_Copy(
  tdefault_stack_Cohda_Stackplatlog_log_thr * pDst,
  const tdefault_stack_Cohda_Stackplatlog_log_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_log_udp_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_log_udp_Copy(
  tdefault_stack_Cohda_Stackplatlog_log_udp * pDst,
  const tdefault_stack_Cohda_Stackplatlog_log_udp * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_pcap_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_pcap_log_Copy(
  tdefault_stack_Cohda_Stackplatlog_pcap_log * pDst,
  const tdefault_stack_Cohda_Stackplatlog_pcap_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_pcap_raw_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_pcap_raw_Copy(
  tdefault_stack_Cohda_Stackplatlog_pcap_raw * pDst,
  const tdefault_stack_Cohda_Stackplatlog_pcap_raw * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_sys_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_sys_log_Copy(
  tdefault_stack_Cohda_Stackplatlog_sys_log * pDst,
  const tdefault_stack_Cohda_Stackplatlog_sys_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatlog_tcpdump_log_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatlog_tcpdump_log_Copy(
  tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pDst,
  const tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplat_persistence_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplat_persistence_Copy(
  tdefault_stack_Cohda_Stackplat_persistence * pDst,
  const tdefault_stack_Cohda_Stackplat_persistence * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplat_plugin_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplat_plugin_Copy(
  tdefault_stack_Cohda_Stackplat_plugin * pDst,
  const tdefault_stack_Cohda_Stackplat_plugin * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Copy(
  tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pDst,
  const tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplat_util_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplat_util_Copy(
  tdefault_stack_Cohda_Stackplat_util * pDst,
  const tdefault_stack_Cohda_Stackplat_util * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatutil_Inhibit_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatutil_Inhibit_Copy(
  tdefault_stack_Cohda_Stackplatutil_Inhibit * pDst,
  const tdefault_stack_Cohda_Stackplatutil_Inhibit * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatutil_PacketBuffer_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatutil_PacketBuffer_Copy(
  tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pDst,
  const tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatutil_thread_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatutil_thread_Copy(
  tdefault_stack_Cohda_Stackplatutil_thread * pDst,
  const tdefault_stack_Cohda_Stackplatutil_thread * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatutil_util_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatutil_util_Copy(
  tdefault_stack_Cohda_Stackplatutil_util * pDst,
  const tdefault_stack_Cohda_Stackplatutil_util * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stackplatutil_worker_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stackplatutil_worker_Copy(
  tdefault_stack_Cohda_Stackplatutil_worker * pDst,
  const tdefault_stack_Cohda_Stackplatutil_worker * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stack_sensors_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stack_sensors_Copy(
  tdefault_stack_Cohda_Stack_sensors * pDst,
  const tdefault_stack_Cohda_Stack_sensors * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_can_ipc_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_can_ipc_Copy(
  tdefault_stack_Cohda_Stacksensors_can_ipc * pDst,
  const tdefault_stack_Cohda_Stacksensors_can_ipc * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Copy(
  tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pDst,
  const tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_can_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_can_rx_Copy(
  tdefault_stack_Cohda_Stacksensors_can_rx * pDst,
  const tdefault_stack_Cohda_Stacksensors_can_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Copy(
  tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pDst,
  const tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_can_vsc3_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_can_vsc3_Copy(
  tdefault_stack_Cohda_Stacksensors_can_vsc3 * pDst,
  const tdefault_stack_Cohda_Stacksensors_can_vsc3 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Copy(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pDst,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Copy(
  tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pDst,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_gps_rx_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_gps_rx_Copy(
  tdefault_stack_Cohda_Stacksensors_gps_rx * pDst,
  const tdefault_stack_Cohda_Stacksensors_gps_rx * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Copy(
  tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pDst,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_ivi_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_ivi_Copy(
  tdefault_stack_Cohda_Stacksensors_ivi * pDst,
  const tdefault_stack_Cohda_Stacksensors_ivi * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsivi_ivi_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsivi_ivi_Copy(
  tdefault_stack_Cohda_Stacksensorsivi_ivi * pDst,
  const tdefault_stack_Cohda_Stacksensorsivi_ivi * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_rsicn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_rsicn_Copy(
  tdefault_stack_Cohda_Stacksensors_rsicn * pDst,
  const tdefault_stack_Cohda_Stacksensors_rsicn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsrsicn_rsicn_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_Copy(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pDst,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Copy(
  tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pDst,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensors_tim_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensors_tim_Copy(
  tdefault_stack_Cohda_Stacksensors_tim * pDst,
  const tdefault_stack_Cohda_Stacksensors_tim * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorstim_tim_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorstim_tim_Copy(
  tdefault_stack_Cohda_Stacksensorstim_tim * pDst,
  const tdefault_stack_Cohda_Stacksensorstim_tim * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_Stacksensorstim_tim_region_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_Stacksensorstim_tim_region_Copy(
  tdefault_stack_Cohda_Stacksensorstim_tim_region * pDst,
  const tdefault_stack_Cohda_Stacksensorstim_tim_region * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_Copy(
  tdefault_stack_Cohda_TA * pDst,
  const tdefault_stack_Cohda_TA * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_ADR_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_ADR_Copy(
  tdefault_stack_Cohda_TA_ADR * pDst,
  const tdefault_stack_Cohda_TA_ADR * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TAADR_JSON_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TAADR_JSON_Copy(
  tdefault_stack_Cohda_TAADR_JSON * pDst,
  const tdefault_stack_Cohda_TAADR_JSON * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_Map_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_Map_Copy(
  tdefault_stack_Cohda_TA_Map * pDst,
  const tdefault_stack_Cohda_TA_Map * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_Replay_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_Replay_Copy(
  tdefault_stack_Cohda_TA_Replay * pDst,
  const tdefault_stack_Cohda_TA_Replay * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_Threat_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_Threat_Copy(
  tdefault_stack_Cohda_TA_Threat * pDst,
  const tdefault_stack_Cohda_TA_Threat * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TA_Utils_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TA_Utils_Copy(
  tdefault_stack_Cohda_TA_Utils * pDst,
  const tdefault_stack_Cohda_TA_Utils * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_Copy(
  tdefault_stack_Cohda_TC * pDst,
  const tdefault_stack_Cohda_TC * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Copy(
  tdefault_stack_Cohda_TC_TC * pDst,
  const tdefault_stack_Cohda_TC_TC * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Classify_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Classify_Copy(
  tdefault_stack_Cohda_TC_TC_Classify * pDst,
  const tdefault_stack_Cohda_TC_TC_Classify * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_ETSI_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_ETSI_Copy(
  tdefault_stack_Cohda_TC_TC_ETSI * pDst,
  const tdefault_stack_Cohda_TC_TC_ETSI * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Ext_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Ext_Copy(
  tdefault_stack_Cohda_TC_TC_Ext * pDst,
  const tdefault_stack_Cohda_TC_TC_Ext * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_J2735_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_J2735_Copy(
  tdefault_stack_Cohda_TC_TC_J2735 * pDst,
  const tdefault_stack_Cohda_TC_TC_J2735 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_J3224_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_J3224_Copy(
  tdefault_stack_Cohda_TC_TC_J3224 * pDst,
  const tdefault_stack_Cohda_TC_TC_J3224 * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Remote_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Remote_Copy(
  tdefault_stack_Cohda_TC_TC_Remote * pDst,
  const tdefault_stack_Cohda_TC_TC_Remote * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_SAEC_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_SAEC_Copy(
  tdefault_stack_Cohda_TC_TC_SAEC * pDst,
  const tdefault_stack_Cohda_TC_TC_SAEC * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Thread_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Thread_Copy(
  tdefault_stack_Cohda_TC_TC_Thread * pDst,
  const tdefault_stack_Cohda_TC_TC_Thread * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TC_TC_Util_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TC_TC_Util_Copy(
  tdefault_stack_Cohda_TC_TC_Util * pDst,
  const tdefault_stack_Cohda_TC_TC_Util * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TIM_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TIM_Copy(
  tdefault_stack_Cohda_TIM * pDst,
  const tdefault_stack_Cohda_TIM * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_TM_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_TM_Copy(
  tdefault_stack_Cohda_TM * pDst,
  const tdefault_stack_Cohda_TM * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_UBX_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_UBX_Copy(
  tdefault_stack_Cohda_UBX * pDst,
  const tdefault_stack_Cohda_UBX * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_Copy(
  tdefault_stack_Cohda_VS * pDst,
  const tdefault_stack_Cohda_VS * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_vstate_data_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_vstate_data_Copy(
  tdefault_stack_Cohda_VS_vstate_data * pDst,
  const tdefault_stack_Cohda_VS_vstate_data * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_vstate_gen_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_vstate_gen_Copy(
  tdefault_stack_Cohda_VS_vstate_gen * pDst,
  const tdefault_stack_Cohda_VS_vstate_gen * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_vstate_skel_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_vstate_skel_Copy(
  tdefault_stack_Cohda_VS_vstate_skel * pDst,
  const tdefault_stack_Cohda_VS_vstate_skel * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_vstate_stub_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_vstate_stub_Copy(
  tdefault_stack_Cohda_VS_vstate_stub * pDst,
  const tdefault_stack_Cohda_VS_vstate_stub * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VS_vstate_thr_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VS_vstate_thr_Copy(
  tdefault_stack_Cohda_VS_vstate_thr * pDst,
  const tdefault_stack_Cohda_VS_vstate_thr * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_Cohda_VehicleConfig_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_Cohda_VehicleConfig_Copy(
  tdefault_stack_Cohda_VehicleConfig * pDst,
  const tdefault_stack_Cohda_VehicleConfig * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_J2945CC_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_J2945CC_Copy(
  tdefault_stack_J2945CC * pDst,
  const tdefault_stack_J2945CC * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_SAEC_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_SAEC_Copy(
  tdefault_stack_SAEC * pDst,
  const tdefault_stack_SAEC * pSrc);

/**
 * @brief Deep copy
 *
 * Calls @ref default_stack_SAEC_TRX_Clean on pSrc
 * Use current settings if pSrc is NULL
 */
int  default_stack_SAEC_TRX_Copy(
  tdefault_stack_SAEC_TRX * pDst,
  const tdefault_stack_SAEC_TRX * pSrc);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Comp(
  const tdefault_stack * pA,
  const tdefault_stack * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_ADR_Comp(
  const tdefault_stack_Cohda_ADR * pA,
  const tdefault_stack_Cohda_ADR * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_MAW_Comp(
  const tdefault_stack_Cohda_App_MAW * pA,
  const tdefault_stack_Cohda_App_MAW * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_MAW_MAW_Comp(
  const tdefault_stack_Cohda_App_MAW_MAW * pA,
  const tdefault_stack_Cohda_App_MAW_MAW * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_MAW_MAW_rx_Comp(
  const tdefault_stack_Cohda_App_MAW_MAW_rx * pA,
  const tdefault_stack_Cohda_App_MAW_MAW_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_PCW_Comp(
  const tdefault_stack_Cohda_App_PCW * pA,
  const tdefault_stack_Cohda_App_PCW * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_PCW_PCW_Comp(
  const tdefault_stack_Cohda_App_PCW_PCW * pA,
  const tdefault_stack_Cohda_App_PCW_PCW * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_PCW_PCW_rx_Comp(
  const tdefault_stack_Cohda_App_PCW_PCW_rx * pA,
  const tdefault_stack_Cohda_App_PCW_PCW_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_UAVD_Comp(
  const tdefault_stack_Cohda_App_UAVD * pA,
  const tdefault_stack_Cohda_App_UAVD * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_VTRW_Comp(
  const tdefault_stack_Cohda_App_VTRW * pA,
  const tdefault_stack_Cohda_App_VTRW * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_App_VTRW_Rx_Comp(
  const tdefault_stack_Cohda_App_VTRW_Rx * pA,
  const tdefault_stack_Cohda_App_VTRW_Rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_GeoFence_Comp(
  const tdefault_stack_Cohda_GeoFence * pA,
  const tdefault_stack_Cohda_GeoFence * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_GeoFence_main_Comp(
  const tdefault_stack_Cohda_GeoFence_main * pA,
  const tdefault_stack_Cohda_GeoFence_main * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_GeoFence_ray_Comp(
  const tdefault_stack_Cohda_GeoFence_ray * pA,
  const tdefault_stack_Cohda_GeoFence_ray * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_GeoFence_read_Comp(
  const tdefault_stack_Cohda_GeoFence_read * pA,
  const tdefault_stack_Cohda_GeoFence_read * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_HMI_Comp(
  const tdefault_stack_Cohda_HMI * pA,
  const tdefault_stack_Cohda_HMI * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_IVI_Comp(
  const tdefault_stack_Cohda_IVI * pA,
  const tdefault_stack_Cohda_IVI * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LDM_Comp(
  const tdefault_stack_Cohda_LDM * pA,
  const tdefault_stack_Cohda_LDM * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LDM_ldm_Comp(
  const tdefault_stack_Cohda_LDM_ldm * pA,
  const tdefault_stack_Cohda_LDM_ldm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LDM_ldm_online_backup_Comp(
  const tdefault_stack_Cohda_LDM_ldm_online_backup * pA,
  const tdefault_stack_Cohda_LDM_ldm_online_backup * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LDM_ldm_sql_Comp(
  const tdefault_stack_Cohda_LDM_ldm_sql * pA,
  const tdefault_stack_Cohda_LDM_ldm_sql * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LDM_ldm_thread_Comp(
  const tdefault_stack_Cohda_LDM_ldm_thread * pA,
  const tdefault_stack_Cohda_LDM_ldm_thread * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_LTE_Comp(
  const tdefault_stack_Cohda_LTE * pA,
  const tdefault_stack_Cohda_LTE * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PC5_Comp(
  const tdefault_stack_Cohda_PC5 * pA,
  const tdefault_stack_Cohda_PC5 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_Comp(
  const tdefault_stack_Cohda_PH * pA,
  const tdefault_stack_Cohda_PH * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_api_Comp(
  const tdefault_stack_Cohda_PH_lph_api * pA,
  const tdefault_stack_Cohda_PH_lph_api * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_circular_buffer_Comp(
  const tdefault_stack_Cohda_PH_lph_circular_buffer * pA,
  const tdefault_stack_Cohda_PH_lph_circular_buffer * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_concise_algr_Comp(
  const tdefault_stack_Cohda_PH_lph_concise_algr * pA,
  const tdefault_stack_Cohda_PH_lph_concise_algr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_haversine_Comp(
  const tdefault_stack_Cohda_PH_lph_haversine * pA,
  const tdefault_stack_Cohda_PH_lph_haversine * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_iir_Comp(
  const tdefault_stack_Cohda_PH_lph_iir * pA,
  const tdefault_stack_Cohda_PH_lph_iir * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_kalman_Comp(
  const tdefault_stack_Cohda_PH_lph_kalman * pA,
  const tdefault_stack_Cohda_PH_lph_kalman * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_leap_Comp(
  const tdefault_stack_Cohda_PH_lph_leap * pA,
  const tdefault_stack_Cohda_PH_lph_leap * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_lib_Comp(
  const tdefault_stack_Cohda_PH_lph_lib * pA,
  const tdefault_stack_Cohda_PH_lph_lib * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_ph_Comp(
  const tdefault_stack_Cohda_PH_lph_ph * pA,
  const tdefault_stack_Cohda_PH_lph_ph * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_pos_Comp(
  const tdefault_stack_Cohda_PH_lph_pos * pA,
  const tdefault_stack_Cohda_PH_lph_pos * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_pos_api_Comp(
  const tdefault_stack_Cohda_PH_lph_pos_api * pA,
  const tdefault_stack_Cohda_PH_lph_pos_api * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_poshandler_Comp(
  const tdefault_stack_Cohda_PH_lph_poshandler * pA,
  const tdefault_stack_Cohda_PH_lph_poshandler * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_tai_Comp(
  const tdefault_stack_Cohda_PH_lph_tai * pA,
  const tdefault_stack_Cohda_PH_lph_tai * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PH_lph_thr_Comp(
  const tdefault_stack_Cohda_PH_lph_thr * pA,
  const tdefault_stack_Cohda_PH_lph_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PP_Comp(
  const tdefault_stack_Cohda_PP * pA,
  const tdefault_stack_Cohda_PP * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_PP_lph_pp_Comp(
  const tdefault_stack_Cohda_PP_lph_pp * pA,
  const tdefault_stack_Cohda_PP_lph_pp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_QTI_Comp(
  const tdefault_stack_Cohda_QTI * pA,
  const tdefault_stack_Cohda_QTI * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_RPS_Comp(
  const tdefault_stack_Cohda_RPS * pA,
  const tdefault_stack_Cohda_RPS * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_RSICN_Comp(
  const tdefault_stack_Cohda_RSICN * pA,
  const tdefault_stack_Cohda_RSICN * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_SPATMAP_Comp(
  const tdefault_stack_Cohda_SPATMAP * pA,
  const tdefault_stack_Cohda_SPATMAP * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_SPATMAP_spat_cn_rx_Comp(
  const tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pA,
  const tdefault_stack_Cohda_SPATMAP_spat_cn_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_SPATMAP_spat_rx_Comp(
  const tdefault_stack_Cohda_SPATMAP_spat_rx * pA,
  const tdefault_stack_Cohda_SPATMAP_spat_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_SPATMAP_spat_utils_Comp(
  const tdefault_stack_Cohda_SPATMAP_spat_utils * pA,
  const tdefault_stack_Cohda_SPATMAP_spat_utils * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_Comp(
  const tdefault_stack_Cohda_Stack * pA,
  const tdefault_stack_Cohda_Stack * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_dump_stats_Comp(
  const tdefault_stack_Cohda_Stack_dump_stats * pA,
  const tdefault_stack_Cohda_Stack_dump_stats * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_fac_1609_Comp(
  const tdefault_stack_Cohda_Stack_fac_1609 * pA,
  const tdefault_stack_Cohda_Stack_fac_1609 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609_dot2_Comp(
  const tdefault_stack_Cohda_Stackfac_1609_dot2 * pA,
  const tdefault_stack_Cohda_Stackfac_1609_dot2 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_Comp(
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pA,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609dot2_dot2_idchange_Comp(
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pA,
  const tdefault_stack_Cohda_Stackfac_1609dot2_dot2_idchange * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609_j2735_Comp(
  const tdefault_stack_Cohda_Stackfac_1609_j2735 * pA,
  const tdefault_stack_Cohda_Stackfac_1609_j2735 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_J2735_BSM_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_J2735_BSM * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_common_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_common * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_dot2_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_dot2 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_full_position_vector * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_map_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_map * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_message_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_message * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_data_management * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_probe_vehicle_data * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_road_side_alert * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_snapshot_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_snapshot * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_spat_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_spat * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_safetyextension * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j2735_vehicle_status * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2735_j3224_sdsm_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2735_j3224_sdsm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609_j2945cc_Comp(
  const tdefault_stack_Cohda_Stackfac_1609_j2945cc * pA,
  const tdefault_stack_Cohda_Stackfac_1609_j2945cc * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609j2945cc_j2945cc_Comp(
  const tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pA,
  const tdefault_stack_Cohda_Stackfac_1609j2945cc_j2945cc * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609_p1609_tx_Comp(
  const tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pA,
  const tdefault_stack_Cohda_Stackfac_1609_p1609_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl_Comp(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pA,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_fac_veh_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg_Comp(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pA,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_msg * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay_Comp(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pA,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_replay * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr_Comp(
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pA,
  const tdefault_stack_Cohda_Stackfac_1609p1609_tx_p1609_tx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609_time_Comp(
  const tdefault_stack_Cohda_Stackfac_1609_time * pA,
  const tdefault_stack_Cohda_Stackfac_1609_time * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_1609time_time_thr_Comp(
  const tdefault_stack_Cohda_Stackfac_1609time_time_thr * pA,
  const tdefault_stack_Cohda_Stackfac_1609time_time_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_fac_cn_Comp(
  const tdefault_stack_Cohda_Stack_fac_cn * pA,
  const tdefault_stack_Cohda_Stack_fac_cn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cn_libcnfac_Comp(
  const tdefault_stack_Cohda_Stackfac_cn_libcnfac * pA,
  const tdefault_stack_Cohda_Stackfac_cn_libcnfac * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cn_libsaecsec_Comp(
  const tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pA,
  const tdefault_stack_Cohda_Stackfac_cn_libsaecsec * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cn_saec_bsm_Comp(
  const tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pA,
  const tdefault_stack_Cohda_Stackfac_cn_saec_bsm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm_Comp(
  const tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pA,
  const tdefault_stack_Cohda_Stackfac_cnsaec_bsm_saec_bsm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cn_saec_trx_Comp(
  const tdefault_stack_Cohda_Stackfac_cn_saec_trx * pA,
  const tdefault_stack_Cohda_Stackfac_cn_saec_trx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action_Comp(
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pA,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_action * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr_Comp(
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pA,
  const tdefault_stack_Cohda_Stackfac_cnsaec_trx_saec_trx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_fac_its_Comp(
  const tdefault_stack_Cohda_Stack_fac_its * pA,
  const tdefault_stack_Cohda_Stack_fac_its * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_cam_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_cam * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cam * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_cpm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_cpm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_denm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_denm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_denm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_evcsn_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_evcsn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_imzm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_imzm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_ivi_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_ivi * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_map_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_map * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_map * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_mcdm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_mcdm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_msg_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_msg * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_msg * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_pmm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_pmm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_rtcm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_rtcm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_sa_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_sa * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_sa * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_spat_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_spat * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_spat * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_srmssm_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_srmssm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_toll_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_toll * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_toll * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_trx_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_trx * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_trx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_fac_c2c * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_action * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_trx_etsi_trx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_uppertester_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_uppertester * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_btp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_cam * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_denm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_gn6 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_ivi * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_msg * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_spatmap * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_srmssm * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr_Comp(
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pA,
  const tdefault_stack_Cohda_Stackfac_itsetsi_uppertester_etsi_ut_udp_rx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_util_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_util * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_util * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_etsi_vam_Comp(
  const tdefault_stack_Cohda_Stackfac_its_etsi_vam * pA,
  const tdefault_stack_Cohda_Stackfac_its_etsi_vam * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_its_libitsfacilities_Comp(
  const tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pA,
  const tdefault_stack_Cohda_Stackfac_its_libitsfacilities * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log_Comp(
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pA,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt_Comp(
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pA,
  const tdefault_stack_Cohda_Stackfac_itslibitsfacilities_libitsfac_mgmt * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_interface_Comp(
  const tdefault_stack_Cohda_Stack_interface * pA,
  const tdefault_stack_Cohda_Stack_interface * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackinterface_aerolink_scms_Comp(
  const tdefault_stack_Cohda_Stackinterface_aerolink_scms * pA,
  const tdefault_stack_Cohda_Stackinterface_aerolink_scms * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_net_1609_Comp(
  const tdefault_stack_Cohda_Stack_net_1609 * pA,
  const tdefault_stack_Cohda_Stack_net_1609 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609_dot3_Comp(
  const tdefault_stack_Cohda_Stacknet_1609_dot3 * pA,
  const tdefault_stack_Cohda_Stacknet_1609_dot3 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot3_wsmp_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot3_wsmp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot3wsmp_dot3_wsmp_proto * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609_dot4_Comp(
  const tdefault_stack_Cohda_Stacknet_1609_dot4 * pA,
  const tdefault_stack_Cohda_Stacknet_1609_dot4 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4_wmac_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4_wmac * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_atk_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_data_netdev * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_eth_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tsf * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_llc_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_mgmt_netdev * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_qti_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_raw_netdev * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_sync_netdev * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_timing * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pA,
  const tdefault_stack_Cohda_Stacknet_1609dot4wmac_dot4_wmac_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_net_cn_Comp(
  const tdefault_stack_Cohda_Stack_net_cn * pA,
  const tdefault_stack_Cohda_Stack_net_cn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cn_libcnnet_Comp(
  const tdefault_stack_Cohda_Stacknet_cn_libcnnet * pA,
  const tdefault_stack_Cohda_Stacknet_cn_libcnnet * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt_Comp(
  const tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pA,
  const tdefault_stack_Cohda_Stacknet_cnlibcnnet_libcnnet_mgmt * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cn_saec_pc5_Comp(
  const tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pA,
  const tdefault_stack_Cohda_Stacknet_cn_saec_pc5 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pA,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pA,
  const tdefault_stack_Cohda_Stacknet_cnsaec_pc5_saec_pc5_qti_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_net_its_Comp(
  const tdefault_stack_Cohda_Stack_net_its * pA,
  const tdefault_stack_Cohda_Stack_net_its * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_3gpp_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_3gpp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_btp_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_btp * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_btp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_dcc_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_dcc * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_api * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_mgmt * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_dcc_etsi_dcc_stats * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_g5_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_g5 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_lib * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_mon * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_rx_replay * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_g5_etsi_g5_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_buffer * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_lib * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_neighbour * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_periodic * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_gn_etsi_gn_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_gn6_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_gn6 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_etsi_pc5_Comp(
  const tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pA,
  const tdefault_stack_Cohda_Stacknet_its_etsi_pc5 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_ctrl * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx_Comp(
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pA,
  const tdefault_stack_Cohda_Stacknet_itsetsi_pc5_etsi_pc5_tx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_libc2xsec_Comp(
  const tdefault_stack_Cohda_Stacknet_its_libc2xsec * pA,
  const tdefault_stack_Cohda_Stacknet_its_libc2xsec * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_Comp(
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pA,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink_Comp(
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pA,
  const tdefault_stack_Cohda_Stacknet_itslibc2xsec_cohda_sec_aerolink * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_libitsnet_Comp(
  const tdefault_stack_Cohda_Stacknet_its_libitsnet * pA,
  const tdefault_stack_Cohda_Stacknet_its_libitsnet * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt_Comp(
  const tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pA,
  const tdefault_stack_Cohda_Stacknet_itslibitsnet_libitsnet_mgmt * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log_Comp(
  const tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pA,
  const tdefault_stack_Cohda_Stacknet_itslibitsnetlibitsnet_mgmt_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacknet_its_udp_btp_Comp(
  const tdefault_stack_Cohda_Stacknet_its_udp_btp * pA,
  const tdefault_stack_Cohda_Stacknet_its_udp_btp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_plat_Comp(
  const tdefault_stack_Cohda_Stack_plat * pA,
  const tdefault_stack_Cohda_Stack_plat * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplat_libplat_Comp(
  const tdefault_stack_Cohda_Stackplat_libplat * pA,
  const tdefault_stack_Cohda_Stackplat_libplat * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlibplat_libplat_mgmt_Comp(
  const tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pA,
  const tdefault_stack_Cohda_Stackplatlibplat_libplat_mgmt * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplat_log_Comp(
  const tdefault_stack_Cohda_Stackplat_log * pA,
  const tdefault_stack_Cohda_Stackplat_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_log_Comp(
  const tdefault_stack_Cohda_Stackplatlog_log * pA,
  const tdefault_stack_Cohda_Stackplatlog_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_log_thr_Comp(
  const tdefault_stack_Cohda_Stackplatlog_log_thr * pA,
  const tdefault_stack_Cohda_Stackplatlog_log_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_log_udp_Comp(
  const tdefault_stack_Cohda_Stackplatlog_log_udp * pA,
  const tdefault_stack_Cohda_Stackplatlog_log_udp * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_pcap_log_Comp(
  const tdefault_stack_Cohda_Stackplatlog_pcap_log * pA,
  const tdefault_stack_Cohda_Stackplatlog_pcap_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_pcap_raw_Comp(
  const tdefault_stack_Cohda_Stackplatlog_pcap_raw * pA,
  const tdefault_stack_Cohda_Stackplatlog_pcap_raw * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_sys_log_Comp(
  const tdefault_stack_Cohda_Stackplatlog_sys_log * pA,
  const tdefault_stack_Cohda_Stackplatlog_sys_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatlog_tcpdump_log_Comp(
  const tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pA,
  const tdefault_stack_Cohda_Stackplatlog_tcpdump_log * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplat_persistence_Comp(
  const tdefault_stack_Cohda_Stackplat_persistence * pA,
  const tdefault_stack_Cohda_Stackplat_persistence * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplat_plugin_Comp(
  const tdefault_stack_Cohda_Stackplat_plugin * pA,
  const tdefault_stack_Cohda_Stackplat_plugin * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatplugin_v2xlib_plugin_Comp(
  const tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pA,
  const tdefault_stack_Cohda_Stackplatplugin_v2xlib_plugin * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplat_util_Comp(
  const tdefault_stack_Cohda_Stackplat_util * pA,
  const tdefault_stack_Cohda_Stackplat_util * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatutil_Inhibit_Comp(
  const tdefault_stack_Cohda_Stackplatutil_Inhibit * pA,
  const tdefault_stack_Cohda_Stackplatutil_Inhibit * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatutil_PacketBuffer_Comp(
  const tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pA,
  const tdefault_stack_Cohda_Stackplatutil_PacketBuffer * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatutil_thread_Comp(
  const tdefault_stack_Cohda_Stackplatutil_thread * pA,
  const tdefault_stack_Cohda_Stackplatutil_thread * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatutil_util_Comp(
  const tdefault_stack_Cohda_Stackplatutil_util * pA,
  const tdefault_stack_Cohda_Stackplatutil_util * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stackplatutil_worker_Comp(
  const tdefault_stack_Cohda_Stackplatutil_worker * pA,
  const tdefault_stack_Cohda_Stackplatutil_worker * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stack_sensors_Comp(
  const tdefault_stack_Cohda_Stack_sensors * pA,
  const tdefault_stack_Cohda_Stack_sensors * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_can_ipc_Comp(
  const tdefault_stack_Cohda_Stacksensors_can_ipc * pA,
  const tdefault_stack_Cohda_Stacksensors_can_ipc * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorscan_ipc_can_ipc_Comp(
  const tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pA,
  const tdefault_stack_Cohda_Stacksensorscan_ipc_can_ipc * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_can_rx_Comp(
  const tdefault_stack_Cohda_Stacksensors_can_rx * pA,
  const tdefault_stack_Cohda_Stacksensors_can_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorscan_rx_can_rx_thr_Comp(
  const tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pA,
  const tdefault_stack_Cohda_Stacksensorscan_rx_can_rx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_can_vsc3_Comp(
  const tdefault_stack_Cohda_Stacksensors_can_vsc3 * pA,
  const tdefault_stack_Cohda_Stacksensors_can_vsc3 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_can_vsc3_Comp(
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pA,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_can_vsc3 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorscan_vsc3_vsc3obe_Comp(
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pA,
  const tdefault_stack_Cohda_Stacksensorscan_vsc3_vsc3obe * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_gps_rx_Comp(
  const tdefault_stack_Cohda_Stacksensors_gps_rx * pA,
  const tdefault_stack_Cohda_Stacksensors_gps_rx * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fake * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_fixed * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_gpsd * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_qti * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_replay * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr_Comp(
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pA,
  const tdefault_stack_Cohda_Stacksensorsgps_rx_gps_rx_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_ivi_Comp(
  const tdefault_stack_Cohda_Stacksensors_ivi * pA,
  const tdefault_stack_Cohda_Stacksensors_ivi * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsivi_ivi_Comp(
  const tdefault_stack_Cohda_Stacksensorsivi_ivi * pA,
  const tdefault_stack_Cohda_Stacksensorsivi_ivi * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_rsicn_Comp(
  const tdefault_stack_Cohda_Stacksensors_rsicn * pA,
  const tdefault_stack_Cohda_Stacksensors_rsicn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_Comp(
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pA,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorsrsicn_rsicn_region_Comp(
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pA,
  const tdefault_stack_Cohda_Stacksensorsrsicn_rsicn_region * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensors_tim_Comp(
  const tdefault_stack_Cohda_Stacksensors_tim * pA,
  const tdefault_stack_Cohda_Stacksensors_tim * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorstim_tim_Comp(
  const tdefault_stack_Cohda_Stacksensorstim_tim * pA,
  const tdefault_stack_Cohda_Stacksensorstim_tim * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_Stacksensorstim_tim_region_Comp(
  const tdefault_stack_Cohda_Stacksensorstim_tim_region * pA,
  const tdefault_stack_Cohda_Stacksensorstim_tim_region * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_Comp(
  const tdefault_stack_Cohda_TA * pA,
  const tdefault_stack_Cohda_TA * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_ADR_Comp(
  const tdefault_stack_Cohda_TA_ADR * pA,
  const tdefault_stack_Cohda_TA_ADR * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TAADR_JSON_Comp(
  const tdefault_stack_Cohda_TAADR_JSON * pA,
  const tdefault_stack_Cohda_TAADR_JSON * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_Map_Comp(
  const tdefault_stack_Cohda_TA_Map * pA,
  const tdefault_stack_Cohda_TA_Map * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_Replay_Comp(
  const tdefault_stack_Cohda_TA_Replay * pA,
  const tdefault_stack_Cohda_TA_Replay * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_Threat_Comp(
  const tdefault_stack_Cohda_TA_Threat * pA,
  const tdefault_stack_Cohda_TA_Threat * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TA_Utils_Comp(
  const tdefault_stack_Cohda_TA_Utils * pA,
  const tdefault_stack_Cohda_TA_Utils * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_Comp(
  const tdefault_stack_Cohda_TC * pA,
  const tdefault_stack_Cohda_TC * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Comp(
  const tdefault_stack_Cohda_TC_TC * pA,
  const tdefault_stack_Cohda_TC_TC * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Classify_Comp(
  const tdefault_stack_Cohda_TC_TC_Classify * pA,
  const tdefault_stack_Cohda_TC_TC_Classify * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_ETSI_Comp(
  const tdefault_stack_Cohda_TC_TC_ETSI * pA,
  const tdefault_stack_Cohda_TC_TC_ETSI * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Ext_Comp(
  const tdefault_stack_Cohda_TC_TC_Ext * pA,
  const tdefault_stack_Cohda_TC_TC_Ext * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_J2735_Comp(
  const tdefault_stack_Cohda_TC_TC_J2735 * pA,
  const tdefault_stack_Cohda_TC_TC_J2735 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_J3224_Comp(
  const tdefault_stack_Cohda_TC_TC_J3224 * pA,
  const tdefault_stack_Cohda_TC_TC_J3224 * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Remote_Comp(
  const tdefault_stack_Cohda_TC_TC_Remote * pA,
  const tdefault_stack_Cohda_TC_TC_Remote * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_SAEC_Comp(
  const tdefault_stack_Cohda_TC_TC_SAEC * pA,
  const tdefault_stack_Cohda_TC_TC_SAEC * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Thread_Comp(
  const tdefault_stack_Cohda_TC_TC_Thread * pA,
  const tdefault_stack_Cohda_TC_TC_Thread * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TC_TC_Util_Comp(
  const tdefault_stack_Cohda_TC_TC_Util * pA,
  const tdefault_stack_Cohda_TC_TC_Util * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TIM_Comp(
  const tdefault_stack_Cohda_TIM * pA,
  const tdefault_stack_Cohda_TIM * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_TM_Comp(
  const tdefault_stack_Cohda_TM * pA,
  const tdefault_stack_Cohda_TM * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_UBX_Comp(
  const tdefault_stack_Cohda_UBX * pA,
  const tdefault_stack_Cohda_UBX * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_Comp(
  const tdefault_stack_Cohda_VS * pA,
  const tdefault_stack_Cohda_VS * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_vstate_data_Comp(
  const tdefault_stack_Cohda_VS_vstate_data * pA,
  const tdefault_stack_Cohda_VS_vstate_data * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_vstate_gen_Comp(
  const tdefault_stack_Cohda_VS_vstate_gen * pA,
  const tdefault_stack_Cohda_VS_vstate_gen * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_vstate_skel_Comp(
  const tdefault_stack_Cohda_VS_vstate_skel * pA,
  const tdefault_stack_Cohda_VS_vstate_skel * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_vstate_stub_Comp(
  const tdefault_stack_Cohda_VS_vstate_stub * pA,
  const tdefault_stack_Cohda_VS_vstate_stub * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VS_vstate_thr_Comp(
  const tdefault_stack_Cohda_VS_vstate_thr * pA,
  const tdefault_stack_Cohda_VS_vstate_thr * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_Cohda_VehicleConfig_Comp(
  const tdefault_stack_Cohda_VehicleConfig * pA,
  const tdefault_stack_Cohda_VehicleConfig * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_J2945CC_Comp(
  const tdefault_stack_J2945CC * pA,
  const tdefault_stack_J2945CC * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_SAEC_Comp(
  const tdefault_stack_SAEC * pA,
  const tdefault_stack_SAEC * pB);

/**
 * @brief Deep Compare
 *
 * Note that floating point comparisons are used.
 *
 * @param pA one
 * @param pB the other one
 *
 * @return 0 iff *pA is identical to *pB
 */
int  default_stack_SAEC_TRX_Comp(
  const tdefault_stack_SAEC_TRX * pA,
  const tdefault_stack_SAEC_TRX * pB);

/**
 * @brief Update "DebugLevel"s
 *
 * update main DebugLevel and friends.
 *
 * @param pRO Config to update DebugLevels with
 * @param DebugLevel Default Debug Level
 */
void default_stack_UpdateDebug(
  const tdefault_stack * pRO,
  int DebugLevel);

#ifdef __cplusplus
}
#endif
/**
 * @}
 */
